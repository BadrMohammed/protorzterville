"use strict";
(self.webpackChunkangular_sessions =
  self.webpackChunkangular_sessions || []).push([
  [179],
  {
    1110: (Lt, Fe, N) => {
      N.d(Fe, { r: () => Ie });
      var l = N(553);
      const B = (Re) => {
        let xe = "?";
        return (
          Object.entries(Re).map((oe, ge) => {
            0 !== ge && (xe += "&"), (xe += `${oe[0]}=${oe[1]}`);
          }),
          xe
        );
      };
      var Me = N(6661),
        _e = N(4769),
        we = N(9862);
      let Ie = (() => {
        class Re {
          constructor(oe) {
            (this._http = oe),
              (this.apiUrl = l.N.apiBaseUrl),
              (this.apiurlGet = Me.L),
              console.log("login service init");
          }
          login(oe) {
            return this._http.get(this.apiUrl + this.apiurlGet.login + B(oe));
          }
          logout() {
            localStorage.clear();
          }
          unauthLogin(oe, ge) {
            return this._http.get(
              this.apiUrl +
                this.apiurlGet.unauthLogin +
                B({ email: oe, password: ge })
            );
          }
          static #e = (this.ɵfac = function (ge) {
            return new (ge || Re)(_e.LFG(we.eN));
          });
          static #t = (this.ɵprov = _e.Yz7({
            token: Re,
            factory: Re.ɵfac,
            providedIn: "root",
          }));
        }
        return Re;
      })();
    },
    2490: (Lt, Fe, N) => {
      N.d(Fe, { r: () => Re });
      var l = N(4769),
        L = N(6814),
        B = N(7553);
      function Me(xe, oe) {
        1 & xe && l._UZ(0, "img", 4);
      }
      const _e = function (xe) {
        return ["button-title", xe];
      };
      function we(xe, oe) {
        if ((1 & xe && (l.TgZ(0, "p", 5), l._uU(1), l.qZA()), 2 & xe)) {
          const ge = l.oxw();
          l.Q6J("ngClass", l.VKq(2, _e, ge.buttonTitleClassName)),
            l.xp6(1),
            l.hij(" ", ge.buttonLabel, " ");
        }
      }
      const Ie = ["*"];
      let Re = (() => {
        class xe {
          constructor() {
            (this.className = ""),
              (this.hasIcon = !1),
              (this.buttonLabel = ""),
              (this.buttonTitleClassName = ""),
              (this.buttonType = "button");
          }
          onClick() {
            this.handleAction &&
              (this.item ? this.handleAction(this.item) : this.handleAction());
          }
          static #e = (this.ɵfac = function (Be) {
            return new (Be || xe)();
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: xe,
            selectors: [["app-button"]],
            inputs: {
              className: "className",
              hasIcon: "hasIcon",
              buttonLabel: "buttonLabel",
              buttonTitleClassName: "buttonTitleClassName",
              handleAction: "handleAction",
              routerLink: "routerLink",
              item: "item",
              buttonType: "buttonType",
            },
            ngContentSelectors: Ie,
            decls: 5,
            vars: 5,
            consts: [
              [3, "ngClass", "routerLink", "type", "click"],
              [1, "button-container"],
              [
                "alt",
                "arrow-right-secondary",
                "src",
                "assets/Fe-kit/svg/arrow-right-secondary.svg",
                4,
                "ngIf",
              ],
              [3, "ngClass", 4, "ngIf"],
              [
                "alt",
                "arrow-right-secondary",
                "src",
                "assets/Fe-kit/svg/arrow-right-secondary.svg",
              ],
              [3, "ngClass"],
            ],
            template: function (Be, et) {
              1 & Be &&
                (l.F$t(),
                l.TgZ(0, "button", 0),
                l.NdJ("click", function () {
                  return et.onClick();
                }),
                l.TgZ(1, "div", 1),
                l.Hsn(2),
                l.YNc(3, Me, 1, 0, "img", 2),
                l.YNc(4, we, 2, 4, "p", 3),
                l.qZA()()),
                2 & Be &&
                  (l.s9C("type", et.buttonType),
                  l.Q6J("ngClass", et.className)(
                    "routerLink",
                    et.routerLink && et.routerLink
                  ),
                  l.xp6(3),
                  l.Q6J("ngIf", et.hasIcon),
                  l.xp6(1),
                  l.Q6J("ngIf", et.buttonLabel));
            },
            dependencies: [L.mk, L.O5, B.rH],
          }));
        }
        return xe;
      })();
    },
    5198: (Lt, Fe, N) => {
      N.d(Fe, { F: () => ta });
      var l = N(6825);
      function L(o, di) {
        return [
          ...(di && "before" === di.animateChildren
            ? [(0, l.IO)("@*", (0, l.pV)(), { optional: !0 })]
            : []),
          (0, l.ru)([
            (0, l._7)(o),
            ...(di && di.animateChildren && "together" !== di.animateChildren
              ? []
              : [(0, l.IO)("@*", (0, l.pV)(), { optional: !0 })]),
          ]),
          ...(di && "after" === di.animateChildren
            ? [(0, l.IO)("@*", (0, l.pV)(), { optional: !0 })]
            : []),
        ];
      }
      function Di(o) {
        return (0, l.X$)((o && o.anchor) || "fadeInUpOnEnter", [
          (0, l.eR)(
            ":enter",
            [
              (0, l.oB)({ visibility: "hidden" }),
              ...L(
                (0, l.oQ)([
                  (0, l.jt)(
                    "{{duration}}ms {{delay}}ms",
                    (0, l.F4)([
                      (0, l.oB)({
                        visibility: "visible",
                        opacity: 0,
                        transform: "translate3d(0, {{translate}}, 0)",
                        easing: "ease",
                        offset: 0,
                      }),
                      (0, l.oB)({
                        opacity: 1,
                        transform: "translate3d(0, 0, 0)",
                        easing: "ease",
                        offset: 1,
                      }),
                    ])
                  ),
                ]),
                o
              ),
            ],
            {
              params: {
                delay: (o && o.delay) || 0,
                duration: (o && o.duration) || 1e3,
                translate: (o && o.translate) || "100%",
              },
            }
          ),
        ]);
      }
      var Eu = N(557),
        un = N(4769),
        ti = N(6814),
        Du = N(7553),
        mo = N(7509),
        Cu = N(6133);
      function vs(o, di) {
        if ((1 & o && un._UZ(0, "img", 16), 2 & o)) {
          const Rs = un.oxw().$implicit;
          un.s9C("src", Rs.image_url, un.LSH), un.Q6J("@enter", void 0);
        }
      }
      const yo = function (o) {
        return [o];
      };
      function Zl(o, di) {
        if (1 & o) {
          const Rs = un.EpF();
          un.TgZ(0, "slide")(1, "div", 3),
            un._UZ(2, "div", 4),
            un.YNc(3, vs, 1, 2, "img", 5),
            un.qZA(),
            un.TgZ(4, "div", 6)(5, "div", 7),
            un._UZ(6, "app-navbar"),
            un.qZA(),
            un.TgZ(7, "div", 8)(8, "div", 9),
            un._UZ(9, "h1", 10)(10, "p", 11),
            un.TgZ(11, "button", 12),
            un._uU(12),
            un.qZA()()(),
            un.TgZ(13, "button", 13),
            un.NdJ("click", function () {
              un.CHM(Rs);
              const No = un.oxw();
              return un.KtG(No.handleScroll());
            }),
            un.TgZ(14, "p", 14),
            un._uU(15, "Explore more"),
            un.qZA(),
            un._UZ(16, "img", 15),
            un.qZA()()();
        }
        if (2 & o) {
          const Rs = di.$implicit,
            oo = di.index,
            No = un.oxw();
          un.xp6(3),
            un.Q6J("ngIf", oo == No.counter),
            un.xp6(6),
            un.Q6J("innerHTML", Rs.title, un.oJD),
            un.xp6(1),
            un.Q6J("innerHTML", Rs.brief, un.oJD),
            un.xp6(1),
            un.Q6J("routerLink", un.VKq(5, yo, Rs.link.url)),
            un.xp6(1),
            un.hij(" ", Rs.link.title, " ");
        }
      }
      let ta = (() => {
        class o {
          constructor() {
            (this.photos = []), (this.counter = 0);
          }
          onSliderChange(Rs) {
            this.counter = Rs;
          }
          handleScroll() {
            (0, Eu.e)("departments");
          }
          static #e = (this.ɵfac = function (oo) {
            return new (oo || o)();
          });
          static #t = (this.ɵcmp = un.Xpm({
            type: o,
            selectors: [["app-carousel"]],
            inputs: { photos: "photos" },
            decls: 3,
            vars: 2,
            consts: [
              [1, "carousel-container"],
              [3, "isAnimated", "activeSlideChange"],
              [4, "ngFor", "ngForOf"],
              [1, "image-container"],
              [1, "hover"],
              [
                "class",
                "imgFull",
                "alt",
                "item.title",
                "loading",
                "lazy",
                3,
                "src",
                4,
                "ngIf",
              ],
              [1, "carousel-caption"],
              [1, "container", "custom-container"],
              [1, "carousel-caption-container", "container"],
              [1, "text-container"],
              [1, "title", 3, "innerHTML"],
              [1, "brief", 3, "innerHTML"],
              [1, "carousel-button", 3, "routerLink"],
              [1, "explore-buuton", 3, "click"],
              [1, "explore-buuton-text"],
              ["src", "assets/Fe-kit/svg/line.svg", "alt", "line"],
              ["alt", "item.title", "loading", "lazy", 1, "imgFull", 3, "src"],
            ],
            template: function (oo, No) {
              1 & oo &&
                (un.TgZ(0, "div", 0)(1, "carousel", 1),
                un.NdJ("activeSlideChange", function (Ka) {
                  return No.onSliderChange(Ka);
                }),
                un.YNc(2, Zl, 17, 7, "slide", 2),
                un.qZA()()),
                2 & oo &&
                  (un.xp6(1),
                  un.Q6J("isAnimated", !0),
                  un.xp6(1),
                  un.Q6J("ngForOf", No.photos));
            },
            dependencies: [ti.sg, ti.O5, Du.rH, mo.o6, mo.Fy, Cu.S],
            data: {
              animation: [
                Di({
                  anchor: "enter",
                  duration: 1e3,
                  delay: 300,
                  translate: "30px",
                }),
              ],
            },
          }));
        }
        return o;
      })();
    },
    1913: (Lt, Fe, N) => {
      N.d(Fe, { I: () => pt });
      var l = N(4769),
        L = N(6814),
        B = N(2490),
        Me = N(7624);
      function _e(Ue, st) {
        1 & Ue && l._UZ(0, "div", 25);
      }
      function we(Ue, st) {
        if (
          (1 & Ue &&
            (l.TgZ(0, "div", 26)(1, "div", 27),
            l._uU(2),
            l.qZA(),
            l.TgZ(3, "div", 28),
            l._uU(4),
            l.qZA()()),
          2 & Ue)
        ) {
          const It = l.oxw();
          l.xp6(2),
            l.hij(
              " ",
              (null == It.course || null == It.course.category
                ? null
                : It.course.category.category_name) || "General",
              " "
            ),
            l.xp6(2),
            l.hij(" ", "Online Symposium", " ");
        }
      }
      function Ie(Ue, st) {
        if ((1 & Ue && (l.TgZ(0, "div", 29), l._uU(1), l.qZA()), 2 & Ue)) {
          const It = l.oxw();
          l.xp6(1), l.hij(" ", null == It.course ? null : It.course.title, " ");
        }
      }
      const Re = function (Ue) {
          return ["course-card", Ue];
        },
        xe = function (Ue) {
          return ["image-container", Ue];
        },
        oe = function (Ue) {
          return {
            background: Ue,
            "background-size": "cover",
            "background-position": "center center",
          };
        },
        ge = function (Ue) {
          return ["text-container", Ue];
        },
        Be = function (Ue) {
          return ["date-session-container", Ue];
        },
        et = function (Ue) {
          return ["line", Ue];
        },
        Ye = function (Ue) {
          return ["course-card-footer", Ue];
        },
        ot = function (Ue) {
          return ["course-card-button", Ue];
        };
      let pt = (() => {
        class Ue {
          constructor() {
            (this.course = {}),
              (this.customCardClassName = ""),
              (this.labelPosition = 1),
              (this.imageContainerClassName = ""),
              (this.textContainerClassName = ""),
              (this.disableImageHover = !1);
          }
          static #e = (this.ɵfac = function ($e) {
            return new ($e || Ue)();
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: Ue,
            selectors: [["app-course-card"]],
            inputs: {
              course: "course",
              customCardClassName: "customCardClassName",
              labelPosition: "labelPosition",
              imageContainerClassName: "imageContainerClassName",
              textContainerClassName: "textContainerClassName",
              disableImageHover: "disableImageHover",
              handleRead: "handleRead",
            },
            decls: 42,
            vars: 34,
            consts: [
              [3, "ngClass"],
              [3, "ngClass", "ngStyle"],
              ["class", "hover", 4, "ngIf"],
              ["class", "badge-container", 4, "ngIf"],
              ["class", "badge label label2", 4, "ngIf"],
              [1, "date"],
              ["src", "assets/Fe-kit/svg/calendar.svg", "alt", "calendar-icon"],
              [1, "session"],
              [
                "src",
                "assets/Fe-kit/svg/open-book-secondary.svg",
                "alt",
                "open-book-icon",
              ],
              [1, "title", 3, "innerHTML"],
              [1, "content", 3, "innerHTML"],
              [1, "rate"],
              [1, "rate-text"],
              ["src", "assets/Fe-kit/svg/star.svg", "alt", "star-icon"],
              ["action", "", 3, "ngClass"],
              [3, "className", "buttonLabel"],
              [
                "body",
                "",
                2,
                "width",
                "100%",
                "height",
                "100%",
                "display",
                "flex",
                "align-items",
                "center",
                "justify-content",
                "center",
              ],
              [
                2,
                "width",
                "'400px'",
                "display",
                "flex",
                "align-items",
                "center",
                "justify-content",
                "center",
                "flex-direction",
                "column",
              ],
              [
                2,
                "width",
                "80px",
                "height",
                "80px",
                "border-radius",
                "100%",
                "display",
                "flex",
                "align-items",
                "center",
                "justify-content",
                "center",
                "background-color",
                "#dfdfdf",
                "margin-top",
                "30px",
              ],
              [1, "bi", "bi-person-fill", 2, "font-size", "40px"],
              [
                2,
                "display",
                "flex",
                "align-items",
                "center",
                "justify-content",
                "flex-start",
                "gap",
                "20px",
                "margin-top",
                "20px",
                "font-size",
                "20px",
                "color",
                "#2437ac",
              ],
              [1, "bi", "bi-telephone-plus-fill"],
              [2, "margin", "0"],
              [
                2,
                "display",
                "flex",
                "align-items",
                "center",
                "justify-content",
                "flex-start",
                "gap",
                "20px",
                "margin-top",
                "20px",
                "margin-top",
                "20px",
                "font-size",
                "20px",
                "color",
                "#2437ac",
              ],
              [1, "bi", "bi-whatsapp"],
              [1, "hover"],
              [1, "badge-container"],
              [1, "badge", "label"],
              [1, "badge", "label", "badge-course"],
              [1, "badge", "label", "label2"],
            ],
            template: function ($e, K) {
              1 & $e &&
                (l.TgZ(0, "div", 0)(1, "div", 1),
                l.YNc(2, _e, 1, 0, "div", 2),
                l.YNc(3, we, 5, 2, "div", 3),
                l.qZA(),
                l.TgZ(4, "div", 0),
                l.YNc(5, Ie, 2, 1, "div", 4),
                l.TgZ(6, "div", 0)(7, "div", 5),
                l._UZ(8, "img", 6),
                l.TgZ(9, "p"),
                l._uU(10),
                l.qZA()(),
                l.TgZ(11, "div", 7),
                l._UZ(12, "img", 8),
                l.TgZ(13, "p"),
                l._uU(14, "Cash payment"),
                l.qZA()()(),
                l._UZ(15, "p", 9)(16, "p", 10)(17, "hr", 0),
                l.TgZ(18, "div", 0)(19, "div", 11)(20, "p", 12),
                l._uU(21),
                l.qZA(),
                l._UZ(22, "img", 13),
                l.qZA(),
                l.TgZ(23, "app-modal")(24, "div", 14),
                l._UZ(25, "app-button", 15),
                l.qZA(),
                l.TgZ(26, "div", 16)(27, "div", 17)(28, "h3"),
                l._uU(29, "Contact us"),
                l.qZA(),
                l.TgZ(30, "div", 18),
                l._UZ(31, "i", 19),
                l.qZA(),
                l.TgZ(32, "div", 20),
                l._uU(33, " Mr Mohammed Alaa "),
                l.qZA(),
                l.TgZ(34, "div", 20),
                l._UZ(35, "i", 21),
                l.TgZ(36, "p", 22),
                l._uU(37, "+20 1097944603"),
                l.qZA()(),
                l.TgZ(38, "div", 23),
                l._UZ(39, "i", 24),
                l.TgZ(40, "p", 22),
                l._uU(41, "+20 1097944603"),
                l.qZA()()()()()()()()),
                2 & $e &&
                  (l.Q6J("ngClass", l.VKq(18, Re, K.customCardClassName)),
                  l.xp6(1),
                  l.Q6J("ngClass", l.VKq(20, xe, K.imageContainerClassName))(
                    "ngStyle",
                    l.VKq(
                      22,
                      oe,
                      "transparent url(" +
                        (null == K.course ? null : K.course.image_url) +
                        ") 0% 0% no-repeat padding-box"
                    )
                  ),
                  l.xp6(1),
                  l.Q6J("ngIf", !1 === K.disableImageHover),
                  l.xp6(1),
                  l.Q6J("ngIf", 1 === K.labelPosition),
                  l.xp6(1),
                  l.Q6J("ngClass", l.VKq(24, ge, K.textContainerClassName)),
                  l.xp6(1),
                  l.Q6J("ngIf", 2 === K.labelPosition),
                  l.xp6(1),
                  l.Q6J(
                    "ngClass",
                    l.VKq(
                      26,
                      Be,
                      2 === K.labelPosition ? "date-session-container2" : ""
                    )
                  ),
                  l.xp6(4),
                  l.Oqu(
                    (null == K.course ? null : K.course.start_date) +
                      " " +
                      (null == K.course ? null : K.course.end_date)
                  ),
                  l.xp6(5),
                  l.Q6J("innerHTML", K.course.title, l.oJD),
                  l.xp6(1),
                  l.Q6J("innerHTML", K.course.brief, l.oJD),
                  l.xp6(1),
                  l.Q6J(
                    "ngClass",
                    l.VKq(28, et, 2 === K.labelPosition ? "line2" : "")
                  ),
                  l.xp6(1),
                  l.Q6J(
                    "ngClass",
                    l.VKq(
                      30,
                      Ye,
                      2 === K.labelPosition ? "course-card-footer2" : ""
                    )
                  ),
                  l.xp6(3),
                  l.AsE(
                    " ",
                    null == K.course || null == K.course.rate
                      ? null
                      : K.course.rate.rates_count,
                    " (",
                    null == K.course || null == K.course.rate
                      ? null
                      : K.course.rate.rates_score,
                    ") "
                  ),
                  l.xp6(3),
                  l.Q6J(
                    "ngClass",
                    l.VKq(
                      32,
                      ot,
                      2 === K.labelPosition ? "course-card-button2" : ""
                    )
                  ),
                  l.xp6(1),
                  l.Q6J("className", "secondary")("buttonLabel", "Booking"));
            },
            dependencies: [L.mk, L.O5, L.PC, B.r, Me.z],
          }));
        }
        return Ue;
      })();
    },
    7234: (Lt, Fe, N) => {
      N.d(Fe, { n: () => we });
      var l = N(4769),
        L = N(6814);
      const B = [[["", "hover", ""]]],
        Me = function (Ie) {
          return {
            background: Ie,
            "background-size": "cover",
            "background-position": "center center",
          };
        },
        _e = ["[hover]"];
      let we = (() => {
        class Ie {
          constructor() {
            this.photos = {
              Luxor: "assets/Fe-kit/images/governorates/luxor.jpg",
              Aswan: "assets/Fe-kit/images/governorates/Aswan.jpg",
              Hurghada: "assets/Fe-kit/images/governorates/hurghada.jpg",
              Safaga: "assets/Fe-kit/images/governorates/safaga.jpg",
              "Sharm-el-Sheikh": "assets/Fe-kit/images/governorates/sharm.jpg",
            };
          }
          static #e = (this.ɵfac = function (oe) {
            return new (oe || Ie)();
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: Ie,
            selectors: [["app-department-card"]],
            inputs: { department: "department" },
            ngContentSelectors: _e,
            decls: 5,
            vars: 4,
            consts: [
              [1, "department-card", 3, "ngStyle"],
              [1, "text-container"],
              [1, "title"],
            ],
            template: function (oe, ge) {
              1 & oe &&
                (l.F$t(B),
                l.TgZ(0, "div", 0),
                l.Hsn(1),
                l.TgZ(2, "div", 1)(3, "p", 2),
                l._uU(4),
                l.qZA()()()),
                2 & oe &&
                  (l.Q6J(
                    "ngStyle",
                    l.VKq(
                      2,
                      Me,
                      "transparent url(" +
                        ge.photos[ge.department.title] +
                        ") 0% 0% no-repeat padding-box"
                    )
                  ),
                  l.xp6(4),
                  l.Oqu(ge.department.title));
            },
            dependencies: [L.PC],
          }));
        }
        return Ie;
      })();
    },
    9877: (Lt, Fe, N) => {
      N.d(Fe, { J: () => Re });
      var l = N(2500),
        L = N(4769),
        B = N(6814),
        Me = N(7553);
      function _e(xe, oe) {
        if (1 & xe) {
          const ge = L.EpF();
          L.TgZ(0, "li", 7)(1, "a", 8),
            L.NdJ("click", function () {
              const Ye = L.CHM(ge).$implicit;
              return L.KtG(
                null != Ye && Ye.onClick
                  ? null == Ye
                    ? null
                    : Ye.onClick()
                  : null
              );
            }),
            L._uU(2),
            L.qZA()();
        }
        if (2 & xe) {
          const ge = oe.$implicit;
          L.xp6(1),
            L.Q6J("routerLink", ge.url ? ge.url : null),
            L.xp6(1),
            L.Oqu(null == ge ? null : ge.title);
        }
      }
      function we(xe, oe) {
        if (
          (1 & xe && (L.TgZ(0, "ul", 5), L.YNc(1, _e, 3, 2, "li", 6), L.qZA()),
          2 & xe)
        ) {
          const ge = L.oxw(2);
          L.xp6(1), L.Q6J("ngForOf", ge.menuItems);
        }
      }
      function Ie(xe, oe) {
        if (
          (1 & xe &&
            (L.TgZ(0, "div", 1)(1, "button", 2),
            L._uU(2),
            L._UZ(3, "span", 3),
            L.qZA(),
            L.YNc(4, we, 2, 1, "ul", 4),
            L.qZA()),
          2 & xe)
        ) {
          const ge = L.oxw();
          L.xp6(2), L.hij(" ", ge.title || ge.menuItems[0].title, " ");
        }
      }
      let Re = (() => {
        class xe {
          constructor() {
            (this.title = ""), (this.menuItems = []);
          }
          static #e = (this.ɵfac = function (Be) {
            return new (Be || xe)();
          });
          static #t = (this.ɵcmp = L.Xpm({
            type: xe,
            selectors: [["app-dropdown"]],
            inputs: { title: "title", menuItems: "menuItems" },
            features: [
              L._Bn([
                { provide: l.fc, useValue: { isAnimated: !0, autoClose: !0 } },
              ]),
            ],
            decls: 1,
            vars: 1,
            consts: [
              [
                "class",
                "btn-group dropdown-container",
                "dropdown",
                "",
                "container",
                "body",
                4,
                "ngIf",
              ],
              [
                "dropdown",
                "",
                "container",
                "body",
                1,
                "btn-group",
                "dropdown-container",
              ],
              [
                "id",
                "button-menu-dividers",
                "dropdownToggle",
                "",
                "type",
                "button",
                "aria-controls",
                "dropdown-menu-dividers",
                1,
                "dropdown-toggle",
              ],
              [1, "caret"],
              [
                "role",
                "menu",
                "aria-labelledby",
                "button-menu-dividers",
                "class",
                "dropdown-menu menu",
                4,
                "dropdownMenu",
              ],
              [
                "role",
                "menu",
                "aria-labelledby",
                "button-menu-dividers",
                1,
                "dropdown-menu",
                "menu",
              ],
              ["role", "menuitem", "class", "menu-item", 4, "ngFor", "ngForOf"],
              ["role", "menuitem", 1, "menu-item"],
              [1, "dropdown-item", 3, "routerLink", "click"],
            ],
            template: function (Be, et) {
              1 & Be && L.YNc(0, Ie, 5, 1, "div", 0),
                2 & Be &&
                  L.Q6J(
                    "ngIf",
                    null == et.menuItems ? null : et.menuItems.length
                  );
            },
            dependencies: [B.sg, B.O5, Me.rH, l.Hz, l.Mq, l.TO],
          }));
        }
        return xe;
      })();
    },
    2341: (Lt, Fe, N) => {
      N.d(Fe, { S: () => Me });
      var l = N(5437),
        L = N(4769),
        B = N(2490);
      let Me = (() => {
        class _e {
          constructor() {
            this.serviceType = { type: l.w.Facebook, title: "" };
          }
          static #e = (this.ɵfac = function (Re) {
            return new (Re || _e)();
          });
          static #t = (this.ɵcmp = L.Xpm({
            type: _e,
            selectors: [["app-external-authentication"]],
            inputs: { serviceType: "serviceType" },
            decls: 4,
            vars: 3,
            consts: [
              [1, "external-auth-contaainer"],
              [3, "buttonLabel", "className"],
              [1, "img-container"],
              ["alt", "external-auth-icon", 1, "imgFull", 3, "src"],
            ],
            template: function (Re, xe) {
              1 & Re &&
                (L.TgZ(0, "div", 0)(1, "app-button", 1)(2, "div", 2),
                L._UZ(3, "img", 3),
                L.qZA()()()),
                2 & Re &&
                  (L.xp6(1),
                  L.Q6J("buttonLabel", xe.serviceType.title)(
                    "className",
                    "primary"
                  ),
                  L.xp6(2),
                  L.s9C(
                    "src",
                    1 === xe.serviceType.type
                      ? "assets/Fe-kit/svg/facebook-circle.svg"
                      : "assets/Fe-kit/svg/google.svg",
                    L.LSH
                  ));
            },
            dependencies: [B.r],
          }));
        }
        return _e;
      })();
    },
    9926: (Lt, Fe, N) => {
      N.d(Fe, { a: () => _e });
      var l = N(4769),
        L = N(6814);
      function B(we, Ie) {
        if ((1 & we && (l.TgZ(0, "label", 3), l._uU(1), l.qZA()), 2 & we)) {
          const Re = l.oxw();
          l.s9C("for", Re.inputProps.name),
            l.xp6(1),
            l.Oqu(Re.inputProps.title);
        }
      }
      const Me = function (we) {
        return ["form-group", we];
      };
      let _e = (() => {
        class we {
          constructor() {
            this.inputContainerClass = "";
          }
          static #e = (this.ɵfac = function (xe) {
            return new (xe || we)();
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: we,
            selectors: [["app-input"]],
            inputs: {
              inputProps: "inputProps",
              formGroupName: "formGroupName",
              inputContainerClass: "inputContainerClass",
            },
            decls: 3,
            vars: 8,
            consts: [
              [3, "ngClass"],
              [3, "for", 4, "ngIf"],
              [
                1,
                "form-control",
                3,
                "type",
                "id",
                "placeholder",
                "required",
                "change",
              ],
              [3, "for"],
            ],
            template: function (xe, oe) {
              1 & xe &&
                (l.TgZ(0, "div", 0),
                l.YNc(1, B, 2, 2, "label", 1),
                l.TgZ(2, "input", 2),
                l.NdJ("change", function () {
                  return oe.inputProps.onChange
                    ? oe.inputProps.onChange()
                    : null;
                }),
                l.qZA()()),
                2 & xe &&
                  (l.Q6J("ngClass", l.VKq(6, Me, oe.inputContainerClass)),
                  l.xp6(1),
                  l.Q6J("ngIf", oe.inputProps.title),
                  l.xp6(1),
                  l.s9C("type", oe.inputProps.type),
                  l.s9C("id", oe.inputProps.name),
                  l.s9C("placeholder", oe.inputProps.placeholder),
                  l.s9C("required", oe.inputProps.required));
            },
            dependencies: [L.mk, L.O5],
          }));
        }
        return we;
      })();
    },
    7624: (Lt, Fe, N) => {
      N.d(Fe, { z: () => we });
      var l = N(4769),
        L = N(2051);
      function B(Ie, Re) {
        1 & Ie && (l.TgZ(0, "div", 2), l.Hsn(1, 1), l.qZA());
      }
      const Me = [[["", "action", ""]], [["", "body", ""]]],
        _e = ["[action]", "[body]"];
      let we = (() => {
        class Ie {
          constructor(xe) {
            (this.modalService = xe),
              (this.buttonClass = ""),
              (this.buttonAction = { action: "label" }),
              (this.config = {
                animated: !0,
                class: this.fullScreen ? "full-screen-modal" : "",
              });
          }
          openModal(xe) {
            this.modalRef = this.modalService.show(xe, this.config);
          }
          static #e = (this.ɵfac = function (oe) {
            return new (oe || Ie)(l.Y36(L.tT));
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: Ie,
            selectors: [["app-modal"]],
            inputs: {
              buttonClass: "buttonClass",
              buttonAction: "buttonAction",
              fullScreen: "fullScreen",
            },
            ngContentSelectors: _e,
            decls: 4,
            vars: 0,
            consts: [
              [3, "click"],
              ["template", ""],
              ["className", "full-modal", 1, "modal-body"],
            ],
            template: function (oe, ge) {
              if (1 & oe) {
                const Be = l.EpF();
                l.F$t(Me),
                  l.TgZ(0, "div", 0),
                  l.NdJ("click", function () {
                    l.CHM(Be);
                    const Ye = l.MAs(3);
                    return l.KtG(ge.openModal(Ye));
                  }),
                  l.Hsn(1),
                  l.qZA(),
                  l.YNc(2, B, 2, 0, "ng-template", null, 1, l.W1O);
              }
            },
          }));
        }
        return Ie;
      })();
    },
    6133: (Lt, Fe, N) => {
      N.d(Fe, { S: () => Ye });
      var l = N(4769),
        L = N(5879),
        B = N(1110),
        Me = N(6814),
        _e = N(7553),
        we = N(2123),
        Ie = N(7624),
        Re = N(9877);
      function xe(ot, pt) {
        if ((1 & ot && l._UZ(0, "app-dropdown", 11), 2 & ot)) {
          const Ue = l.oxw();
          l.Q6J("menuItems", Ue.userMenuItems)("title", Ue.userName);
        }
      }
      function oe(ot, pt) {
        1 & ot && l._UZ(0, "i", 15);
      }
      function ge(ot, pt) {
        1 & ot && (l.TgZ(0, "span"), l._uU(1, " Sign In"), l.qZA());
      }
      function Be(ot, pt) {
        if (
          (1 & ot &&
            (l.TgZ(0, "a", 12),
            l.YNc(1, oe, 1, 0, "i", 13),
            l.YNc(2, ge, 2, 0, "span", 14),
            l.qZA()),
          2 & ot)
        ) {
          const Ue = l.oxw();
          l.Q6J("routerLink", "login"),
            l.xp6(1),
            l.Q6J("ngIf", Ue.innerWidth <= 1023),
            l.xp6(1),
            l.Q6J("ngIf", Ue.innerWidth > 1023);
        }
      }
      function et(ot, pt) {
        1 & ot &&
          (l.TgZ(0, "div", 16)(1, "app-modal")(2, "div", 17),
          l._UZ(3, "i", 18),
          l.qZA(),
          l._UZ(4, "app-search", 19),
          l.qZA()()),
          2 & ot && (l.xp6(4), l.Q6J("searchClass", "search-modal-card"));
      }
      let Ye = (() => {
        class ot {
          constructor(Ue, st) {
            (this._securityService = Ue),
              (this._loginService = st),
              (this.languageMenuItems = [
                { title: "EN", onClick: () => console.log("en") },
                { title: "AR", onClick: () => console.log("ar") },
              ]),
              (this.userMenuItems = [
                {
                  title: "Sign out",
                  onClick: () => this._loginService.logout(),
                },
              ]),
              (this.isSearchable = !1),
              (this.isViewSearch = !1),
              (this.userName = "");
          }
          authUser() {
            this.isLoggedIn = this._securityService.isLoggedIn();
            let Ue = this._securityService.getUser();
            Ue && (this.userName = JSON.parse(Ue)?.userName);
          }
          ngOnInit() {
            (this.innerWidth = window.innerWidth), this.authUser();
          }
          ngDoCheck() {
            this.authUser();
          }
          toggleSearch(Ue) {}
          onResize(Ue) {
            this.innerWidth = window.innerWidth;
          }
          static #e = (this.ɵfac = function (st) {
            return new (st || ot)(l.Y36(L.I), l.Y36(B.r));
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: ot,
            selectors: [["app-navbar"]],
            hostBindings: function (st, It) {
              1 & st &&
                l.NdJ(
                  "resize",
                  function (K) {
                    return It.onResize(K);
                  },
                  !1,
                  l.Jf7
                );
            },
            inputs: { isViewSearch: "isViewSearch" },
            decls: 12,
            vars: 6,
            consts: [
              [1, "top-nav"],
              [1, "brand"],
              [1, "navbar-brand", 3, "routerLink"],
              ["alt", "light-logo", 1, "imgFull", 3, "src"],
              [1, "action-container"],
              [1, "navbar-nav", "header-list"],
              [1, "nav-item"],
              [3, "menuItems"],
              [3, "menuItems", "title", 4, "ngIf"],
              ["class", "nav-link login-link", 3, "routerLink", 4, "ngIf"],
              ["class", "search-modal", 4, "ngIf"],
              [3, "menuItems", "title"],
              [1, "nav-link", "login-link", 3, "routerLink"],
              ["class", "bi bi-person-fill", 4, "ngIf"],
              [4, "ngIf"],
              [1, "bi", "bi-person-fill"],
              [1, "search-modal"],
              ["action", "", 1, "filter-button"],
              [1, "bi", "bi-filter-square-fill"],
              ["body", "", 3, "searchClass"],
            ],
            template: function (st, It) {
              1 & st &&
                (l.TgZ(0, "nav", 0)(1, "div", 1)(2, "div", 2),
                l._UZ(3, "img", 3),
                l.qZA()(),
                l.TgZ(4, "div", 4)(5, "ul", 5)(6, "li", 6),
                l._UZ(7, "app-dropdown", 7),
                l.qZA(),
                l.TgZ(8, "li", 6),
                l.YNc(9, xe, 1, 2, "app-dropdown", 8),
                l.YNc(10, Be, 3, 3, "a", 9),
                l.qZA()(),
                l.YNc(11, et, 5, 1, "div", 10),
                l.qZA()()),
                2 & st &&
                  (l.xp6(2),
                  l.Q6J("routerLink", "/"),
                  l.xp6(1),
                  l.s9C(
                    "src",
                    It.innerWidth <= 1023
                      ? "assets/Fe-kit/images/Logo.png"
                      : "assets/Fe-kit/images/light-logo.png",
                    l.LSH
                  ),
                  l.xp6(4),
                  l.Q6J("menuItems", It.languageMenuItems),
                  l.xp6(2),
                  l.Q6J("ngIf", It.isLoggedIn),
                  l.xp6(1),
                  l.Q6J("ngIf", !It.isLoggedIn),
                  l.xp6(1),
                  l.Q6J("ngIf", It.isViewSearch));
            },
            dependencies: [Me.O5, _e.rH, we.g, Ie.z, Re.J],
          }));
        }
        return ot;
      })();
    },
    290: (Lt, Fe, N) => {
      N.d(Fe, { H: () => Ie });
      var l = N(4769),
        L = N(6814),
        B = N(7553);
      const Me = function (Re) {
          return ["/news", Re];
        },
        _e = function (Re) {
          return ["new-card", Re];
        },
        we = function (Re) {
          return ["imgage-container", Re];
        };
      let Ie = (() => {
        class Re {
          constructor() {
            (this.newItem = {}),
              (this.dimension = "355"),
              (this.dimensionClass = "");
          }
          static #e = (this.ɵfac = function (ge) {
            return new (ge || Re)();
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: Re,
            selectors: [["app-news-card"]],
            inputs: {
              newItem: "newItem",
              dimension: "dimension",
              dimensionClass: "dimensionClass",
            },
            decls: 10,
            vars: 13,
            consts: [
              [3, "routerLink", "ngClass"],
              [3, "ngClass"],
              [1, "imgFull", 3, "src", "alt"],
              [1, "hover"],
              [1, "title-container"],
              [1, "date-container"],
              [
                "src",
                "assets/Fe-kit/svg/calendar-white.svg",
                "alt",
                "calendar-white-icon",
                1,
                "date-icon",
              ],
              [1, "ms-2", "date-text"],
              [1, "card-title", 3, "innerHtml"],
            ],
            template: function (ge, Be) {
              1 & ge &&
                (l.TgZ(0, "div", 0)(1, "div", 1),
                l._UZ(2, "img", 2),
                l.qZA(),
                l._UZ(3, "div", 3),
                l.TgZ(4, "div", 4)(5, "div", 5),
                l._UZ(6, "img", 6),
                l.TgZ(7, "span", 7),
                l._uU(8),
                l.qZA()(),
                l._UZ(9, "p", 8),
                l.qZA()()),
                2 & ge &&
                  (l.Q6J(
                    "routerLink",
                    l.VKq(7, Me, null == Be.newItem ? null : Be.newItem.id)
                  )("ngClass", l.VKq(9, _e, Be.dimensionClass)),
                  l.xp6(1),
                  l.Q6J("ngClass", l.VKq(11, we, Be.dimensionClass)),
                  l.xp6(1),
                  l.Q6J(
                    "src",
                    Be.newItem.image_url,
                    l.LSH
                  )("alt", Be.newItem.title),
                  l.xp6(6),
                  l.Oqu(Be.newItem.date),
                  l.xp6(1),
                  l.Q6J("innerHtml", Be.newItem.title, l.oJD));
            },
            dependencies: [L.mk, B.rH],
          }));
        }
        return Re;
      })();
    },
    2123: (Lt, Fe, N) => {
      N.d(Fe, { g: () => we });
      var l = N(4769),
        L = N(6814),
        B = N(9926);
      function Me(Ie, Re) {
        if (
          (1 & Ie && (l.TgZ(0, "div", 5), l._UZ(1, "app-input", 6), l.qZA()),
          2 & Ie)
        ) {
          const xe = Re.$implicit;
          l.xp6(1),
            l.s9C(
              "inputContainerClass",
              "text" === xe.type ? "search-text-input" : "search-date-input"
            ),
            l.Q6J("inputProps", xe);
        }
      }
      const _e = function (Ie) {
        return ["search ", Ie];
      };
      let we = (() => {
        class Ie {
          constructor() {
            (this.searchClass = ""),
              (this.searchForm = [
                {
                  type: "text",
                  title: "",
                  name: "Title",
                  placeholder: "Title",
                  required: !1,
                },
                {
                  type: "date",
                  title: "",
                  name: "Title",
                  placeholder: "dateFrom",
                  required: !1,
                },
                {
                  type: "date",
                  title: "",
                  name: "dateTo",
                  placeholder: "Date to",
                  required: !1,
                },
              ]);
          }
          static #e = (this.ɵfac = function (oe) {
            return new (oe || Ie)();
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: Ie,
            selectors: [["app-search"]],
            inputs: { searchClass: "searchClass" },
            decls: 8,
            vars: 4,
            consts: [
              [3, "ngClass"],
              [1, "search-title"],
              ["class", "input-container", 4, "ngFor", "ngForOf"],
              [1, "filter-button"],
              [1, "clear-button"],
              [1, "input-container"],
              [3, "inputProps", "inputContainerClass"],
            ],
            template: function (oe, ge) {
              1 & oe &&
                (l.TgZ(0, "div", 0)(1, "p", 1),
                l._uU(2, "Filter by:"),
                l.qZA(),
                l.YNc(3, Me, 2, 2, "div", 2),
                l.TgZ(4, "button", 3),
                l._uU(5, "Filter"),
                l.qZA(),
                l.TgZ(6, "button", 4),
                l._uU(7, "Clear"),
                l.qZA()()),
                2 & oe &&
                  (l.Q6J("ngClass", l.VKq(2, _e, ge.searchClass)),
                  l.xp6(3),
                  l.Q6J("ngForOf", ge.searchForm));
            },
            dependencies: [L.mk, L.sg, B.a],
          }));
        }
        return Ie;
      })();
    },
    513: (Lt, Fe, N) => {
      N.d(Fe, { P: () => Be });
      var l = N(4769),
        L = N(6814);
      const B = ["swiper"],
        Me = ["nextBtn"],
        _e = ["backBtn"],
        we = function (et, Ye) {
          return ["prev-button", et, Ye];
        };
      function Ie(et, Ye) {
        if (
          (1 & et && (l.TgZ(0, "button", 0, 4), l._UZ(2, "i", 5), l.qZA()),
          2 & et)
        ) {
          const ot = l.oxw();
          l.Q6J(
            "ngClass",
            l.WLB(1, we, ot.prevButtonClassName, ot.buttonTypeClassName)
          );
        }
      }
      const Re = function (et, Ye) {
        return ["next-button", et, Ye];
      };
      function xe(et, Ye) {
        if (
          (1 & et && (l.TgZ(0, "button", 0, 6), l._UZ(2, "i", 7), l.qZA()),
          2 & et)
        ) {
          const ot = l.oxw();
          l.Q6J(
            "ngClass",
            l.WLB(1, Re, ot.nextButtonClassName, ot.buttonTypeClassName)
          );
        }
      }
      const oe = function (et) {
          return ["swiper-wrapper", et];
        },
        ge = ["*"];
      let Be = (() => {
        class et {
          constructor() {
            (this.hasNavigation = !0),
              (this.hasPagination = !0),
              (this.slidesPerView = 1),
              (this.itemLength = 0),
              (this.buttonTypeClassName = "primary"),
              (this.nextButtonClassName = ""),
              (this.prevButtonClassName = ""),
              (this.containerSlider = ""),
              (this.hideCustomButtons = !1);
          }
          checkButtonStatus() {
            const ot = setTimeout(() => {
              this.swiper &&
                this.nextBtn &&
                this.backBtn &&
                this.itemLength &&
                ((this.nextBtn.nativeElement.disabled =
                  !!this.swiper.nativeElement.swiper.isEnd),
                (this.backBtn.nativeElement.disabled =
                  !!this.swiper.nativeElement.swiper.isBeginning)),
                clearTimeout(ot);
            }, 200);
          }
          ngOnChanges() {
            this.itemLength && this.checkButtonStatus();
          }
          ngAfterViewInit() {
            this.checkButtonStatus(),
              this.nextBtn &&
                this.nextBtn.nativeElement.addEventListener("click", () => {
                  this.swiper.nativeElement.swiper.slideNext(),
                    this.checkButtonStatus();
                }),
              this.backBtn &&
                this.backBtn.nativeElement.addEventListener("click", () => {
                  this.swiper.nativeElement.swiper.slidePrev(),
                    this.checkButtonStatus();
                });
          }
          static #e = (this.ɵfac = function (pt) {
            return new (pt || et)();
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: et,
            selectors: [["app-slider"]],
            viewQuery: function (pt, Ue) {
              if ((1 & pt && (l.Gf(B, 5), l.Gf(Me, 5), l.Gf(_e, 5)), 2 & pt)) {
                let st;
                l.iGM((st = l.CRH())) && (Ue.swiper = st.first),
                  l.iGM((st = l.CRH())) && (Ue.nextBtn = st.first),
                  l.iGM((st = l.CRH())) && (Ue.backBtn = st.first);
              }
            },
            inputs: {
              hasNavigation: "hasNavigation",
              hasPagination: "hasPagination",
              slidesPerView: "slidesPerView",
              itemLength: "itemLength",
              buttonTypeClassName: "buttonTypeClassName",
              nextButtonClassName: "nextButtonClassName",
              prevButtonClassName: "prevButtonClassName",
              containerSlider: "containerSlider",
              hideCustomButtons: "hideCustomButtons",
            },
            features: [l.TTD],
            ngContentSelectors: ge,
            decls: 6,
            vars: 8,
            consts: [
              [3, "ngClass"],
              [
                "space-between",
                "33",
                "mousewheel-force-to-axis",
                "true",
                "swiperElement",
                "",
                "pagination",
                "false",
                3,
                "slidesPerView",
                "pagination",
                "navigation",
              ],
              ["swiper", ""],
              [3, "ngClass", 4, "ngIf"],
              ["backBtn", ""],
              [1, "bi", "bi-arrow-left"],
              ["nextBtn", ""],
              [1, "bi", "bi-arrow-right"],
            ],
            template: function (pt, Ue) {
              1 & pt &&
                (l.F$t(),
                l.TgZ(0, "div", 0)(1, "swiper-container", 1, 2),
                l.Hsn(3),
                l.qZA(),
                l.YNc(4, Ie, 3, 4, "button", 3),
                l.YNc(5, xe, 3, 4, "button", 3),
                l.qZA()),
                2 & pt &&
                  (l.Q6J("ngClass", l.VKq(6, oe, Ue.containerSlider)),
                  l.xp6(1),
                  l.s9C("pagination", Ue.hasPagination),
                  l.s9C("navigation", Ue.hasNavigation),
                  l.Q6J("slidesPerView", Ue.slidesPerView),
                  l.xp6(3),
                  l.Q6J("ngIf", !Ue.hideCustomButtons),
                  l.xp6(1),
                  l.Q6J("ngIf", !Ue.hideCustomButtons));
            },
            dependencies: [L.mk, L.O5],
          }));
        }
        return et;
      })();
    },
    8502: (Lt, Fe, N) => {
      N.d(Fe, { P: () => _e });
      var l = N(4769),
        L = N(7553),
        B = N(2490);
      const Me = function () {
        return ["/"];
      };
      let _e = (() => {
        class we {
          constructor(Re) {
            (this.activatedRoute = Re),
              (this.errorMessage =
                this.activatedRoute.snapshot.queryParams.errorMessage),
              (this.items = {
                Error: {
                  url: "assets/Fe-kit/images/error.png",
                  title: "Error !",
                  content:
                    this.errorMessage ||
                    "You already have enrolled to the course.",
                  class: "error-image",
                },
                "No Content": {
                  url: "assets/Fe-kit/images/no-content.png",
                  title: "No Content to show!",
                  content: "There is no Content to show right now",
                  class: "no-content-image",
                },
                Success: {
                  url: "assets/Fe-kit/images/success.png",
                  title: "Thank you !",
                  content: "You have applied in this course successfully. ",
                  class: "success-image",
                },
              }),
              (this.status = "Error");
          }
          static #e = (this.ɵfac = function (xe) {
            return new (xe || we)(l.Y36(L.gz));
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: we,
            selectors: [["app-status"]],
            inputs: { status: "status" },
            decls: 8,
            vars: 10,
            consts: [
              [1, "div-status"],
              ["alt", "status", 1, "imgFull", 3, "src"],
              [1, "title"],
              [1, "content"],
              [
                3,
                "className",
                "buttonLabel",
                "buttonTitleClassName",
                "routerLink",
              ],
            ],
            template: function (xe, oe) {
              1 & xe &&
                (l.TgZ(0, "div", 0)(1, "div"),
                l._UZ(2, "img", 1),
                l.qZA(),
                l.TgZ(3, "p", 2),
                l._uU(4),
                l.qZA(),
                l.TgZ(5, "p", 3),
                l._uU(6),
                l.qZA(),
                l._UZ(7, "app-button", 4),
                l.qZA()),
                2 & xe &&
                  (l.xp6(1),
                  l.Tol(
                    null == oe.items[oe.status]
                      ? null
                      : oe.items[oe.status].class
                  ),
                  l.xp6(1),
                  l.Q6J(
                    "src",
                    null == oe.items[oe.status]
                      ? null
                      : oe.items[oe.status].url,
                    l.LSH
                  ),
                  l.xp6(2),
                  l.Oqu(
                    null == oe.items[oe.status]
                      ? null
                      : oe.items[oe.status].title
                  ),
                  l.xp6(2),
                  l.Oqu(
                    null == oe.items[oe.status]
                      ? null
                      : oe.items[oe.status].content
                  ),
                  l.xp6(1),
                  l.Q6J("className", "primary")("buttonLabel", "Back Home")(
                    "buttonTitleClassName",
                    "button-text"
                  )("routerLink", l.DdM(9, Me)));
            },
            dependencies: [L.rH, B.r],
          }));
        }
        return we;
      })();
    },
    6661: (Lt, Fe, N) => {
      N.d(Fe, { L: () => l });
      const l = {
        login: "/5bb82fc34b2195f2b3e9",
        unauthLogin: "/d123f587ed345d3f67ed",
        getNews: "/2d661a3bed4a0bbec6f3",
        getNewById: "/0c38963cd891ffa7d5d8",
        getCarousel: "/4b2437ba3a41ec714087",
        getDepartments: "/045c330d8ff3e670e7de",
        getInternships: "/0e5a7a9c39a3041235ae",
        getLatestCourse: "/80b099f2e45295878cd2",
        getCourseById: "/87a1b4d496c551fd6d4f",
        getLatestNews: "/ccb79b7aabe7bf97d5cc",
      };
    },
    5437: (Lt, Fe, N) => {
      N.d(Fe, { w: () => l });
      var l = (function (L) {
        return (
          (L[(L.Facebook = 1)] = "Facebook"), (L[(L.Google = 2)] = "Google"), L
        );
      })(l || {});
    },
    5879: (Lt, Fe, N) => {
      N.d(Fe, { I: () => L });
      var l = N(4769);
      let L = (() => {
        class B {
          constructor() {}
          getLocalStorage(_e) {
            return localStorage.getItem(_e);
          }
          getUser() {
            return this.getLocalStorage("userData") || null;
          }
          isLoggedIn() {
            return !!this.getLocalStorage("token");
          }
          setLocalStorage(_e, we) {
            localStorage.setItem(_e, we);
          }
          static #e = (this.ɵfac = function (we) {
            return new (we || B)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: B,
            factory: B.ɵfac,
            providedIn: "root",
          }));
        }
        return B;
      })();
    },
    4763: (Lt, Fe, N) => {
      N.d(Fe, { m: () => Xn });
      var l = N(6814),
        L = N(7553),
        we = (N(2490), N(290), N(8502), N(95)),
        Re = (N(5198), N(7509)),
        xe = N(2500);
      function ge(w) {
        return (
          null !== w &&
          "object" == typeof w &&
          "constructor" in w &&
          w.constructor === Object
        );
      }
      function Be(w, i) {
        void 0 === w && (w = {}),
          void 0 === i && (i = {}),
          Object.keys(i).forEach((_) => {
            typeof w[_] > "u"
              ? (w[_] = i[_])
              : ge(i[_]) &&
                ge(w[_]) &&
                Object.keys(i[_]).length > 0 &&
                Be(w[_], i[_]);
          });
      }
      N(1913);
      const et = {
        body: {},
        addEventListener() {},
        removeEventListener() {},
        activeElement: { blur() {}, nodeName: "" },
        querySelector: () => null,
        querySelectorAll: () => [],
        getElementById: () => null,
        createEvent: () => ({ initEvent() {} }),
        createElement: () => ({
          children: [],
          childNodes: [],
          style: {},
          setAttribute() {},
          getElementsByTagName: () => [],
        }),
        createElementNS: () => ({}),
        importNode: () => null,
        location: {
          hash: "",
          host: "",
          hostname: "",
          href: "",
          origin: "",
          pathname: "",
          protocol: "",
          search: "",
        },
      };
      function Ye() {
        const w = typeof document < "u" ? document : {};
        return Be(w, et), w;
      }
      const ot = {
        document: et,
        navigator: { userAgent: "" },
        location: {
          hash: "",
          host: "",
          hostname: "",
          href: "",
          origin: "",
          pathname: "",
          protocol: "",
          search: "",
        },
        history: { replaceState() {}, pushState() {}, go() {}, back() {} },
        CustomEvent: function () {
          return this;
        },
        addEventListener() {},
        removeEventListener() {},
        getComputedStyle: () => ({ getPropertyValue: () => "" }),
        Image() {},
        Date() {},
        screen: {},
        setTimeout() {},
        clearTimeout() {},
        matchMedia: () => ({}),
        requestAnimationFrame: (w) =>
          typeof setTimeout > "u" ? (w(), null) : setTimeout(w, 0),
        cancelAnimationFrame(w) {
          typeof setTimeout > "u" || clearTimeout(w);
        },
      };
      function pt() {
        const w = typeof window < "u" ? window : {};
        return Be(w, ot), w;
      }
      function Ue(w) {
        return (
          void 0 === w && (w = ""),
          w
            .trim()
            .split(" ")
            .filter((i) => !!i.trim())
        );
      }
      function It(w, i) {
        return void 0 === i && (i = 0), setTimeout(w, i);
      }
      function $e() {
        return Date.now();
      }
      function Se(w, i) {
        void 0 === i && (i = "x");
        const _ = pt();
        let E, A, I;
        const U = (function K(w) {
          const i = pt();
          let _;
          return (
            i.getComputedStyle && (_ = i.getComputedStyle(w, null)),
            !_ && w.currentStyle && (_ = w.currentStyle),
            _ || (_ = w.style),
            _
          );
        })(w);
        return (
          _.WebKitCSSMatrix
            ? ((A = U.transform || U.webkitTransform),
              A.split(",").length > 6 &&
                (A = A.split(", ")
                  .map((j) => j.replace(",", "."))
                  .join(", ")),
              (I = new _.WebKitCSSMatrix("none" === A ? "" : A)))
            : ((I =
                U.MozTransform ||
                U.OTransform ||
                U.MsTransform ||
                U.msTransform ||
                U.transform ||
                U.getPropertyValue("transform").replace(
                  "translate(",
                  "matrix(1, 0, 0, 1,"
                )),
              (E = I.toString().split(","))),
          "x" === i &&
            (A = _.WebKitCSSMatrix
              ? I.m41
              : 16 === E.length
              ? parseFloat(E[12])
              : parseFloat(E[4])),
          "y" === i &&
            (A = _.WebKitCSSMatrix
              ? I.m42
              : 16 === E.length
              ? parseFloat(E[13])
              : parseFloat(E[5])),
          A || 0
        );
      }
      function J(w) {
        return (
          "object" == typeof w &&
          null !== w &&
          w.constructor &&
          "Object" === Object.prototype.toString.call(w).slice(8, -1)
        );
      }
      function De(w) {
        return typeof window < "u" && typeof window.HTMLElement < "u"
          ? w instanceof HTMLElement
          : w && (1 === w.nodeType || 11 === w.nodeType);
      }
      function ye() {
        const w = Object(arguments.length <= 0 ? void 0 : arguments[0]),
          i = ["__proto__", "constructor", "prototype"];
        for (let _ = 1; _ < arguments.length; _ += 1) {
          const E = _ < 0 || arguments.length <= _ ? void 0 : arguments[_];
          if (null != E && !De(E)) {
            const A = Object.keys(Object(E)).filter((I) => i.indexOf(I) < 0);
            for (let I = 0, U = A.length; I < U; I += 1) {
              const j = A[I],
                P = Object.getOwnPropertyDescriptor(E, j);
              void 0 !== P &&
                P.enumerable &&
                (J(w[j]) && J(E[j])
                  ? E[j].__swiper__
                    ? (w[j] = E[j])
                    : ye(w[j], E[j])
                  : !J(w[j]) && J(E[j])
                  ? ((w[j] = {}),
                    E[j].__swiper__ ? (w[j] = E[j]) : ye(w[j], E[j]))
                  : (w[j] = E[j]));
            }
          }
        }
        return w;
      }
      function me(w, i, _) {
        w.style.setProperty(i, _);
      }
      function dt(w) {
        let { swiper: i, targetPosition: _, side: E } = w;
        const A = pt(),
          I = -i.translate;
        let j,
          U = null;
        const P = i.params.speed;
        (i.wrapperEl.style.scrollSnapType = "none"),
          A.cancelAnimationFrame(i.cssModeFrameID);
        const G = _ > I ? "next" : "prev",
          k = (b, p) => ("next" === G && b >= p) || ("prev" === G && b <= p),
          h = () => {
            (j = new Date().getTime()), null === U && (U = j);
            const b = Math.max(Math.min((j - U) / P, 1), 0),
              p = 0.5 - Math.cos(b * Math.PI) / 2;
            let T = I + p * (_ - I);
            if ((k(T, _) && (T = _), i.wrapperEl.scrollTo({ [E]: T }), k(T, _)))
              return (
                (i.wrapperEl.style.overflow = "hidden"),
                (i.wrapperEl.style.scrollSnapType = ""),
                setTimeout(() => {
                  (i.wrapperEl.style.overflow = ""),
                    i.wrapperEl.scrollTo({ [E]: T });
                }),
                void A.cancelAnimationFrame(i.cssModeFrameID)
              );
            i.cssModeFrameID = A.requestAnimationFrame(h);
          };
        h();
      }
      function Ne(w) {
        return (
          w.querySelector(".swiper-slide-transform") ||
          (w.shadowRoot &&
            w.shadowRoot.querySelector(".swiper-slide-transform")) ||
          w
        );
      }
      function Mt(w, i) {
        return (
          void 0 === i && (i = ""), [...w.children].filter((_) => _.matches(i))
        );
      }
      function At(w) {
        try {
          return void console.warn(w);
        } catch {}
      }
      function Vt(w, i) {
        void 0 === i && (i = []);
        const _ = document.createElement(w);
        return _.classList.add(...(Array.isArray(i) ? i : Ue(i))), _;
      }
      function In(w) {
        const i = pt(),
          _ = Ye(),
          E = w.getBoundingClientRect(),
          A = _.body;
        return {
          top:
            E.top +
            (w === i ? i.scrollY : w.scrollTop) -
            (w.clientTop || A.clientTop || 0),
          left:
            E.left +
            (w === i ? i.scrollX : w.scrollLeft) -
            (w.clientLeft || A.clientLeft || 0),
        };
      }
      function qe(w, i) {
        return pt().getComputedStyle(w, null).getPropertyValue(i);
      }
      function re(w) {
        let _,
          i = w;
        if (i) {
          for (_ = 0; null !== (i = i.previousSibling); )
            1 === i.nodeType && (_ += 1);
          return _;
        }
      }
      function ue(w, i) {
        const _ = [];
        let E = w.parentElement;
        for (; E; )
          i ? E.matches(i) && _.push(E) : _.push(E), (E = E.parentElement);
        return _;
      }
      function Oe(w, i) {
        i &&
          w.addEventListener("transitionend", function _(E) {
            E.target === w &&
              (i.call(w, E), w.removeEventListener("transitionend", _));
          });
      }
      function Pe(w, i, _) {
        const E = pt();
        return _
          ? w["width" === i ? "offsetWidth" : "offsetHeight"] +
              parseFloat(
                E.getComputedStyle(w, null).getPropertyValue(
                  "width" === i ? "margin-right" : "margin-top"
                )
              ) +
              parseFloat(
                E.getComputedStyle(w, null).getPropertyValue(
                  "width" === i ? "margin-left" : "margin-bottom"
                )
              )
          : w.offsetWidth;
      }
      let tt, an, ln;
      function Bt() {
        return (
          tt ||
            (tt = (function lt() {
              const w = pt(),
                i = Ye();
              return {
                smoothScroll:
                  i.documentElement &&
                  i.documentElement.style &&
                  "scrollBehavior" in i.documentElement.style,
                touch: !!(
                  "ontouchstart" in w ||
                  (w.DocumentTouch && i instanceof w.DocumentTouch)
                ),
              };
            })()),
          tt
        );
      }
      const ar = (w, i) => {
          if (!w || w.destroyed || !w.params) return;
          const E = i.closest(
            w.isElement ? "swiper-slide" : `.${w.params.slideClass}`
          );
          if (E) {
            let A = E.querySelector(`.${w.params.lazyPreloaderClass}`);
            !A &&
              w.isElement &&
              (E.shadowRoot
                ? (A = E.shadowRoot.querySelector(
                    `.${w.params.lazyPreloaderClass}`
                  ))
                : requestAnimationFrame(() => {
                    E.shadowRoot &&
                      ((A = E.shadowRoot.querySelector(
                        `.${w.params.lazyPreloaderClass}`
                      )),
                      A && A.remove());
                  })),
              A && A.remove();
          }
        },
        dn = (w, i) => {
          if (!w.slides[i]) return;
          const _ = w.slides[i].querySelector('[loading="lazy"]');
          _ && _.removeAttribute("loading");
        },
        zt = (w) => {
          if (!w || w.destroyed || !w.params) return;
          let i = w.params.lazyPreloadPrevNext;
          const _ = w.slides.length;
          if (!_ || !i || i < 0) return;
          i = Math.min(i, _);
          const E =
              "auto" === w.params.slidesPerView
                ? w.slidesPerViewDynamic()
                : Math.ceil(w.params.slidesPerView),
            A = w.activeIndex;
          if (w.params.grid && w.params.grid.rows > 1) {
            const U = A,
              j = [U - i];
            return (
              j.push(...Array.from({ length: i }).map((P, G) => U + E + G)),
              void w.slides.forEach((P, G) => {
                j.includes(P.column) && dn(w, G);
              })
            );
          }
          const I = A + E - 1;
          if (w.params.rewind || w.params.loop)
            for (let U = A - i; U <= I + i; U += 1) {
              const j = ((U % _) + _) % _;
              (j < A || j > I) && dn(w, j);
            }
          else
            for (
              let U = Math.max(A - i, 0);
              U <= Math.min(I + i, _ - 1);
              U += 1
            )
              U !== A && (U > I || U < A) && dn(w, U);
        };
      function Yr(w) {
        let { swiper: i, runCallbacks: _, direction: E, step: A } = w;
        const { activeIndex: I, previousIndex: U } = i;
        let j = E;
        if (
          (j || (j = I > U ? "next" : I < U ? "prev" : "reset"),
          i.emit(`transition${A}`),
          _ && I !== U)
        ) {
          if ("reset" === j) return void i.emit(`slideResetTransition${A}`);
          i.emit(`slideChangeTransition${A}`),
            i.emit(
              "next" === j
                ? `slideNextTransition${A}`
                : `slidePrevTransition${A}`
            );
        }
      }
      function fn(w, i, _) {
        const E = pt(),
          { params: A } = w,
          I = A.edgeSwipeDetection,
          U = A.edgeSwipeThreshold;
        return (
          !I ||
          !(_ <= U || _ >= E.innerWidth - U) ||
          ("prevent" === I && (i.preventDefault(), !0))
        );
      }
      function En(w) {
        const i = this,
          _ = Ye();
        let E = w;
        E.originalEvent && (E = E.originalEvent);
        const A = i.touchEventsData;
        if ("pointerdown" === E.type) {
          if (null !== A.pointerId && A.pointerId !== E.pointerId) return;
          A.pointerId = E.pointerId;
        } else
          "touchstart" === E.type &&
            1 === E.targetTouches.length &&
            (A.touchId = E.targetTouches[0].identifier);
        if ("touchstart" === E.type)
          return void fn(i, E, E.targetTouches[0].pageX);
        const { params: I, touches: U, enabled: j } = i;
        if (
          !j ||
          (!I.simulateTouch && "mouse" === E.pointerType) ||
          (i.animating && I.preventInteractionOnTransition)
        )
          return;
        !i.animating && I.cssMode && I.loop && i.loopFix();
        let P = E.target;
        if (
          ("wrapper" === I.touchEventsTarget && !i.wrapperEl.contains(P)) ||
          ("which" in E && 3 === E.which) ||
          ("button" in E && E.button > 0) ||
          (A.isTouched && A.isMoved)
        )
          return;
        const G = !!I.noSwipingClass && "" !== I.noSwipingClass,
          k = E.composedPath ? E.composedPath() : E.path;
        G && E.target && E.target.shadowRoot && k && (P = k[0]);
        const h = I.noSwipingSelector
          ? I.noSwipingSelector
          : `.${I.noSwipingClass}`;
        if (
          I.noSwiping &&
          (E.target && E.target.shadowRoot
            ? (function nn(w, i) {
                return (
                  void 0 === i && (i = this),
                  (function _(E) {
                    if (!E || E === Ye() || E === pt()) return null;
                    E.assignedSlot && (E = E.assignedSlot);
                    const A = E.closest(w);
                    return A || E.getRootNode
                      ? A || _(E.getRootNode().host)
                      : null;
                  })(i)
                );
              })(h, P)
            : P.closest(h))
        )
          return void (i.allowClick = !0);
        if (I.swipeHandler && !P.closest(I.swipeHandler)) return;
        (U.currentX = E.pageX), (U.currentY = E.pageY);
        const p = U.currentX,
          T = U.currentY;
        if (!fn(i, E, p)) return;
        Object.assign(A, {
          isTouched: !0,
          isMoved: !1,
          allowTouchCallbacks: !0,
          isScrolling: void 0,
          startMoving: void 0,
        }),
          (U.startX = p),
          (U.startY = T),
          (A.touchStartTime = $e()),
          (i.allowClick = !0),
          i.updateSize(),
          (i.swipeDirection = void 0),
          I.threshold > 0 && (A.allowThresholdMove = !1);
        let R = !0;
        P.matches(A.focusableElements) &&
          ((R = !1), "SELECT" === P.nodeName && (A.isTouched = !1)),
          _.activeElement &&
            _.activeElement.matches(A.focusableElements) &&
            _.activeElement !== P &&
            _.activeElement.blur(),
          (I.touchStartForcePreventDefault ||
            (R && i.allowTouchMove && I.touchStartPreventDefault)) &&
            !P.isContentEditable &&
            E.preventDefault(),
          I.freeMode &&
            I.freeMode.enabled &&
            i.freeMode &&
            i.animating &&
            !I.cssMode &&
            i.freeMode.onTouchStart(),
          i.emit("touchStart", E);
      }
      function Dn(w) {
        const i = Ye(),
          _ = this,
          E = _.touchEventsData,
          { params: A, touches: I, rtlTranslate: U, enabled: j } = _;
        if (!j || (!A.simulateTouch && "mouse" === w.pointerType)) return;
        let G,
          P = w;
        if (
          (P.originalEvent && (P = P.originalEvent),
          "pointermove" === P.type &&
            (null !== E.touchId || P.pointerId !== E.pointerId))
        )
          return;
        if ("touchmove" === P.type) {
          if (
            ((G = [...P.changedTouches].filter(
              (Je) => Je.identifier === E.touchId
            )[0]),
            !G || G.identifier !== E.touchId)
          )
            return;
        } else G = P;
        if (!E.isTouched)
          return void (
            E.startMoving &&
            E.isScrolling &&
            _.emit("touchMoveOpposite", P)
          );
        const k = G.pageX,
          h = G.pageY;
        if (P.preventedByNestedSwiper)
          return (I.startX = k), void (I.startY = h);
        if (!_.allowTouchMove)
          return (
            P.target.matches(E.focusableElements) || (_.allowClick = !1),
            void (
              E.isTouched &&
              (Object.assign(I, {
                startX: k,
                startY: h,
                currentX: k,
                currentY: h,
              }),
              (E.touchStartTime = $e()))
            )
          );
        if (A.touchReleaseOnEdges && !A.loop)
          if (_.isVertical()) {
            if (
              (h < I.startY && _.translate <= _.maxTranslate()) ||
              (h > I.startY && _.translate >= _.minTranslate())
            )
              return (E.isTouched = !1), void (E.isMoved = !1);
          } else if (
            (k < I.startX && _.translate <= _.maxTranslate()) ||
            (k > I.startX && _.translate >= _.minTranslate())
          )
            return;
        if (
          i.activeElement &&
          P.target === i.activeElement &&
          P.target.matches(E.focusableElements)
        )
          return (E.isMoved = !0), void (_.allowClick = !1);
        E.allowTouchCallbacks && _.emit("touchMove", P),
          (I.previousX = I.currentX),
          (I.previousY = I.currentY),
          (I.currentX = k),
          (I.currentY = h);
        const b = I.currentX - I.startX,
          p = I.currentY - I.startY;
        if (
          _.params.threshold &&
          Math.sqrt(b ** 2 + p ** 2) < _.params.threshold
        )
          return;
        if (typeof E.isScrolling > "u") {
          let Je;
          (_.isHorizontal() && I.currentY === I.startY) ||
          (_.isVertical() && I.currentX === I.startX)
            ? (E.isScrolling = !1)
            : b * b + p * p >= 25 &&
              ((Je = (180 * Math.atan2(Math.abs(p), Math.abs(b))) / Math.PI),
              (E.isScrolling = _.isHorizontal()
                ? Je > A.touchAngle
                : 90 - Je > A.touchAngle));
        }
        if (
          (E.isScrolling && _.emit("touchMoveOpposite", P),
          typeof E.startMoving > "u" &&
            (I.currentX !== I.startX || I.currentY !== I.startY) &&
            (E.startMoving = !0),
          E.isScrolling)
        )
          return void (E.isTouched = !1);
        if (!E.startMoving) return;
        (_.allowClick = !1),
          !A.cssMode && P.cancelable && P.preventDefault(),
          A.touchMoveStopPropagation && !A.nested && P.stopPropagation();
        let T = _.isHorizontal() ? b : p,
          R = _.isHorizontal()
            ? I.currentX - I.previousX
            : I.currentY - I.previousY;
        A.oneWayMovement &&
          ((T = Math.abs(T) * (U ? 1 : -1)), (R = Math.abs(R) * (U ? 1 : -1))),
          (I.diff = T),
          (T *= A.touchRatio),
          U && ((T = -T), (R = -R));
        const Y = _.touchesDirection;
        (_.swipeDirection = T > 0 ? "prev" : "next"),
          (_.touchesDirection = R > 0 ? "prev" : "next");
        const te = _.params.loop && !A.cssMode,
          X =
            ("next" === _.touchesDirection && _.allowSlideNext) ||
            ("prev" === _.touchesDirection && _.allowSlidePrev);
        if (!E.isMoved) {
          if (
            (te && X && _.loopFix({ direction: _.swipeDirection }),
            (E.startTranslate = _.getTranslate()),
            _.setTransition(0),
            _.animating)
          ) {
            const Je = new window.CustomEvent("transitionend", {
              bubbles: !0,
              cancelable: !0,
            });
            _.wrapperEl.dispatchEvent(Je);
          }
          (E.allowMomentumBounce = !1),
            A.grabCursor &&
              (!0 === _.allowSlideNext || !0 === _.allowSlidePrev) &&
              _.setGrabCursor(!0),
            _.emit("sliderFirstMove", P);
        }
        if (
          (new Date().getTime(),
          E.isMoved &&
            E.allowThresholdMove &&
            Y !== _.touchesDirection &&
            te &&
            X &&
            Math.abs(T) >= 1)
        )
          return (
            Object.assign(I, {
              startX: k,
              startY: h,
              currentX: k,
              currentY: h,
              startTranslate: E.currentTranslate,
            }),
            (E.loopSwapReset = !0),
            void (E.startTranslate = E.currentTranslate)
          );
        _.emit("sliderMove", P),
          (E.isMoved = !0),
          (E.currentTranslate = T + E.startTranslate);
        let fe = !0,
          nt = A.resistanceRatio;
        if (
          (A.touchReleaseOnEdges && (nt = 0),
          T > 0
            ? (te &&
                X &&
                E.allowThresholdMove &&
                E.currentTranslate >
                  (A.centeredSlides
                    ? _.minTranslate() - _.slidesSizesGrid[_.activeIndex + 1]
                    : _.minTranslate()) &&
                _.loopFix({
                  direction: "prev",
                  setTranslate: !0,
                  activeSlideIndex: 0,
                }),
              E.currentTranslate > _.minTranslate() &&
                ((fe = !1),
                A.resistance &&
                  (E.currentTranslate =
                    _.minTranslate() -
                    1 +
                    (-_.minTranslate() + E.startTranslate + T) ** nt)))
            : T < 0 &&
              (te &&
                X &&
                E.allowThresholdMove &&
                E.currentTranslate <
                  (A.centeredSlides
                    ? _.maxTranslate() +
                      _.slidesSizesGrid[_.slidesSizesGrid.length - 1]
                    : _.maxTranslate()) &&
                _.loopFix({
                  direction: "next",
                  setTranslate: !0,
                  activeSlideIndex:
                    _.slides.length -
                    ("auto" === A.slidesPerView
                      ? _.slidesPerViewDynamic()
                      : Math.ceil(parseFloat(A.slidesPerView, 10))),
                }),
              E.currentTranslate < _.maxTranslate() &&
                ((fe = !1),
                A.resistance &&
                  (E.currentTranslate =
                    _.maxTranslate() +
                    1 -
                    (_.maxTranslate() - E.startTranslate - T) ** nt))),
          fe && (P.preventedByNestedSwiper = !0),
          !_.allowSlideNext &&
            "next" === _.swipeDirection &&
            E.currentTranslate < E.startTranslate &&
            (E.currentTranslate = E.startTranslate),
          !_.allowSlidePrev &&
            "prev" === _.swipeDirection &&
            E.currentTranslate > E.startTranslate &&
            (E.currentTranslate = E.startTranslate),
          !_.allowSlidePrev &&
            !_.allowSlideNext &&
            (E.currentTranslate = E.startTranslate),
          A.threshold > 0)
        ) {
          if (!(Math.abs(T) > A.threshold || E.allowThresholdMove))
            return void (E.currentTranslate = E.startTranslate);
          if (!E.allowThresholdMove)
            return (
              (E.allowThresholdMove = !0),
              (I.startX = I.currentX),
              (I.startY = I.currentY),
              (E.currentTranslate = E.startTranslate),
              void (I.diff = _.isHorizontal()
                ? I.currentX - I.startX
                : I.currentY - I.startY)
            );
        }
        !A.followFinger ||
          A.cssMode ||
          (((A.freeMode && A.freeMode.enabled && _.freeMode) ||
            A.watchSlidesProgress) &&
            (_.updateActiveIndex(), _.updateSlidesClasses()),
          A.freeMode &&
            A.freeMode.enabled &&
            _.freeMode &&
            _.freeMode.onTouchMove(),
          _.updateProgress(E.currentTranslate),
          _.setTranslate(E.currentTranslate));
      }
      function Ce(w) {
        const i = this,
          _ = i.touchEventsData;
        let A,
          E = w;
        if (
          (E.originalEvent && (E = E.originalEvent),
          "touchend" === E.type || "touchcancel" === E.type)
        ) {
          if (
            ((A = [...E.changedTouches].filter(
              (fe) => fe.identifier === _.touchId
            )[0]),
            !A || A.identifier !== _.touchId)
          )
            return;
        } else {
          if (null !== _.touchId || E.pointerId !== _.pointerId) return;
          A = E;
        }
        if (
          [
            "pointercancel",
            "pointerout",
            "pointerleave",
            "contextmenu",
          ].includes(E.type) &&
          (!["pointercancel", "contextmenu"].includes(E.type) ||
            (!i.browser.isSafari && !i.browser.isWebView))
        )
          return;
        (_.pointerId = null), (_.touchId = null);
        const {
          params: U,
          touches: j,
          rtlTranslate: P,
          slidesGrid: G,
          enabled: k,
        } = i;
        if (!k || (!U.simulateTouch && "mouse" === E.pointerType)) return;
        if (
          (_.allowTouchCallbacks && i.emit("touchEnd", E),
          (_.allowTouchCallbacks = !1),
          !_.isTouched)
        )
          return (
            _.isMoved && U.grabCursor && i.setGrabCursor(!1),
            (_.isMoved = !1),
            void (_.startMoving = !1)
          );
        U.grabCursor &&
          _.isMoved &&
          _.isTouched &&
          (!0 === i.allowSlideNext || !0 === i.allowSlidePrev) &&
          i.setGrabCursor(!1);
        const h = $e(),
          b = h - _.touchStartTime;
        if (i.allowClick) {
          const fe = E.path || (E.composedPath && E.composedPath());
          i.updateClickedSlide((fe && fe[0]) || E.target, fe),
            i.emit("tap click", E),
            b < 300 &&
              h - _.lastClickTime < 300 &&
              i.emit("doubleTap doubleClick", E);
        }
        if (
          ((_.lastClickTime = $e()),
          It(() => {
            i.destroyed || (i.allowClick = !0);
          }),
          !_.isTouched ||
            !_.isMoved ||
            !i.swipeDirection ||
            (0 === j.diff && !_.loopSwapReset) ||
            (_.currentTranslate === _.startTranslate && !_.loopSwapReset))
        )
          return (
            (_.isTouched = !1), (_.isMoved = !1), void (_.startMoving = !1)
          );
        let p;
        if (
          ((_.isTouched = !1),
          (_.isMoved = !1),
          (_.startMoving = !1),
          (p = U.followFinger
            ? P
              ? i.translate
              : -i.translate
            : -_.currentTranslate),
          U.cssMode)
        )
          return;
        if (U.freeMode && U.freeMode.enabled)
          return void i.freeMode.onTouchEnd({ currentPos: p });
        let T = 0,
          R = i.slidesSizesGrid[0];
        for (
          let fe = 0;
          fe < G.length;
          fe += fe < U.slidesPerGroupSkip ? 1 : U.slidesPerGroup
        ) {
          const nt = fe < U.slidesPerGroupSkip - 1 ? 1 : U.slidesPerGroup;
          typeof G[fe + nt] < "u"
            ? p >= G[fe] &&
              p < G[fe + nt] &&
              ((T = fe), (R = G[fe + nt] - G[fe]))
            : p >= G[fe] && ((T = fe), (R = G[G.length - 1] - G[G.length - 2]));
        }
        let Y = null,
          te = null;
        U.rewind &&
          (i.isBeginning
            ? (te =
                U.virtual && U.virtual.enabled && i.virtual
                  ? i.virtual.slides.length - 1
                  : i.slides.length - 1)
            : i.isEnd && (Y = 0));
        const X = (p - G[T]) / R,
          Z = T < U.slidesPerGroupSkip - 1 ? 1 : U.slidesPerGroup;
        if (b > U.longSwipesMs) {
          if (!U.longSwipes) return void i.slideTo(i.activeIndex);
          "next" === i.swipeDirection &&
            i.slideTo(
              X >= U.longSwipesRatio ? (U.rewind && i.isEnd ? Y : T + Z) : T
            ),
            "prev" === i.swipeDirection &&
              (X > 1 - U.longSwipesRatio
                ? i.slideTo(T + Z)
                : null !== te && X < 0 && Math.abs(X) > U.longSwipesRatio
                ? i.slideTo(te)
                : i.slideTo(T));
        } else {
          if (!U.shortSwipes) return void i.slideTo(i.activeIndex);
          !i.navigation ||
          (E.target !== i.navigation.nextEl && E.target !== i.navigation.prevEl)
            ? ("next" === i.swipeDirection && i.slideTo(null !== Y ? Y : T + Z),
              "prev" === i.swipeDirection && i.slideTo(null !== te ? te : T))
            : i.slideTo(E.target === i.navigation.nextEl ? T + Z : T);
        }
      }
      function se() {
        const w = this,
          { params: i, el: _ } = w;
        if (_ && 0 === _.offsetWidth) return;
        i.breakpoints && w.setBreakpoint();
        const { allowSlideNext: E, allowSlidePrev: A, snapGrid: I } = w,
          U = w.virtual && w.params.virtual.enabled;
        (w.allowSlideNext = !0),
          (w.allowSlidePrev = !0),
          w.updateSize(),
          w.updateSlides(),
          w.updateSlidesClasses(),
          !("auto" === i.slidesPerView || i.slidesPerView > 1) ||
          !w.isEnd ||
          w.isBeginning ||
          w.params.centeredSlides ||
          (U && i.loop)
            ? w.params.loop && !U
              ? w.slideToLoop(w.realIndex, 0, !1, !0)
              : w.slideTo(w.activeIndex, 0, !1, !0)
            : w.slideTo(w.slides.length - 1, 0, !1, !0),
          w.autoplay &&
            w.autoplay.running &&
            w.autoplay.paused &&
            (clearTimeout(w.autoplay.resizeTimeout),
            (w.autoplay.resizeTimeout = setTimeout(() => {
              w.autoplay &&
                w.autoplay.running &&
                w.autoplay.paused &&
                w.autoplay.resume();
            }, 500))),
          (w.allowSlidePrev = A),
          (w.allowSlideNext = E),
          w.params.watchOverflow && I !== w.snapGrid && w.checkOverflow();
      }
      function he(w) {
        const i = this;
        i.enabled &&
          (i.allowClick ||
            (i.params.preventClicks && w.preventDefault(),
            i.params.preventClicksPropagation &&
              i.animating &&
              (w.stopPropagation(), w.stopImmediatePropagation())));
      }
      function je() {
        const w = this,
          { wrapperEl: i, rtlTranslate: _, enabled: E } = w;
        if (!E) return;
        let A;
        (w.previousTranslate = w.translate),
          (w.translate = w.isHorizontal() ? -i.scrollLeft : -i.scrollTop),
          0 === w.translate && (w.translate = 0),
          w.updateActiveIndex(),
          w.updateSlidesClasses();
        const I = w.maxTranslate() - w.minTranslate();
        (A = 0 === I ? 0 : (w.translate - w.minTranslate()) / I),
          A !== w.progress && w.updateProgress(_ ? -w.translate : w.translate),
          w.emit("setTranslate", w.translate, !1);
      }
      function Et(w) {
        const i = this;
        ar(i, w.target),
          !i.params.cssMode &&
            ("auto" === i.params.slidesPerView || i.params.autoHeight) &&
            i.update();
      }
      function Dt() {
        const w = this;
        w.documentTouchHandlerProceeded ||
          ((w.documentTouchHandlerProceeded = !0),
          w.params.touchReleaseOnEdges && (w.el.style.touchAction = "auto"));
      }
      const St = (w, i) => {
          const _ = Ye(),
            { params: E, el: A, wrapperEl: I, device: U } = w,
            j = !!E.nested,
            P = "on" === i ? "addEventListener" : "removeEventListener",
            G = i;
          _[P]("touchstart", w.onDocumentTouchStart, {
            passive: !1,
            capture: j,
          }),
            A[P]("touchstart", w.onTouchStart, { passive: !1 }),
            A[P]("pointerdown", w.onTouchStart, { passive: !1 }),
            _[P]("touchmove", w.onTouchMove, { passive: !1, capture: j }),
            _[P]("pointermove", w.onTouchMove, { passive: !1, capture: j }),
            _[P]("touchend", w.onTouchEnd, { passive: !0 }),
            _[P]("pointerup", w.onTouchEnd, { passive: !0 }),
            _[P]("pointercancel", w.onTouchEnd, { passive: !0 }),
            _[P]("touchcancel", w.onTouchEnd, { passive: !0 }),
            _[P]("pointerout", w.onTouchEnd, { passive: !0 }),
            _[P]("pointerleave", w.onTouchEnd, { passive: !0 }),
            _[P]("contextmenu", w.onTouchEnd, { passive: !0 }),
            (E.preventClicks || E.preventClicksPropagation) &&
              A[P]("click", w.onClick, !0),
            E.cssMode && I[P]("scroll", w.onScroll),
            w[G](
              E.updateOnWindowResize
                ? U.ios || U.android
                  ? "resize orientationchange observerUpdate"
                  : "resize observerUpdate"
                : "observerUpdate",
              se,
              !0
            ),
            A[P]("load", w.onLoad, { capture: !0 });
        },
        Ln = (w, i) => w.grid && i.grid && i.grid.rows > 1;
      var qn = {
        init: !0,
        direction: "horizontal",
        oneWayMovement: !1,
        touchEventsTarget: "wrapper",
        initialSlide: 0,
        speed: 300,
        cssMode: !1,
        updateOnWindowResize: !0,
        resizeObserver: !0,
        nested: !1,
        createElements: !1,
        eventsPrefix: "swiper",
        enabled: !0,
        focusableElements:
          "input, select, option, textarea, button, video, label",
        width: null,
        height: null,
        preventInteractionOnTransition: !1,
        userAgent: null,
        url: null,
        edgeSwipeDetection: !1,
        edgeSwipeThreshold: 20,
        autoHeight: !1,
        setWrapperSize: !1,
        virtualTranslate: !1,
        effect: "slide",
        breakpoints: void 0,
        breakpointsBase: "window",
        spaceBetween: 0,
        slidesPerView: 1,
        slidesPerGroup: 1,
        slidesPerGroupSkip: 0,
        slidesPerGroupAuto: !1,
        centeredSlides: !1,
        centeredSlidesBounds: !1,
        slidesOffsetBefore: 0,
        slidesOffsetAfter: 0,
        normalizeSlideIndex: !0,
        centerInsufficientSlides: !1,
        watchOverflow: !0,
        roundLengths: !1,
        touchRatio: 1,
        touchAngle: 45,
        simulateTouch: !0,
        shortSwipes: !0,
        longSwipes: !0,
        longSwipesRatio: 0.5,
        longSwipesMs: 300,
        followFinger: !0,
        allowTouchMove: !0,
        threshold: 5,
        touchMoveStopPropagation: !1,
        touchStartPreventDefault: !0,
        touchStartForcePreventDefault: !1,
        touchReleaseOnEdges: !1,
        uniqueNavElements: !0,
        resistance: !0,
        resistanceRatio: 0.85,
        watchSlidesProgress: !1,
        grabCursor: !1,
        preventClicks: !0,
        preventClicksPropagation: !0,
        slideToClickedSlide: !1,
        loop: !1,
        loopAddBlankSlides: !0,
        loopAdditionalSlides: 0,
        loopPreventsSliding: !0,
        rewind: !1,
        allowSlidePrev: !0,
        allowSlideNext: !0,
        swipeHandler: null,
        noSwiping: !0,
        noSwipingClass: "swiper-no-swiping",
        noSwipingSelector: null,
        passiveListeners: !0,
        maxBackfaceHiddenSlides: 10,
        containerModifierClass: "swiper-",
        slideClass: "swiper-slide",
        slideBlankClass: "swiper-slide-blank",
        slideActiveClass: "swiper-slide-active",
        slideVisibleClass: "swiper-slide-visible",
        slideFullyVisibleClass: "swiper-slide-fully-visible",
        slideNextClass: "swiper-slide-next",
        slidePrevClass: "swiper-slide-prev",
        wrapperClass: "swiper-wrapper",
        lazyPreloaderClass: "swiper-lazy-preloader",
        lazyPreloadPrevNext: 0,
        runCallbacksOnInit: !0,
        _emitClasses: !1,
      };
      function fi(w, i) {
        return function (E) {
          void 0 === E && (E = {});
          const A = Object.keys(E)[0],
            I = E[A];
          "object" == typeof I && null !== I
            ? (!0 === w[A] && (w[A] = { enabled: !0 }),
              "navigation" === A &&
                w[A] &&
                w[A].enabled &&
                !w[A].prevEl &&
                !w[A].nextEl &&
                (w[A].auto = !0),
              ["pagination", "scrollbar"].indexOf(A) >= 0 &&
                w[A] &&
                w[A].enabled &&
                !w[A].el &&
                (w[A].auto = !0),
              A in w && "enabled" in I
                ? ("object" == typeof w[A] &&
                    !("enabled" in w[A]) &&
                    (w[A].enabled = !0),
                  w[A] || (w[A] = { enabled: !1 }),
                  ye(i, E))
                : ye(i, E))
            : ye(i, E);
        };
      }
      const mi = {
          eventsEmitter: {
            on(w, i, _) {
              const E = this;
              if (!E.eventsListeners || E.destroyed || "function" != typeof i)
                return E;
              const A = _ ? "unshift" : "push";
              return (
                w.split(" ").forEach((I) => {
                  E.eventsListeners[I] || (E.eventsListeners[I] = []),
                    E.eventsListeners[I][A](i);
                }),
                E
              );
            },
            once(w, i, _) {
              const E = this;
              if (!E.eventsListeners || E.destroyed || "function" != typeof i)
                return E;
              function A() {
                E.off(w, A), A.__emitterProxy && delete A.__emitterProxy;
                for (
                  var I = arguments.length, U = new Array(I), j = 0;
                  j < I;
                  j++
                )
                  U[j] = arguments[j];
                i.apply(E, U);
              }
              return (A.__emitterProxy = i), E.on(w, A, _);
            },
            onAny(w, i) {
              const _ = this;
              if (!_.eventsListeners || _.destroyed || "function" != typeof w)
                return _;
              const E = i ? "unshift" : "push";
              return (
                _.eventsAnyListeners.indexOf(w) < 0 &&
                  _.eventsAnyListeners[E](w),
                _
              );
            },
            offAny(w) {
              const i = this;
              if (!i.eventsListeners || i.destroyed || !i.eventsAnyListeners)
                return i;
              const _ = i.eventsAnyListeners.indexOf(w);
              return _ >= 0 && i.eventsAnyListeners.splice(_, 1), i;
            },
            off(w, i) {
              const _ = this;
              return (
                !_.eventsListeners ||
                  _.destroyed ||
                  !_.eventsListeners ||
                  w.split(" ").forEach((E) => {
                    typeof i > "u"
                      ? (_.eventsListeners[E] = [])
                      : _.eventsListeners[E] &&
                        _.eventsListeners[E].forEach((A, I) => {
                          (A === i ||
                            (A.__emitterProxy && A.__emitterProxy === i)) &&
                            _.eventsListeners[E].splice(I, 1);
                        });
                  }),
                _
              );
            },
            emit() {
              const w = this;
              if (!w.eventsListeners || w.destroyed || !w.eventsListeners)
                return w;
              let i, _, E;
              for (
                var A = arguments.length, I = new Array(A), U = 0;
                U < A;
                U++
              )
                I[U] = arguments[U];
              return (
                "string" == typeof I[0] || Array.isArray(I[0])
                  ? ((i = I[0]), (_ = I.slice(1, I.length)), (E = w))
                  : ((i = I[0].events),
                    (_ = I[0].data),
                    (E = I[0].context || w)),
                _.unshift(E),
                (Array.isArray(i) ? i : i.split(" ")).forEach((P) => {
                  w.eventsAnyListeners &&
                    w.eventsAnyListeners.length &&
                    w.eventsAnyListeners.forEach((G) => {
                      G.apply(E, [P, ..._]);
                    }),
                    w.eventsListeners &&
                      w.eventsListeners[P] &&
                      w.eventsListeners[P].forEach((G) => {
                        G.apply(E, _);
                      });
                }),
                w
              );
            },
          },
          update: {
            updateSize: function Ct() {
              const w = this;
              let i, _;
              const E = w.el;
              (i =
                typeof w.params.width < "u" && null !== w.params.width
                  ? w.params.width
                  : E.clientWidth),
                (_ =
                  typeof w.params.height < "u" && null !== w.params.height
                    ? w.params.height
                    : E.clientHeight),
                !(
                  (0 === i && w.isHorizontal()) ||
                  (0 === _ && w.isVertical())
                ) &&
                  ((i =
                    i -
                    parseInt(qe(E, "padding-left") || 0, 10) -
                    parseInt(qe(E, "padding-right") || 0, 10)),
                  (_ =
                    _ -
                    parseInt(qe(E, "padding-top") || 0, 10) -
                    parseInt(qe(E, "padding-bottom") || 0, 10)),
                  Number.isNaN(i) && (i = 0),
                  Number.isNaN(_) && (_ = 0),
                  Object.assign(w, {
                    width: i,
                    height: _,
                    size: w.isHorizontal() ? i : _,
                  }));
            },
            updateSlides: function mn() {
              const w = this;
              function i(Ze, at) {
                return parseFloat(
                  Ze.getPropertyValue(w.getDirectionLabel(at)) || 0
                );
              }
              const _ = w.params,
                {
                  wrapperEl: E,
                  slidesEl: A,
                  size: I,
                  rtlTranslate: U,
                  wrongRTL: j,
                } = w,
                P = w.virtual && _.virtual.enabled,
                G = P ? w.virtual.slides.length : w.slides.length,
                k = Mt(A, `.${w.params.slideClass}, swiper-slide`),
                h = P ? w.virtual.slides.length : k.length;
              let b = [];
              const p = [],
                T = [];
              let R = _.slidesOffsetBefore;
              "function" == typeof R && (R = _.slidesOffsetBefore.call(w));
              let Y = _.slidesOffsetAfter;
              "function" == typeof Y && (Y = _.slidesOffsetAfter.call(w));
              const te = w.snapGrid.length,
                X = w.slidesGrid.length;
              let Z = _.spaceBetween,
                fe = -R,
                nt = 0,
                Je = 0;
              if (typeof I > "u") return;
              "string" == typeof Z && Z.indexOf("%") >= 0
                ? (Z = (parseFloat(Z.replace("%", "")) / 100) * I)
                : "string" == typeof Z && (Z = parseFloat(Z)),
                (w.virtualSize = -Z),
                k.forEach((Ze) => {
                  U ? (Ze.style.marginLeft = "") : (Ze.style.marginRight = ""),
                    (Ze.style.marginBottom = ""),
                    (Ze.style.marginTop = "");
                }),
                _.centeredSlides &&
                  _.cssMode &&
                  (me(E, "--swiper-centered-offset-before", ""),
                  me(E, "--swiper-centered-offset-after", ""));
              const _t = _.grid && _.grid.rows > 1 && w.grid;
              let ct;
              _t ? w.grid.initSlides(k) : w.grid && w.grid.unsetSlides();
              const We =
                "auto" === _.slidesPerView &&
                _.breakpoints &&
                Object.keys(_.breakpoints).filter(
                  (Ze) => typeof _.breakpoints[Ze].slidesPerView < "u"
                ).length > 0;
              for (let Ze = 0; Ze < h; Ze += 1) {
                let at;
                if (
                  ((ct = 0),
                  k[Ze] && (at = k[Ze]),
                  _t && w.grid.updateSlide(Ze, at, k),
                  !k[Ze] || "none" !== qe(at, "display"))
                ) {
                  if ("auto" === _.slidesPerView) {
                    We && (k[Ze].style[w.getDirectionLabel("width")] = "");
                    const Ke = getComputedStyle(at),
                      Le = at.style.transform,
                      de = at.style.webkitTransform;
                    if (
                      (Le && (at.style.transform = "none"),
                      de && (at.style.webkitTransform = "none"),
                      _.roundLengths)
                    )
                      ct = w.isHorizontal()
                        ? Pe(at, "width", !0)
                        : Pe(at, "height", !0);
                    else {
                      const ke = i(Ke, "width"),
                        ut = i(Ke, "padding-left"),
                        ht = i(Ke, "padding-right"),
                        rt = i(Ke, "margin-left"),
                        ft = i(Ke, "margin-right"),
                        Jt = Ke.getPropertyValue("box-sizing");
                      if (Jt && "border-box" === Jt) ct = ke + rt + ft;
                      else {
                        const { clientWidth: An, offsetWidth: Pr } = at;
                        ct = ke + ut + ht + rt + ft + (Pr - An);
                      }
                    }
                    Le && (at.style.transform = Le),
                      de && (at.style.webkitTransform = de),
                      _.roundLengths && (ct = Math.floor(ct));
                  } else
                    (ct = (I - (_.slidesPerView - 1) * Z) / _.slidesPerView),
                      _.roundLengths && (ct = Math.floor(ct)),
                      k[Ze] &&
                        (k[Ze].style[w.getDirectionLabel("width")] = `${ct}px`);
                  k[Ze] && (k[Ze].swiperSlideSize = ct),
                    T.push(ct),
                    _.centeredSlides
                      ? ((fe = fe + ct / 2 + nt / 2 + Z),
                        0 === nt && 0 !== Ze && (fe = fe - I / 2 - Z),
                        0 === Ze && (fe = fe - I / 2 - Z),
                        Math.abs(fe) < 0.001 && (fe = 0),
                        _.roundLengths && (fe = Math.floor(fe)),
                        Je % _.slidesPerGroup == 0 && b.push(fe),
                        p.push(fe))
                      : (_.roundLengths && (fe = Math.floor(fe)),
                        (Je - Math.min(w.params.slidesPerGroupSkip, Je)) %
                          w.params.slidesPerGroup ==
                          0 && b.push(fe),
                        p.push(fe),
                        (fe = fe + ct + Z)),
                    (w.virtualSize += ct + Z),
                    (nt = ct),
                    (Je += 1);
                }
              }
              if (
                ((w.virtualSize = Math.max(w.virtualSize, I) + Y),
                U &&
                  j &&
                  ("slide" === _.effect || "coverflow" === _.effect) &&
                  (E.style.width = `${w.virtualSize + Z}px`),
                _.setWrapperSize &&
                  (E.style[w.getDirectionLabel("width")] = `${
                    w.virtualSize + Z
                  }px`),
                _t && w.grid.updateWrapperSize(ct, b),
                !_.centeredSlides)
              ) {
                const Ze = [];
                for (let at = 0; at < b.length; at += 1) {
                  let Ke = b[at];
                  _.roundLengths && (Ke = Math.floor(Ke)),
                    b[at] <= w.virtualSize - I && Ze.push(Ke);
                }
                (b = Ze),
                  Math.floor(w.virtualSize - I) - Math.floor(b[b.length - 1]) >
                    1 && b.push(w.virtualSize - I);
              }
              if (P && _.loop) {
                const Ze = T[0] + Z;
                if (_.slidesPerGroup > 1) {
                  const at = Math.ceil(
                      (w.virtual.slidesBefore + w.virtual.slidesAfter) /
                        _.slidesPerGroup
                    ),
                    Ke = Ze * _.slidesPerGroup;
                  for (let Le = 0; Le < at; Le += 1)
                    b.push(b[b.length - 1] + Ke);
                }
                for (
                  let at = 0;
                  at < w.virtual.slidesBefore + w.virtual.slidesAfter;
                  at += 1
                )
                  1 === _.slidesPerGroup && b.push(b[b.length - 1] + Ze),
                    p.push(p[p.length - 1] + Ze),
                    (w.virtualSize += Ze);
              }
              if ((0 === b.length && (b = [0]), 0 !== Z)) {
                const Ze =
                  w.isHorizontal() && U
                    ? "marginLeft"
                    : w.getDirectionLabel("marginRight");
                k.filter(
                  (at, Ke) => !(_.cssMode && !_.loop) || Ke !== k.length - 1
                ).forEach((at) => {
                  at.style[Ze] = `${Z}px`;
                });
              }
              if (_.centeredSlides && _.centeredSlidesBounds) {
                let Ze = 0;
                T.forEach((Ke) => {
                  Ze += Ke + (Z || 0);
                }),
                  (Ze -= Z);
                const at = Ze - I;
                b = b.map((Ke) => (Ke <= 0 ? -R : Ke > at ? at + Y : Ke));
              }
              if (_.centerInsufficientSlides) {
                let Ze = 0;
                if (
                  (T.forEach((at) => {
                    Ze += at + (Z || 0);
                  }),
                  (Ze -= Z),
                  Ze < I)
                ) {
                  const at = (I - Ze) / 2;
                  b.forEach((Ke, Le) => {
                    b[Le] = Ke - at;
                  }),
                    p.forEach((Ke, Le) => {
                      p[Le] = Ke + at;
                    });
                }
              }
              if (
                (Object.assign(w, {
                  slides: k,
                  snapGrid: b,
                  slidesGrid: p,
                  slidesSizesGrid: T,
                }),
                _.centeredSlides && _.cssMode && !_.centeredSlidesBounds)
              ) {
                me(E, "--swiper-centered-offset-before", -b[0] + "px"),
                  me(
                    E,
                    "--swiper-centered-offset-after",
                    w.size / 2 - T[T.length - 1] / 2 + "px"
                  );
                const Ze = -w.snapGrid[0],
                  at = -w.slidesGrid[0];
                (w.snapGrid = w.snapGrid.map((Ke) => Ke + Ze)),
                  (w.slidesGrid = w.slidesGrid.map((Ke) => Ke + at));
              }
              if (
                (h !== G && w.emit("slidesLengthChange"),
                b.length !== te &&
                  (w.params.watchOverflow && w.checkOverflow(),
                  w.emit("snapGridLengthChange")),
                p.length !== X && w.emit("slidesGridLengthChange"),
                _.watchSlidesProgress && w.updateSlidesOffset(),
                !(
                  P ||
                  _.cssMode ||
                  ("slide" !== _.effect && "fade" !== _.effect)
                ))
              ) {
                const Ze = `${_.containerModifierClass}backface-hidden`,
                  at = w.el.classList.contains(Ze);
                h <= _.maxBackfaceHiddenSlides
                  ? at || w.el.classList.add(Ze)
                  : at && w.el.classList.remove(Ze);
              }
            },
            updateAutoHeight: function cn(w) {
              const i = this,
                _ = [],
                E = i.virtual && i.params.virtual.enabled;
              let I,
                A = 0;
              "number" == typeof w
                ? i.setTransition(w)
                : !0 === w && i.setTransition(i.params.speed);
              const U = (j) =>
                E ? i.slides[i.getSlideIndexByData(j)] : i.slides[j];
              if (
                "auto" !== i.params.slidesPerView &&
                i.params.slidesPerView > 1
              )
                if (i.params.centeredSlides)
                  (i.visibleSlides || []).forEach((j) => {
                    _.push(j);
                  });
                else
                  for (I = 0; I < Math.ceil(i.params.slidesPerView); I += 1) {
                    const j = i.activeIndex + I;
                    if (j > i.slides.length && !E) break;
                    _.push(U(j));
                  }
              else _.push(U(i.activeIndex));
              for (I = 0; I < _.length; I += 1)
                if (typeof _[I] < "u") {
                  const j = _[I].offsetHeight;
                  A = j > A ? j : A;
                }
              (A || 0 === A) && (i.wrapperEl.style.height = `${A}px`);
            },
            updateSlidesOffset: function $t() {
              const w = this,
                i = w.slides,
                _ = w.isElement
                  ? w.isHorizontal()
                    ? w.wrapperEl.offsetLeft
                    : w.wrapperEl.offsetTop
                  : 0;
              for (let E = 0; E < i.length; E += 1)
                i[E].swiperSlideOffset =
                  (w.isHorizontal() ? i[E].offsetLeft : i[E].offsetTop) -
                  _ -
                  w.cssOverflowAdjustment();
            },
            updateSlidesProgress: function Kn(w) {
              void 0 === w && (w = (this && this.translate) || 0);
              const i = this,
                _ = i.params,
                { slides: E, rtlTranslate: A, snapGrid: I } = i;
              if (0 === E.length) return;
              typeof E[0].swiperSlideOffset > "u" && i.updateSlidesOffset();
              let U = -w;
              A && (U = w),
                E.forEach((P) => {
                  P.classList.remove(
                    _.slideVisibleClass,
                    _.slideFullyVisibleClass
                  );
                }),
                (i.visibleSlidesIndexes = []),
                (i.visibleSlides = []);
              let j = _.spaceBetween;
              "string" == typeof j && j.indexOf("%") >= 0
                ? (j = (parseFloat(j.replace("%", "")) / 100) * i.size)
                : "string" == typeof j && (j = parseFloat(j));
              for (let P = 0; P < E.length; P += 1) {
                const G = E[P];
                let k = G.swiperSlideOffset;
                _.cssMode && _.centeredSlides && (k -= E[0].swiperSlideOffset);
                const h =
                    (U + (_.centeredSlides ? i.minTranslate() : 0) - k) /
                    (G.swiperSlideSize + j),
                  b =
                    (U - I[0] + (_.centeredSlides ? i.minTranslate() : 0) - k) /
                    (G.swiperSlideSize + j),
                  p = -(U - k),
                  T = p + i.slidesSizesGrid[P],
                  R = p >= 0 && p <= i.size - i.slidesSizesGrid[P];
                ((p >= 0 && p < i.size - 1) ||
                  (T > 1 && T <= i.size) ||
                  (p <= 0 && T >= i.size)) &&
                  (i.visibleSlides.push(G),
                  i.visibleSlidesIndexes.push(P),
                  E[P].classList.add(_.slideVisibleClass)),
                  R && E[P].classList.add(_.slideFullyVisibleClass),
                  (G.progress = A ? -h : h),
                  (G.originalProgress = A ? -b : b);
              }
            },
            updateProgress: function Er(w) {
              const i = this;
              typeof w > "u" &&
                (w =
                  (i &&
                    i.translate &&
                    i.translate * (i.rtlTranslate ? -1 : 1)) ||
                  0);
              const _ = i.params,
                E = i.maxTranslate() - i.minTranslate();
              let {
                progress: A,
                isBeginning: I,
                isEnd: U,
                progressLoop: j,
              } = i;
              const P = I,
                G = U;
              if (0 === E) (A = 0), (I = !0), (U = !0);
              else {
                A = (w - i.minTranslate()) / E;
                const k = Math.abs(w - i.minTranslate()) < 1,
                  h = Math.abs(w - i.maxTranslate()) < 1;
                (I = k || A <= 0),
                  (U = h || A >= 1),
                  k && (A = 0),
                  h && (A = 1);
              }
              if (_.loop) {
                const k = i.getSlideIndexByData(0),
                  h = i.getSlideIndexByData(i.slides.length - 1),
                  b = i.slidesGrid[k],
                  p = i.slidesGrid[h],
                  T = i.slidesGrid[i.slidesGrid.length - 1],
                  R = Math.abs(w);
                (j = R >= b ? (R - b) / T : (R + T - p) / T), j > 1 && (j -= 1);
              }
              Object.assign(i, {
                progress: A,
                progressLoop: j,
                isBeginning: I,
                isEnd: U,
              }),
                (_.watchSlidesProgress || (_.centeredSlides && _.autoHeight)) &&
                  i.updateSlidesProgress(w),
                I && !P && i.emit("reachBeginning toEdge"),
                U && !G && i.emit("reachEnd toEdge"),
                ((P && !I) || (G && !U)) && i.emit("fromEdge"),
                i.emit("progress", A);
            },
            updateSlidesClasses: function pr() {
              const w = this,
                { slides: i, params: _, slidesEl: E, activeIndex: A } = w,
                I = w.virtual && _.virtual.enabled,
                U = w.grid && _.grid && _.grid.rows > 1,
                j = (h) => Mt(E, `.${_.slideClass}${h}, swiper-slide${h}`)[0];
              let P, G, k;
              if (
                (i.forEach((h) => {
                  h.classList.remove(
                    _.slideActiveClass,
                    _.slideNextClass,
                    _.slidePrevClass
                  );
                }),
                I)
              )
                if (_.loop) {
                  let h = A - w.virtual.slidesBefore;
                  h < 0 && (h = w.virtual.slides.length + h),
                    h >= w.virtual.slides.length &&
                      (h -= w.virtual.slides.length),
                    (P = j(`[data-swiper-slide-index="${h}"]`));
                } else P = j(`[data-swiper-slide-index="${A}"]`);
              else
                U
                  ? ((P = i.filter((h) => h.column === A)[0]),
                    (k = i.filter((h) => h.column === A + 1)[0]),
                    (G = i.filter((h) => h.column === A - 1)[0]))
                  : (P = i[A]);
              P &&
                (P.classList.add(_.slideActiveClass),
                U
                  ? (k && k.classList.add(_.slideNextClass),
                    G && G.classList.add(_.slidePrevClass))
                  : ((k = (function Ot(w, i) {
                      const _ = [];
                      for (; w.nextElementSibling; ) {
                        const E = w.nextElementSibling;
                        i ? E.matches(i) && _.push(E) : _.push(E), (w = E);
                      }
                      return _;
                    })(P, `.${_.slideClass}, swiper-slide`)[0]),
                    _.loop && !k && (k = i[0]),
                    k && k.classList.add(_.slideNextClass),
                    (G = (function qt(w, i) {
                      const _ = [];
                      for (; w.previousElementSibling; ) {
                        const E = w.previousElementSibling;
                        i ? E.matches(i) && _.push(E) : _.push(E), (w = E);
                      }
                      return _;
                    })(P, `.${_.slideClass}, swiper-slide`)[0]),
                    _.loop && 0 === !G && (G = i[i.length - 1]),
                    G && G.classList.add(_.slidePrevClass))),
                w.emitSlidesClasses();
            },
            updateActiveIndex: function Dr(w) {
              const i = this,
                _ = i.rtlTranslate ? i.translate : -i.translate,
                {
                  snapGrid: E,
                  params: A,
                  activeIndex: I,
                  realIndex: U,
                  snapIndex: j,
                } = i;
              let G,
                P = w;
              const k = (p) => {
                let T = p - i.virtual.slidesBefore;
                return (
                  T < 0 && (T = i.virtual.slides.length + T),
                  T >= i.virtual.slides.length &&
                    (T -= i.virtual.slides.length),
                  T
                );
              };
              if (
                (typeof P > "u" &&
                  (P = (function Rr(w) {
                    const { slidesGrid: i, params: _ } = w,
                      E = w.rtlTranslate ? w.translate : -w.translate;
                    let A;
                    for (let I = 0; I < i.length; I += 1)
                      typeof i[I + 1] < "u"
                        ? E >= i[I] && E < i[I + 1] - (i[I + 1] - i[I]) / 2
                          ? (A = I)
                          : E >= i[I] && E < i[I + 1] && (A = I + 1)
                        : E >= i[I] && (A = I);
                    return (
                      _.normalizeSlideIndex &&
                        (A < 0 || typeof A > "u") &&
                        (A = 0),
                      A
                    );
                  })(i)),
                E.indexOf(_) >= 0)
              )
                G = E.indexOf(_);
              else {
                const p = Math.min(A.slidesPerGroupSkip, P);
                G = p + Math.floor((P - p) / A.slidesPerGroup);
              }
              if (
                (G >= E.length && (G = E.length - 1), P === I && !i.params.loop)
              )
                return void (
                  G !== j && ((i.snapIndex = G), i.emit("snapIndexChange"))
                );
              if (
                P === I &&
                i.params.loop &&
                i.virtual &&
                i.params.virtual.enabled
              )
                return void (i.realIndex = k(P));
              const h = i.grid && A.grid && A.grid.rows > 1;
              let b;
              if (i.virtual && A.virtual.enabled && A.loop) b = k(P);
              else if (h) {
                const p = i.slides.filter((R) => R.column === P)[0];
                let T = parseInt(p.getAttribute("data-swiper-slide-index"), 10);
                Number.isNaN(T) && (T = Math.max(i.slides.indexOf(p), 0)),
                  (b = Math.floor(T / A.grid.rows));
              } else if (i.slides[P]) {
                const p = i.slides[P].getAttribute("data-swiper-slide-index");
                b = p ? parseInt(p, 10) : P;
              } else b = P;
              Object.assign(i, {
                previousSnapIndex: j,
                snapIndex: G,
                previousRealIndex: U,
                realIndex: b,
                previousIndex: I,
                activeIndex: P,
              }),
                i.initialized && zt(i),
                i.emit("activeIndexChange"),
                i.emit("snapIndexChange"),
                (i.initialized || i.params.runCallbacksOnInit) &&
                  (U !== b && i.emit("realIndexChange"), i.emit("slideChange"));
            },
            updateClickedSlide: function Bn(w, i) {
              const _ = this,
                E = _.params;
              let A = w.closest(`.${E.slideClass}, swiper-slide`);
              !A &&
                _.isElement &&
                i &&
                i.length > 1 &&
                i.includes(w) &&
                [...i.slice(i.indexOf(w) + 1, i.length)].forEach((j) => {
                  !A &&
                    j.matches &&
                    j.matches(`.${E.slideClass}, swiper-slide`) &&
                    (A = j);
                });
              let U,
                I = !1;
              if (A)
                for (let j = 0; j < _.slides.length; j += 1)
                  if (_.slides[j] === A) {
                    (I = !0), (U = j);
                    break;
                  }
              if (!A || !I)
                return (
                  (_.clickedSlide = void 0), void (_.clickedIndex = void 0)
                );
              (_.clickedSlide = A),
                (_.clickedIndex =
                  _.virtual && _.params.virtual.enabled
                    ? parseInt(A.getAttribute("data-swiper-slide-index"), 10)
                    : U),
                E.slideToClickedSlide &&
                  void 0 !== _.clickedIndex &&
                  _.clickedIndex !== _.activeIndex &&
                  _.slideToClickedSlide();
            },
          },
          translate: {
            getTranslate: function Wt(w) {
              void 0 === w && (w = this.isHorizontal() ? "x" : "y");
              const {
                params: _,
                rtlTranslate: E,
                translate: A,
                wrapperEl: I,
              } = this;
              if (_.virtualTranslate) return E ? -A : A;
              if (_.cssMode) return A;
              let U = Se(I, w);
              return (U += this.cssOverflowAdjustment()), E && (U = -U), U || 0;
            },
            setTranslate: function Wr(w, i) {
              const _ = this,
                { rtlTranslate: E, params: A, wrapperEl: I, progress: U } = _;
              let k,
                j = 0,
                P = 0;
              _.isHorizontal() ? (j = E ? -w : w) : (P = w),
                A.roundLengths && ((j = Math.floor(j)), (P = Math.floor(P))),
                (_.previousTranslate = _.translate),
                (_.translate = _.isHorizontal() ? j : P),
                A.cssMode
                  ? (I[_.isHorizontal() ? "scrollLeft" : "scrollTop"] =
                      _.isHorizontal() ? -j : -P)
                  : A.virtualTranslate ||
                    (_.isHorizontal()
                      ? (j -= _.cssOverflowAdjustment())
                      : (P -= _.cssOverflowAdjustment()),
                    (I.style.transform = `translate3d(${j}px, ${P}px, 0px)`));
              const h = _.maxTranslate() - _.minTranslate();
              (k = 0 === h ? 0 : (w - _.minTranslate()) / h),
                k !== U && _.updateProgress(w),
                _.emit("setTranslate", _.translate, i);
            },
            minTranslate: function Vn() {
              return -this.snapGrid[0];
            },
            maxTranslate: function lr() {
              return -this.snapGrid[this.snapGrid.length - 1];
            },
            translateTo: function _n(w, i, _, E, A) {
              void 0 === w && (w = 0),
                void 0 === i && (i = this.params.speed),
                void 0 === _ && (_ = !0),
                void 0 === E && (E = !0);
              const I = this,
                { params: U, wrapperEl: j } = I;
              if (I.animating && U.preventInteractionOnTransition) return !1;
              const P = I.minTranslate(),
                G = I.maxTranslate();
              let k;
              if (
                ((k = E && w > P ? P : E && w < G ? G : w),
                I.updateProgress(k),
                U.cssMode)
              ) {
                const h = I.isHorizontal();
                if (0 === i) j[h ? "scrollLeft" : "scrollTop"] = -k;
                else {
                  if (!I.support.smoothScroll)
                    return (
                      dt({
                        swiper: I,
                        targetPosition: -k,
                        side: h ? "left" : "top",
                      }),
                      !0
                    );
                  j.scrollTo({ [h ? "left" : "top"]: -k, behavior: "smooth" });
                }
                return !0;
              }
              return (
                0 === i
                  ? (I.setTransition(0),
                    I.setTranslate(k),
                    _ &&
                      (I.emit("beforeTransitionStart", i, A),
                      I.emit("transitionEnd")))
                  : (I.setTransition(i),
                    I.setTranslate(k),
                    _ &&
                      (I.emit("beforeTransitionStart", i, A),
                      I.emit("transitionStart")),
                    I.animating ||
                      ((I.animating = !0),
                      I.onTranslateToWrapperTransitionEnd ||
                        (I.onTranslateToWrapperTransitionEnd = function (b) {
                          !I ||
                            I.destroyed ||
                            (b.target === this &&
                              (I.wrapperEl.removeEventListener(
                                "transitionend",
                                I.onTranslateToWrapperTransitionEnd
                              ),
                              (I.onTranslateToWrapperTransitionEnd = null),
                              delete I.onTranslateToWrapperTransitionEnd,
                              _ && I.emit("transitionEnd")));
                        }),
                      I.wrapperEl.addEventListener(
                        "transitionend",
                        I.onTranslateToWrapperTransitionEnd
                      ))),
                !0
              );
            },
          },
          transition: {
            setTransition: function wn(w, i) {
              const _ = this;
              _.params.cssMode ||
                ((_.wrapperEl.style.transitionDuration = `${w}ms`),
                (_.wrapperEl.style.transitionDelay = 0 === w ? "0ms" : "")),
                _.emit("setTransition", w, i);
            },
            transitionStart: function wr(w, i) {
              void 0 === w && (w = !0);
              const _ = this,
                { params: E } = _;
              E.cssMode ||
                (E.autoHeight && _.updateAutoHeight(),
                Yr({
                  swiper: _,
                  runCallbacks: w,
                  direction: i,
                  step: "Start",
                }));
            },
            transitionEnd: function rn(w, i) {
              void 0 === w && (w = !0);
              const _ = this,
                { params: E } = _;
              (_.animating = !1),
                !E.cssMode &&
                  (_.setTransition(0),
                  Yr({
                    swiper: _,
                    runCallbacks: w,
                    direction: i,
                    step: "End",
                  }));
            },
          },
          slide: {
            slideTo: function cr(w, i, _, E, A) {
              void 0 === w && (w = 0),
                void 0 === i && (i = this.params.speed),
                void 0 === _ && (_ = !0),
                "string" == typeof w && (w = parseInt(w, 10));
              const I = this;
              let U = w;
              U < 0 && (U = 0);
              const {
                params: j,
                snapGrid: P,
                slidesGrid: G,
                previousIndex: k,
                activeIndex: h,
                rtlTranslate: b,
                wrapperEl: p,
                enabled: T,
              } = I;
              if (
                (I.animating && j.preventInteractionOnTransition) ||
                (!T && !E && !A)
              )
                return !1;
              const R = Math.min(I.params.slidesPerGroupSkip, U);
              let Y = R + Math.floor((U - R) / I.params.slidesPerGroup);
              Y >= P.length && (Y = P.length - 1);
              const te = -P[Y];
              if (j.normalizeSlideIndex)
                for (let Z = 0; Z < G.length; Z += 1) {
                  const fe = -Math.floor(100 * te),
                    nt = Math.floor(100 * G[Z]),
                    Je = Math.floor(100 * G[Z + 1]);
                  typeof G[Z + 1] < "u"
                    ? fe >= nt && fe < Je - (Je - nt) / 2
                      ? (U = Z)
                      : fe >= nt && fe < Je && (U = Z + 1)
                    : fe >= nt && (U = Z);
                }
              if (
                I.initialized &&
                U !== h &&
                ((!I.allowSlideNext &&
                  (b
                    ? te > I.translate && te > I.minTranslate()
                    : te < I.translate && te < I.minTranslate())) ||
                  (!I.allowSlidePrev &&
                    te > I.translate &&
                    te > I.maxTranslate() &&
                    (h || 0) !== U))
              )
                return !1;
              let X;
              if (
                (U !== (k || 0) && _ && I.emit("beforeSlideChangeStart"),
                I.updateProgress(te),
                (X = U > h ? "next" : U < h ? "prev" : "reset"),
                (b && -te === I.translate) || (!b && te === I.translate))
              )
                return (
                  I.updateActiveIndex(U),
                  j.autoHeight && I.updateAutoHeight(),
                  I.updateSlidesClasses(),
                  "slide" !== j.effect && I.setTranslate(te),
                  "reset" !== X &&
                    (I.transitionStart(_, X), I.transitionEnd(_, X)),
                  !1
                );
              if (j.cssMode) {
                const Z = I.isHorizontal(),
                  fe = b ? te : -te;
                if (0 === i) {
                  const nt = I.virtual && I.params.virtual.enabled;
                  nt &&
                    ((I.wrapperEl.style.scrollSnapType = "none"),
                    (I._immediateVirtual = !0)),
                    nt &&
                    !I._cssModeVirtualInitialSet &&
                    I.params.initialSlide > 0
                      ? ((I._cssModeVirtualInitialSet = !0),
                        requestAnimationFrame(() => {
                          p[Z ? "scrollLeft" : "scrollTop"] = fe;
                        }))
                      : (p[Z ? "scrollLeft" : "scrollTop"] = fe),
                    nt &&
                      requestAnimationFrame(() => {
                        (I.wrapperEl.style.scrollSnapType = ""),
                          (I._immediateVirtual = !1);
                      });
                } else {
                  if (!I.support.smoothScroll)
                    return (
                      dt({
                        swiper: I,
                        targetPosition: fe,
                        side: Z ? "left" : "top",
                      }),
                      !0
                    );
                  p.scrollTo({ [Z ? "left" : "top"]: fe, behavior: "smooth" });
                }
                return !0;
              }
              return (
                I.setTransition(i),
                I.setTranslate(te),
                I.updateActiveIndex(U),
                I.updateSlidesClasses(),
                I.emit("beforeTransitionStart", i, E),
                I.transitionStart(_, X),
                0 === i
                  ? I.transitionEnd(_, X)
                  : I.animating ||
                    ((I.animating = !0),
                    I.onSlideToWrapperTransitionEnd ||
                      (I.onSlideToWrapperTransitionEnd = function (fe) {
                        !I ||
                          I.destroyed ||
                          (fe.target === this &&
                            (I.wrapperEl.removeEventListener(
                              "transitionend",
                              I.onSlideToWrapperTransitionEnd
                            ),
                            (I.onSlideToWrapperTransitionEnd = null),
                            delete I.onSlideToWrapperTransitionEnd,
                            I.transitionEnd(_, X)));
                      }),
                    I.wrapperEl.addEventListener(
                      "transitionend",
                      I.onSlideToWrapperTransitionEnd
                    )),
                !0
              );
            },
            slideToLoop: function Cr(w, i, _, E) {
              void 0 === w && (w = 0),
                void 0 === i && (i = this.params.speed),
                void 0 === _ && (_ = !0),
                "string" == typeof w && (w = parseInt(w, 10));
              const A = this,
                I = A.grid && A.params.grid && A.params.grid.rows > 1;
              let U = w;
              if (A.params.loop)
                if (A.virtual && A.params.virtual.enabled)
                  U += A.virtual.slidesBefore;
                else {
                  let j;
                  if (I) {
                    const b = U * A.params.grid.rows;
                    j = A.slides.filter(
                      (p) => 1 * p.getAttribute("data-swiper-slide-index") === b
                    )[0].column;
                  } else j = A.getSlideIndexByData(U);
                  const P = I
                      ? Math.ceil(A.slides.length / A.params.grid.rows)
                      : A.slides.length,
                    { centeredSlides: G } = A.params;
                  let k = A.params.slidesPerView;
                  "auto" === k
                    ? (k = A.slidesPerViewDynamic())
                    : ((k = Math.ceil(parseFloat(A.params.slidesPerView, 10))),
                      G && k % 2 == 0 && (k += 1));
                  let h = P - j < k;
                  if ((G && (h = h || j < Math.ceil(k / 2)), h)) {
                    const b = G
                      ? j < A.activeIndex
                        ? "prev"
                        : "next"
                      : j - A.activeIndex - 1 < A.params.slidesPerView
                      ? "next"
                      : "prev";
                    A.loopFix({
                      direction: b,
                      slideTo: !0,
                      activeSlideIndex: "next" === b ? j + 1 : j - P + 1,
                      slideRealIndex: "next" === b ? A.realIndex : void 0,
                    });
                  }
                  if (I) {
                    const b = U * A.params.grid.rows;
                    U = A.slides.filter(
                      (p) => 1 * p.getAttribute("data-swiper-slide-index") === b
                    )[0].column;
                  } else U = A.getSlideIndexByData(U);
                }
              return (
                requestAnimationFrame(() => {
                  A.slideTo(U, i, _, E);
                }),
                A
              );
            },
            slideNext: function Tr(w, i, _) {
              void 0 === w && (w = this.params.speed), void 0 === i && (i = !0);
              const E = this,
                { enabled: A, params: I, animating: U } = E;
              if (!A) return E;
              let j = I.slidesPerGroup;
              "auto" === I.slidesPerView &&
                1 === I.slidesPerGroup &&
                I.slidesPerGroupAuto &&
                (j = Math.max(E.slidesPerViewDynamic("current", !0), 1));
              const P = E.activeIndex < I.slidesPerGroupSkip ? 1 : j;
              if (I.loop) {
                if (
                  U &&
                  (!E.virtual || !I.virtual.enabled) &&
                  I.loopPreventsSliding
                )
                  return !1;
                if (
                  (E.loopFix({ direction: "next" }),
                  (E._clientLeft = E.wrapperEl.clientLeft),
                  E.activeIndex === E.slides.length - 1 && I.cssMode)
                )
                  return (
                    requestAnimationFrame(() => {
                      E.slideTo(E.activeIndex + P, w, i, _);
                    }),
                    !0
                  );
              }
              return E.slideTo(
                I.rewind && E.isEnd ? 0 : E.activeIndex + P,
                w,
                i,
                _
              );
            },
            slidePrev: function ur(w, i, _) {
              void 0 === w && (w = this.params.speed), void 0 === i && (i = !0);
              const E = this,
                {
                  params: A,
                  snapGrid: I,
                  slidesGrid: U,
                  rtlTranslate: j,
                  enabled: P,
                  animating: G,
                } = E;
              if (!P) return E;
              if (A.loop) {
                if (
                  G &&
                  (!E.virtual || !A.virtual.enabled) &&
                  A.loopPreventsSliding
                )
                  return !1;
                E.loopFix({ direction: "prev" }),
                  (E._clientLeft = E.wrapperEl.clientLeft);
              }
              function b(te) {
                return te < 0 ? -Math.floor(Math.abs(te)) : Math.floor(te);
              }
              const p = b(j ? E.translate : -E.translate),
                T = I.map((te) => b(te));
              let R = I[T.indexOf(p) - 1];
              if (typeof R > "u" && A.cssMode) {
                let te;
                I.forEach((X, Z) => {
                  p >= X && (te = Z);
                }),
                  typeof te < "u" && (R = I[te > 0 ? te - 1 : te]);
              }
              let Y = 0;
              return (
                typeof R < "u" &&
                  ((Y = U.indexOf(R)),
                  Y < 0 && (Y = E.activeIndex - 1),
                  "auto" === A.slidesPerView &&
                    1 === A.slidesPerGroup &&
                    A.slidesPerGroupAuto &&
                    ((Y = Y - E.slidesPerViewDynamic("previous", !0) + 1),
                    (Y = Math.max(Y, 0)))),
                A.rewind && E.isBeginning
                  ? E.slideTo(
                      E.params.virtual && E.params.virtual.enabled && E.virtual
                        ? E.virtual.slides.length - 1
                        : E.slides.length - 1,
                      w,
                      i,
                      _
                    )
                  : A.loop && 0 === E.activeIndex && A.cssMode
                  ? (requestAnimationFrame(() => {
                      E.slideTo(Y, w, i, _);
                    }),
                    !0)
                  : E.slideTo(Y, w, i, _)
              );
            },
            slideReset: function z(w, i, _) {
              return (
                void 0 === w && (w = this.params.speed),
                void 0 === i && (i = !0),
                this.slideTo(this.activeIndex, w, i, _)
              );
            },
            slideToClosest: function le(w, i, _, E) {
              void 0 === w && (w = this.params.speed),
                void 0 === i && (i = !0),
                void 0 === E && (E = 0.5);
              const A = this;
              let I = A.activeIndex;
              const U = Math.min(A.params.slidesPerGroupSkip, I),
                j = U + Math.floor((I - U) / A.params.slidesPerGroup),
                P = A.rtlTranslate ? A.translate : -A.translate;
              if (P >= A.snapGrid[j]) {
                const G = A.snapGrid[j];
                P - G > (A.snapGrid[j + 1] - G) * E &&
                  (I += A.params.slidesPerGroup);
              } else {
                const G = A.snapGrid[j - 1];
                P - G <= (A.snapGrid[j] - G) * E &&
                  (I -= A.params.slidesPerGroup);
              }
              return (
                (I = Math.max(I, 0)),
                (I = Math.min(I, A.slidesGrid.length - 1)),
                A.slideTo(I, w, i, _)
              );
            },
            slideToClickedSlide: function be() {
              const w = this,
                { params: i, slidesEl: _ } = w,
                E =
                  "auto" === i.slidesPerView
                    ? w.slidesPerViewDynamic()
                    : i.slidesPerView;
              let I,
                A = w.clickedIndex;
              const U = w.isElement ? "swiper-slide" : `.${i.slideClass}`;
              if (i.loop) {
                if (w.animating) return;
                (I = parseInt(
                  w.clickedSlide.getAttribute("data-swiper-slide-index"),
                  10
                )),
                  i.centeredSlides
                    ? A < w.loopedSlides - E / 2 ||
                      A > w.slides.length - w.loopedSlides + E / 2
                      ? (w.loopFix(),
                        (A = w.getSlideIndex(
                          Mt(_, `${U}[data-swiper-slide-index="${I}"]`)[0]
                        )),
                        It(() => {
                          w.slideTo(A);
                        }))
                      : w.slideTo(A)
                    : A > w.slides.length - E
                    ? (w.loopFix(),
                      (A = w.getSlideIndex(
                        Mt(_, `${U}[data-swiper-slide-index="${I}"]`)[0]
                      )),
                      It(() => {
                        w.slideTo(A);
                      }))
                    : w.slideTo(A);
              } else w.slideTo(A);
            },
          },
          loop: {
            loopCreate: function ae(w) {
              const i = this,
                { params: _, slidesEl: E } = i;
              if (!_.loop || (i.virtual && i.params.virtual.enabled)) return;
              const A = () => {
                  Mt(E, `.${_.slideClass}, swiper-slide`).forEach((h, b) => {
                    h.setAttribute("data-swiper-slide-index", b);
                  });
                },
                I = i.grid && _.grid && _.grid.rows > 1,
                U = _.slidesPerGroup * (I ? _.grid.rows : 1),
                P = I && i.slides.length % _.grid.rows != 0,
                G = (k) => {
                  for (let h = 0; h < k; h += 1) {
                    const b = i.isElement
                      ? Vt("swiper-slide", [_.slideBlankClass])
                      : Vt("div", [_.slideClass, _.slideBlankClass]);
                    i.slidesEl.append(b);
                  }
                };
              i.slides.length % U != 0
                ? (_.loopAddBlankSlides
                    ? (G(U - (i.slides.length % U)),
                      i.recalcSlides(),
                      i.updateSlides())
                    : At(
                        "Swiper Loop Warning: The number of slides is not even to slidesPerGroup, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"
                      ),
                  A())
                : P
                ? (_.loopAddBlankSlides
                    ? (G(_.grid.rows - (i.slides.length % _.grid.rows)),
                      i.recalcSlides(),
                      i.updateSlides())
                    : At(
                        "Swiper Loop Warning: The number of slides is not even to grid.rows, loop mode may not function properly. You need to add more slides (or make duplicates, or empty slides)"
                      ),
                  A())
                : A(),
                i.loopFix({
                  slideRealIndex: w,
                  direction: _.centeredSlides ? void 0 : "next",
                });
            },
            loopFix: function W(w) {
              let {
                slideRealIndex: i,
                slideTo: _ = !0,
                direction: E,
                setTranslate: A,
                activeSlideIndex: I,
                byController: U,
                byMousewheel: j,
              } = void 0 === w ? {} : w;
              const P = this;
              if (!P.params.loop) return;
              P.emit("beforeLoopFix");
              const {
                  slides: G,
                  allowSlidePrev: k,
                  allowSlideNext: h,
                  slidesEl: b,
                  params: p,
                } = P,
                { centeredSlides: T } = p;
              if (
                ((P.allowSlidePrev = !0),
                (P.allowSlideNext = !0),
                P.virtual && p.virtual.enabled)
              )
                return (
                  _ &&
                    (p.centeredSlides || 0 !== P.snapIndex
                      ? p.centeredSlides && P.snapIndex < p.slidesPerView
                        ? P.slideTo(
                            P.virtual.slides.length + P.snapIndex,
                            0,
                            !1,
                            !0
                          )
                        : P.snapIndex === P.snapGrid.length - 1 &&
                          P.slideTo(P.virtual.slidesBefore, 0, !1, !0)
                      : P.slideTo(P.virtual.slides.length, 0, !1, !0)),
                  (P.allowSlidePrev = k),
                  (P.allowSlideNext = h),
                  void P.emit("loopFix")
                );
              let R = p.slidesPerView;
              "auto" === R
                ? (R = P.slidesPerViewDynamic())
                : ((R = Math.ceil(parseFloat(p.slidesPerView, 10))),
                  T && R % 2 == 0 && (R += 1));
              const Y = p.slidesPerGroupAuto ? R : p.slidesPerGroup;
              let te = Y;
              te % Y != 0 && (te += Y - (te % Y)),
                (te += p.loopAdditionalSlides),
                (P.loopedSlides = te);
              const X = P.grid && p.grid && p.grid.rows > 1;
              G.length < R + te
                ? At(
                    "Swiper Loop Warning: The number of slides is not enough for loop mode, it will be disabled and not function properly. You need to add more slides (or make duplicates) or lower the values of slidesPerView and slidesPerGroup parameters"
                  )
                : X &&
                  "row" === p.grid.fill &&
                  At(
                    "Swiper Loop Warning: Loop mode is not compatible with grid.fill = `row`"
                  );
              const Z = [],
                fe = [];
              let nt = P.activeIndex;
              typeof I > "u"
                ? (I = P.getSlideIndex(
                    G.filter((Le) =>
                      Le.classList.contains(p.slideActiveClass)
                    )[0]
                  ))
                : (nt = I);
              const Je = "next" === E || !E,
                _t = "prev" === E || !E;
              let ct = 0,
                We = 0;
              const Ze = X ? Math.ceil(G.length / p.grid.rows) : G.length,
                Ke =
                  (X ? G[I].column : I) +
                  (T && typeof A > "u" ? -R / 2 + 0.5 : 0);
              if (Ke < te) {
                ct = Math.max(te - Ke, Y);
                for (let Le = 0; Le < te - Ke; Le += 1) {
                  const de = Le - Math.floor(Le / Ze) * Ze;
                  if (X) {
                    const ke = Ze - de - 1;
                    for (let ut = G.length - 1; ut >= 0; ut -= 1)
                      G[ut].column === ke && Z.push(ut);
                  } else Z.push(Ze - de - 1);
                }
              } else if (Ke + R > Ze - te) {
                We = Math.max(Ke - (Ze - 2 * te), Y);
                for (let Le = 0; Le < We; Le += 1) {
                  const de = Le - Math.floor(Le / Ze) * Ze;
                  X
                    ? G.forEach((ke, ut) => {
                        ke.column === de && fe.push(ut);
                      })
                    : fe.push(de);
                }
              }
              if (
                ((P.__preventObserver__ = !0),
                requestAnimationFrame(() => {
                  P.__preventObserver__ = !1;
                }),
                _t &&
                  Z.forEach((Le) => {
                    (G[Le].swiperLoopMoveDOM = !0),
                      b.prepend(G[Le]),
                      (G[Le].swiperLoopMoveDOM = !1);
                  }),
                Je &&
                  fe.forEach((Le) => {
                    (G[Le].swiperLoopMoveDOM = !0),
                      b.append(G[Le]),
                      (G[Le].swiperLoopMoveDOM = !1);
                  }),
                P.recalcSlides(),
                "auto" === p.slidesPerView
                  ? P.updateSlides()
                  : X &&
                    ((Z.length > 0 && _t) || (fe.length > 0 && Je)) &&
                    P.slides.forEach((Le, de) => {
                      P.grid.updateSlide(de, Le, P.slides);
                    }),
                p.watchSlidesProgress && P.updateSlidesOffset(),
                _)
              )
                if (Z.length > 0 && _t)
                  if (typeof i > "u") {
                    const ke = P.slidesGrid[nt + ct] - P.slidesGrid[nt];
                    j
                      ? P.setTranslate(P.translate - ke)
                      : (P.slideTo(nt + ct, 0, !1, !0),
                        A &&
                          ((P.touchEventsData.startTranslate =
                            P.touchEventsData.startTranslate - ke),
                          (P.touchEventsData.currentTranslate =
                            P.touchEventsData.currentTranslate - ke)));
                  } else
                    A &&
                      (P.slideTo(
                        P.activeIndex + (X ? Z.length / p.grid.rows : Z.length),
                        0,
                        !1,
                        !0
                      ),
                      (P.touchEventsData.currentTranslate = P.translate));
                else if (fe.length > 0 && Je)
                  if (typeof i > "u") {
                    const ke = P.slidesGrid[nt - We] - P.slidesGrid[nt];
                    j
                      ? P.setTranslate(P.translate - ke)
                      : (P.slideTo(nt - We, 0, !1, !0),
                        A &&
                          ((P.touchEventsData.startTranslate =
                            P.touchEventsData.startTranslate - ke),
                          (P.touchEventsData.currentTranslate =
                            P.touchEventsData.currentTranslate - ke)));
                  } else
                    P.slideTo(
                      P.activeIndex - (X ? fe.length / p.grid.rows : fe.length),
                      0,
                      !1,
                      !0
                    );
              if (
                ((P.allowSlidePrev = k),
                (P.allowSlideNext = h),
                P.controller && P.controller.control && !U)
              ) {
                const Le = {
                  slideRealIndex: i,
                  direction: E,
                  setTranslate: A,
                  activeSlideIndex: I,
                  byController: !0,
                };
                Array.isArray(P.controller.control)
                  ? P.controller.control.forEach((de) => {
                      !de.destroyed &&
                        de.params.loop &&
                        de.loopFix({
                          ...Le,
                          slideTo:
                            de.params.slidesPerView === p.slidesPerView && _,
                        });
                    })
                  : P.controller.control instanceof P.constructor &&
                    P.controller.control.params.loop &&
                    P.controller.control.loopFix({
                      ...Le,
                      slideTo:
                        P.controller.control.params.slidesPerView ===
                          p.slidesPerView && _,
                    });
              }
              P.emit("loopFix");
            },
            loopDestroy: function ee() {
              const w = this,
                { params: i, slidesEl: _ } = w;
              if (!i.loop || (w.virtual && w.params.virtual.enabled)) return;
              w.recalcSlides();
              const E = [];
              w.slides.forEach((A) => {
                const I =
                  typeof A.swiperSlideIndex > "u"
                    ? 1 * A.getAttribute("data-swiper-slide-index")
                    : A.swiperSlideIndex;
                E[I] = A;
              }),
                w.slides.forEach((A) => {
                  A.removeAttribute("data-swiper-slide-index");
                }),
                E.forEach((A) => {
                  _.append(A);
                }),
                w.recalcSlides(),
                w.slideTo(w.realIndex, 0);
            },
          },
          grabCursor: {
            setGrabCursor: function Xe(w) {
              const i = this;
              if (
                !i.params.simulateTouch ||
                (i.params.watchOverflow && i.isLocked) ||
                i.params.cssMode
              )
                return;
              const _ =
                "container" === i.params.touchEventsTarget ? i.el : i.wrapperEl;
              i.isElement && (i.__preventObserver__ = !0),
                (_.style.cursor = "move"),
                (_.style.cursor = w ? "grabbing" : "grab"),
                i.isElement &&
                  requestAnimationFrame(() => {
                    i.__preventObserver__ = !1;
                  });
            },
            unsetGrabCursor: function vt() {
              const w = this;
              (w.params.watchOverflow && w.isLocked) ||
                w.params.cssMode ||
                (w.isElement && (w.__preventObserver__ = !0),
                (w[
                  "container" === w.params.touchEventsTarget
                    ? "el"
                    : "wrapperEl"
                ].style.cursor = ""),
                w.isElement &&
                  requestAnimationFrame(() => {
                    w.__preventObserver__ = !1;
                  }));
            },
          },
          events: {
            attachEvents: function On() {
              const w = this,
                { params: i } = w;
              (w.onTouchStart = En.bind(w)),
                (w.onTouchMove = Dn.bind(w)),
                (w.onTouchEnd = Ce.bind(w)),
                (w.onDocumentTouchStart = Dt.bind(w)),
                i.cssMode && (w.onScroll = je.bind(w)),
                (w.onClick = he.bind(w)),
                (w.onLoad = Et.bind(w)),
                St(w, "on");
            },
            detachEvents: function en() {
              St(this, "off");
            },
          },
          breakpoints: {
            setBreakpoint: function gr() {
              const w = this,
                { realIndex: i, initialized: _, params: E, el: A } = w,
                I = E.breakpoints;
              if (!I || (I && 0 === Object.keys(I).length)) return;
              const U = w.getBreakpoint(I, w.params.breakpointsBase, w.el);
              if (!U || w.currentBreakpoint === U) return;
              const P = (U in I ? I[U] : void 0) || w.originalParams,
                G = Ln(w, E),
                k = Ln(w, P),
                h = E.enabled;
              G && !k
                ? (A.classList.remove(
                    `${E.containerModifierClass}grid`,
                    `${E.containerModifierClass}grid-column`
                  ),
                  w.emitContainerClasses())
                : !G &&
                  k &&
                  (A.classList.add(`${E.containerModifierClass}grid`),
                  ((P.grid.fill && "column" === P.grid.fill) ||
                    (!P.grid.fill && "column" === E.grid.fill)) &&
                    A.classList.add(`${E.containerModifierClass}grid-column`),
                  w.emitContainerClasses()),
                ["navigation", "pagination", "scrollbar"].forEach((te) => {
                  if (typeof P[te] > "u") return;
                  const X = E[te] && E[te].enabled,
                    Z = P[te] && P[te].enabled;
                  X && !Z && w[te].disable(), !X && Z && w[te].enable();
                });
              const b = P.direction && P.direction !== E.direction,
                p = E.loop && (P.slidesPerView !== E.slidesPerView || b),
                T = E.loop;
              b && _ && w.changeDirection(), ye(w.params, P);
              const R = w.params.enabled,
                Y = w.params.loop;
              Object.assign(w, {
                allowTouchMove: w.params.allowTouchMove,
                allowSlideNext: w.params.allowSlideNext,
                allowSlidePrev: w.params.allowSlidePrev,
              }),
                h && !R ? w.disable() : !h && R && w.enable(),
                (w.currentBreakpoint = U),
                w.emit("_beforeBreakpoint", P),
                _ &&
                  (p
                    ? (w.loopDestroy(), w.loopCreate(i), w.updateSlides())
                    : !T && Y
                    ? (w.loopCreate(i), w.updateSlides())
                    : T && !Y && w.loopDestroy()),
                w.emit("breakpoint", P);
            },
            getBreakpoint: function er(w, i, _) {
              if (
                (void 0 === i && (i = "window"),
                !w || ("container" === i && !_))
              )
                return;
              let E = !1;
              const A = pt(),
                I = "window" === i ? A.innerHeight : _.clientHeight,
                U = Object.keys(w).map((j) => {
                  if ("string" == typeof j && 0 === j.indexOf("@")) {
                    const P = parseFloat(j.substr(1));
                    return { value: I * P, point: j };
                  }
                  return { value: j, point: j };
                });
              U.sort((j, P) => parseInt(j.value, 10) - parseInt(P.value, 10));
              for (let j = 0; j < U.length; j += 1) {
                const { point: P, value: G } = U[j];
                "window" === i
                  ? A.matchMedia(`(min-width: ${G}px)`).matches && (E = P)
                  : G <= _.clientWidth && (E = P);
              }
              return E || "max";
            },
          },
          checkOverflow: {
            checkOverflow: function qr() {
              const w = this,
                { isLocked: i, params: _ } = w,
                { slidesOffsetBefore: E } = _;
              if (E) {
                const A = w.slides.length - 1;
                w.isLocked =
                  w.size > w.slidesGrid[A] + w.slidesSizesGrid[A] + 2 * E;
              } else w.isLocked = 1 === w.snapGrid.length;
              !0 === _.allowSlideNext && (w.allowSlideNext = !w.isLocked),
                !0 === _.allowSlidePrev && (w.allowSlidePrev = !w.isLocked),
                i && i !== w.isLocked && (w.isEnd = !1),
                i !== w.isLocked && w.emit(w.isLocked ? "lock" : "unlock");
            },
          },
          classes: {
            addClasses: function pn() {
              const w = this,
                { classNames: i, params: _, rtl: E, el: A, device: I } = w,
                U = (function Xt(w, i) {
                  const _ = [];
                  return (
                    w.forEach((E) => {
                      "object" == typeof E
                        ? Object.keys(E).forEach((A) => {
                            E[A] && _.push(i + A);
                          })
                        : "string" == typeof E && _.push(i + E);
                    }),
                    _
                  );
                })(
                  [
                    "initialized",
                    _.direction,
                    { "free-mode": w.params.freeMode && _.freeMode.enabled },
                    { autoheight: _.autoHeight },
                    { rtl: E },
                    { grid: _.grid && _.grid.rows > 1 },
                    {
                      "grid-column":
                        _.grid && _.grid.rows > 1 && "column" === _.grid.fill,
                    },
                    { android: I.android },
                    { ios: I.ios },
                    { "css-mode": _.cssMode },
                    { centered: _.cssMode && _.centeredSlides },
                    { "watch-progress": _.watchSlidesProgress },
                  ],
                  _.containerModifierClass
                );
              i.push(...U), A.classList.add(...i), w.emitContainerClasses();
            },
            removeClasses: function Mn() {
              const { el: i, classNames: _ } = this;
              i.classList.remove(..._), this.emitContainerClasses();
            },
          },
        },
        Br = {};
      class Mr {
        constructor() {
          let i, _;
          for (var E = arguments.length, A = new Array(E), I = 0; I < E; I++)
            A[I] = arguments[I];
          1 === A.length &&
          A[0].constructor &&
          "Object" === Object.prototype.toString.call(A[0]).slice(8, -1)
            ? (_ = A[0])
            : ([i, _] = A),
            _ || (_ = {}),
            (_ = ye({}, _)),
            i && !_.el && (_.el = i);
          const U = Ye();
          if (
            _.el &&
            "string" == typeof _.el &&
            U.querySelectorAll(_.el).length > 1
          ) {
            const k = [];
            return (
              U.querySelectorAll(_.el).forEach((h) => {
                const b = ye({}, _, { el: h });
                k.push(new Mr(b));
              }),
              k
            );
          }
          const j = this;
          (j.__swiper__ = !0),
            (j.support = Bt()),
            (j.device = (function Pt(w) {
              return (
                void 0 === w && (w = {}),
                an ||
                  (an = (function Tn(w) {
                    let { userAgent: i } = void 0 === w ? {} : w;
                    const _ = Bt(),
                      E = pt(),
                      A = E.navigator.platform,
                      I = i || E.navigator.userAgent,
                      U = { ios: !1, android: !1 },
                      j = E.screen.width,
                      P = E.screen.height,
                      G = I.match(/(Android);?[\s\/]+([\d.]+)?/);
                    let k = I.match(/(iPad).*OS\s([\d_]+)/);
                    const h = I.match(/(iPod)(.*OS\s([\d_]+))?/),
                      b = !k && I.match(/(iPhone\sOS|iOS)\s([\d_]+)/),
                      p = "Win32" === A;
                    let T = "MacIntel" === A;
                    return (
                      !k &&
                        T &&
                        _.touch &&
                        [
                          "1024x1366",
                          "1366x1024",
                          "834x1194",
                          "1194x834",
                          "834x1112",
                          "1112x834",
                          "768x1024",
                          "1024x768",
                          "820x1180",
                          "1180x820",
                          "810x1080",
                          "1080x810",
                        ].indexOf(`${j}x${P}`) >= 0 &&
                        ((k = I.match(/(Version)\/([\d.]+)/)),
                        k || (k = [0, 1, "13_0_0"]),
                        (T = !1)),
                      G && !p && ((U.os = "android"), (U.android = !0)),
                      (k || b || h) && ((U.os = "ios"), (U.ios = !0)),
                      U
                    );
                  })(w)),
                an
              );
            })({ userAgent: _.userAgent })),
            (j.browser = (function Ge() {
              return (
                ln ||
                  (ln = (function Kt() {
                    const w = pt();
                    let i = !1;
                    function _() {
                      const E = w.navigator.userAgent.toLowerCase();
                      return (
                        E.indexOf("safari") >= 0 &&
                        E.indexOf("chrome") < 0 &&
                        E.indexOf("android") < 0
                      );
                    }
                    if (_()) {
                      const E = String(w.navigator.userAgent);
                      if (E.includes("Version/")) {
                        const [A, I] = E.split("Version/")[1]
                          .split(" ")[0]
                          .split(".")
                          .map((U) => Number(U));
                        i = A < 16 || (16 === A && I < 2);
                      }
                    }
                    return {
                      isSafari: i || _(),
                      needPerspectiveFix: i,
                      isWebView:
                        /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(
                          w.navigator.userAgent
                        ),
                    };
                  })()),
                ln
              );
            })()),
            (j.eventsListeners = {}),
            (j.eventsAnyListeners = []),
            (j.modules = [...j.__modules__]),
            _.modules &&
              Array.isArray(_.modules) &&
              j.modules.push(..._.modules);
          const P = {};
          j.modules.forEach((k) => {
            k({
              params: _,
              swiper: j,
              extendParams: fi(_, P),
              on: j.on.bind(j),
              once: j.once.bind(j),
              off: j.off.bind(j),
              emit: j.emit.bind(j),
            });
          });
          const G = ye({}, qn, P);
          return (
            (j.params = ye({}, G, Br, _)),
            (j.originalParams = ye({}, j.params)),
            (j.passedParams = ye({}, _)),
            j.params &&
              j.params.on &&
              Object.keys(j.params.on).forEach((k) => {
                j.on(k, j.params.on[k]);
              }),
            j.params && j.params.onAny && j.onAny(j.params.onAny),
            Object.assign(j, {
              enabled: j.params.enabled,
              el: i,
              classNames: [],
              slides: [],
              slidesGrid: [],
              snapGrid: [],
              slidesSizesGrid: [],
              isHorizontal: () => "horizontal" === j.params.direction,
              isVertical: () => "vertical" === j.params.direction,
              activeIndex: 0,
              realIndex: 0,
              isBeginning: !0,
              isEnd: !1,
              translate: 0,
              previousTranslate: 0,
              progress: 0,
              velocity: 0,
              animating: !1,
              cssOverflowAdjustment() {
                return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;
              },
              allowSlideNext: j.params.allowSlideNext,
              allowSlidePrev: j.params.allowSlidePrev,
              touchEventsData: {
                isTouched: void 0,
                isMoved: void 0,
                allowTouchCallbacks: void 0,
                touchStartTime: void 0,
                isScrolling: void 0,
                currentTranslate: void 0,
                startTranslate: void 0,
                allowThresholdMove: void 0,
                focusableElements: j.params.focusableElements,
                lastClickTime: 0,
                clickTimeout: void 0,
                velocities: [],
                allowMomentumBounce: void 0,
                startMoving: void 0,
                pointerId: null,
                touchId: null,
              },
              allowClick: !0,
              allowTouchMove: j.params.allowTouchMove,
              touches: {
                startX: 0,
                startY: 0,
                currentX: 0,
                currentY: 0,
                diff: 0,
              },
              imagesToLoad: [],
              imagesLoaded: 0,
            }),
            j.emit("_swiper"),
            j.params.init && j.init(),
            j
          );
        }
        getDirectionLabel(i) {
          return this.isHorizontal()
            ? i
            : {
                width: "height",
                "margin-top": "margin-left",
                "margin-bottom ": "margin-right",
                "margin-left": "margin-top",
                "margin-right": "margin-bottom",
                "padding-left": "padding-top",
                "padding-right": "padding-bottom",
                marginRight: "marginBottom",
              }[i];
        }
        getSlideIndex(i) {
          const { slidesEl: _, params: E } = this,
            I = re(Mt(_, `.${E.slideClass}, swiper-slide`)[0]);
          return re(i) - I;
        }
        getSlideIndexByData(i) {
          return this.getSlideIndex(
            this.slides.filter(
              (_) => 1 * _.getAttribute("data-swiper-slide-index") === i
            )[0]
          );
        }
        recalcSlides() {
          const { slidesEl: _, params: E } = this;
          this.slides = Mt(_, `.${E.slideClass}, swiper-slide`);
        }
        enable() {
          const i = this;
          i.enabled ||
            ((i.enabled = !0),
            i.params.grabCursor && i.setGrabCursor(),
            i.emit("enable"));
        }
        disable() {
          const i = this;
          i.enabled &&
            ((i.enabled = !1),
            i.params.grabCursor && i.unsetGrabCursor(),
            i.emit("disable"));
        }
        setProgress(i, _) {
          const E = this;
          i = Math.min(Math.max(i, 0), 1);
          const A = E.minTranslate(),
            U = (E.maxTranslate() - A) * i + A;
          E.translateTo(U, typeof _ > "u" ? 0 : _),
            E.updateActiveIndex(),
            E.updateSlidesClasses();
        }
        emitContainerClasses() {
          const i = this;
          if (!i.params._emitClasses || !i.el) return;
          const _ = i.el.className
            .split(" ")
            .filter(
              (E) =>
                0 === E.indexOf("swiper") ||
                0 === E.indexOf(i.params.containerModifierClass)
            );
          i.emit("_containerClasses", _.join(" "));
        }
        getSlideClasses(i) {
          const _ = this;
          return _.destroyed
            ? ""
            : i.className
                .split(" ")
                .filter(
                  (E) =>
                    0 === E.indexOf("swiper-slide") ||
                    0 === E.indexOf(_.params.slideClass)
                )
                .join(" ");
        }
        emitSlidesClasses() {
          const i = this;
          if (!i.params._emitClasses || !i.el) return;
          const _ = [];
          i.slides.forEach((E) => {
            const A = i.getSlideClasses(E);
            _.push({ slideEl: E, classNames: A }), i.emit("_slideClass", E, A);
          }),
            i.emit("_slideClasses", _);
        }
        slidesPerViewDynamic(i, _) {
          void 0 === i && (i = "current"), void 0 === _ && (_ = !1);
          const {
            params: A,
            slides: I,
            slidesGrid: U,
            slidesSizesGrid: j,
            size: P,
            activeIndex: G,
          } = this;
          let k = 1;
          if ("number" == typeof A.slidesPerView) return A.slidesPerView;
          if (A.centeredSlides) {
            let b,
              h = I[G] ? I[G].swiperSlideSize : 0;
            for (let p = G + 1; p < I.length; p += 1)
              I[p] &&
                !b &&
                ((h += I[p].swiperSlideSize), (k += 1), h > P && (b = !0));
            for (let p = G - 1; p >= 0; p -= 1)
              I[p] &&
                !b &&
                ((h += I[p].swiperSlideSize), (k += 1), h > P && (b = !0));
          } else if ("current" === i)
            for (let h = G + 1; h < I.length; h += 1)
              (_ ? U[h] + j[h] - U[G] < P : U[h] - U[G] < P) && (k += 1);
          else for (let h = G - 1; h >= 0; h -= 1) U[G] - U[h] < P && (k += 1);
          return k;
        }
        update() {
          const i = this;
          if (!i || i.destroyed) return;
          const { snapGrid: _, params: E } = i;
          function A() {
            const j = Math.min(
              Math.max(
                i.rtlTranslate ? -1 * i.translate : i.translate,
                i.maxTranslate()
              ),
              i.minTranslate()
            );
            i.setTranslate(j), i.updateActiveIndex(), i.updateSlidesClasses();
          }
          let I;
          E.breakpoints && i.setBreakpoint(),
            [...i.el.querySelectorAll('[loading="lazy"]')].forEach((U) => {
              U.complete && ar(i, U);
            }),
            i.updateSize(),
            i.updateSlides(),
            i.updateProgress(),
            i.updateSlidesClasses(),
            E.freeMode && E.freeMode.enabled && !E.cssMode
              ? (A(), E.autoHeight && i.updateAutoHeight())
              : ((I = i.slideTo(
                  ("auto" === E.slidesPerView || E.slidesPerView > 1) &&
                    i.isEnd &&
                    !E.centeredSlides
                    ? (i.virtual && E.virtual.enabled
                        ? i.virtual.slides
                        : i.slides
                      ).length - 1
                    : i.activeIndex,
                  0,
                  !1,
                  !0
                )),
                I || A()),
            E.watchOverflow && _ !== i.snapGrid && i.checkOverflow(),
            i.emit("update");
        }
        changeDirection(i, _) {
          void 0 === _ && (_ = !0);
          const E = this,
            A = E.params.direction;
          return (
            i || (i = "horizontal" === A ? "vertical" : "horizontal"),
            i === A ||
              ("horizontal" !== i && "vertical" !== i) ||
              (E.el.classList.remove(`${E.params.containerModifierClass}${A}`),
              E.el.classList.add(`${E.params.containerModifierClass}${i}`),
              E.emitContainerClasses(),
              (E.params.direction = i),
              E.slides.forEach((I) => {
                "vertical" === i ? (I.style.width = "") : (I.style.height = "");
              }),
              E.emit("changeDirection"),
              _ && E.update()),
            E
          );
        }
        changeLanguageDirection(i) {
          const _ = this;
          (_.rtl && "rtl" === i) ||
            (!_.rtl && "ltr" === i) ||
            ((_.rtl = "rtl" === i),
            (_.rtlTranslate = "horizontal" === _.params.direction && _.rtl),
            _.rtl
              ? (_.el.classList.add(`${_.params.containerModifierClass}rtl`),
                (_.el.dir = "rtl"))
              : (_.el.classList.remove(`${_.params.containerModifierClass}rtl`),
                (_.el.dir = "ltr")),
            _.update());
        }
        mount(i) {
          const _ = this;
          if (_.mounted) return !0;
          let E = i || _.params.el;
          if (("string" == typeof E && (E = document.querySelector(E)), !E))
            return !1;
          (E.swiper = _),
            E.parentNode &&
              E.parentNode.host &&
              "SWIPER-CONTAINER" === E.parentNode.host.nodeName &&
              (_.isElement = !0);
          const A = () =>
            `.${(_.params.wrapperClass || "").trim().split(" ").join(".")}`;
          let U =
            E && E.shadowRoot && E.shadowRoot.querySelector
              ? E.shadowRoot.querySelector(A())
              : Mt(E, A())[0];
          return (
            !U &&
              _.params.createElements &&
              ((U = Vt("div", _.params.wrapperClass)),
              E.append(U),
              Mt(E, `.${_.params.slideClass}`).forEach((j) => {
                U.append(j);
              })),
            Object.assign(_, {
              el: E,
              wrapperEl: U,
              slidesEl:
                _.isElement && !E.parentNode.host.slideSlots
                  ? E.parentNode.host
                  : U,
              hostEl: _.isElement ? E.parentNode.host : E,
              mounted: !0,
              rtl:
                "rtl" === E.dir.toLowerCase() || "rtl" === qe(E, "direction"),
              rtlTranslate:
                "horizontal" === _.params.direction &&
                ("rtl" === E.dir.toLowerCase() || "rtl" === qe(E, "direction")),
              wrongRTL: "-webkit-box" === qe(U, "display"),
            }),
            !0
          );
        }
        init(i) {
          const _ = this;
          if (_.initialized || !1 === _.mount(i)) return _;
          _.emit("beforeInit"),
            _.params.breakpoints && _.setBreakpoint(),
            _.addClasses(),
            _.updateSize(),
            _.updateSlides(),
            _.params.watchOverflow && _.checkOverflow(),
            _.params.grabCursor && _.enabled && _.setGrabCursor(),
            _.slideTo(
              _.params.loop && _.virtual && _.params.virtual.enabled
                ? _.params.initialSlide + _.virtual.slidesBefore
                : _.params.initialSlide,
              0,
              _.params.runCallbacksOnInit,
              !1,
              !0
            ),
            _.params.loop && _.loopCreate(),
            _.attachEvents();
          const A = [..._.el.querySelectorAll('[loading="lazy"]')];
          return (
            _.isElement &&
              A.push(..._.hostEl.querySelectorAll('[loading="lazy"]')),
            A.forEach((I) => {
              I.complete
                ? ar(_, I)
                : I.addEventListener("load", (U) => {
                    ar(_, U.target);
                  });
            }),
            zt(_),
            (_.initialized = !0),
            zt(_),
            _.emit("init"),
            _.emit("afterInit"),
            _
          );
        }
        destroy(i, _) {
          void 0 === i && (i = !0), void 0 === _ && (_ = !0);
          const E = this,
            { params: A, el: I, wrapperEl: U, slides: j } = E;
          return (
            typeof E.params > "u" ||
              E.destroyed ||
              (E.emit("beforeDestroy"),
              (E.initialized = !1),
              E.detachEvents(),
              A.loop && E.loopDestroy(),
              _ &&
                (E.removeClasses(),
                I.removeAttribute("style"),
                U.removeAttribute("style"),
                j &&
                  j.length &&
                  j.forEach((P) => {
                    P.classList.remove(
                      A.slideVisibleClass,
                      A.slideFullyVisibleClass,
                      A.slideActiveClass,
                      A.slideNextClass,
                      A.slidePrevClass
                    ),
                      P.removeAttribute("style"),
                      P.removeAttribute("data-swiper-slide-index");
                  })),
              E.emit("destroy"),
              Object.keys(E.eventsListeners).forEach((P) => {
                E.off(P);
              }),
              !1 !== i &&
                ((E.el.swiper = null),
                (function st(w) {
                  const i = w;
                  Object.keys(i).forEach((_) => {
                    try {
                      i[_] = null;
                    } catch {}
                    try {
                      delete i[_];
                    } catch {}
                  });
                })(E)),
              (E.destroyed = !0)),
            null
          );
        }
        static extendDefaults(i) {
          ye(Br, i);
        }
        static get extendedDefaults() {
          return Br;
        }
        static get defaults() {
          return qn;
        }
        static installModule(i) {
          Mr.prototype.__modules__ || (Mr.prototype.__modules__ = []);
          const _ = Mr.prototype.__modules__;
          "function" == typeof i && _.indexOf(i) < 0 && _.push(i);
        }
        static use(i) {
          return Array.isArray(i)
            ? (i.forEach((_) => Mr.installModule(_)), Mr)
            : (Mr.installModule(i), Mr);
        }
      }
      function ni(w, i, _, E) {
        return (
          w.params.createElements &&
            Object.keys(E).forEach((A) => {
              if (!_[A] && !0 === _.auto) {
                let I = Mt(w.el, `.${E[A]}`)[0];
                I ||
                  ((I = Vt("div", E[A])), (I.className = E[A]), w.el.append(I)),
                  (_[A] = I),
                  (i[A] = I);
              }
            }),
          _
        );
      }
      function Ur(w) {
        return (
          void 0 === w && (w = ""),
          `.${w
            .trim()
            .replace(/([\.:!+\/])/g, "\\$1")
            .replace(/ /g, ".")}`
        );
      }
      function Xi(w) {
        const i = this,
          { params: _, slidesEl: E } = i;
        _.loop && i.loopDestroy();
        const A = (I) => {
          if ("string" == typeof I) {
            const U = document.createElement("div");
            (U.innerHTML = I), E.append(U.children[0]), (U.innerHTML = "");
          } else E.append(I);
        };
        if ("object" == typeof w && "length" in w)
          for (let I = 0; I < w.length; I += 1) w[I] && A(w[I]);
        else A(w);
        i.recalcSlides(),
          _.loop && i.loopCreate(),
          (!_.observer || i.isElement) && i.update();
      }
      function $i(w) {
        const i = this,
          { params: _, activeIndex: E, slidesEl: A } = i;
        _.loop && i.loopDestroy();
        let I = E + 1;
        const U = (j) => {
          if ("string" == typeof j) {
            const P = document.createElement("div");
            (P.innerHTML = j), A.prepend(P.children[0]), (P.innerHTML = "");
          } else A.prepend(j);
        };
        if ("object" == typeof w && "length" in w) {
          for (let j = 0; j < w.length; j += 1) w[j] && U(w[j]);
          I = E + w.length;
        } else U(w);
        i.recalcSlides(),
          _.loop && i.loopCreate(),
          (!_.observer || i.isElement) && i.update(),
          i.slideTo(I, 0, !1);
      }
      function Qi(w, i) {
        const _ = this,
          { params: E, activeIndex: A, slidesEl: I } = _;
        let U = A;
        E.loop && ((U -= _.loopedSlides), _.loopDestroy(), _.recalcSlides());
        const j = _.slides.length;
        if (w <= 0) return void _.prependSlide(i);
        if (w >= j) return void _.appendSlide(i);
        let P = U > w ? U + 1 : U;
        const G = [];
        for (let k = j - 1; k >= w; k -= 1) {
          const h = _.slides[k];
          h.remove(), G.unshift(h);
        }
        if ("object" == typeof i && "length" in i) {
          for (let k = 0; k < i.length; k += 1) i[k] && I.append(i[k]);
          P = U > w ? U + i.length : U;
        } else I.append(i);
        for (let k = 0; k < G.length; k += 1) I.append(G[k]);
        _.recalcSlides(),
          E.loop && _.loopCreate(),
          (!E.observer || _.isElement) && _.update(),
          _.slideTo(E.loop ? P + _.loopedSlides : P, 0, !1);
      }
      function Ts(w) {
        const i = this,
          { params: _, activeIndex: E } = i;
        let A = E;
        _.loop && ((A -= i.loopedSlides), i.loopDestroy());
        let U,
          I = A;
        if ("object" == typeof w && "length" in w) {
          for (let j = 0; j < w.length; j += 1)
            (U = w[j]), i.slides[U] && i.slides[U].remove(), U < I && (I -= 1);
          I = Math.max(I, 0);
        } else
          (U = w),
            i.slides[U] && i.slides[U].remove(),
            U < I && (I -= 1),
            (I = Math.max(I, 0));
        i.recalcSlides(),
          _.loop && i.loopCreate(),
          (!_.observer || i.isElement) && i.update(),
          i.slideTo(_.loop ? I + i.loopedSlides : I, 0, !1);
      }
      function Fs() {
        const w = this,
          i = [];
        for (let _ = 0; _ < w.slides.length; _ += 1) i.push(_);
        w.removeSlide(i);
      }
      function _i(w) {
        const {
          effect: i,
          swiper: _,
          on: E,
          setTranslate: A,
          setTransition: I,
          overwriteParams: U,
          perspective: j,
          recreateShadows: P,
          getEffectParams: G,
        } = w;
        let k;
        E("beforeInit", () => {
          if (_.params.effect !== i) return;
          _.classNames.push(`${_.params.containerModifierClass}${i}`),
            j &&
              j() &&
              _.classNames.push(`${_.params.containerModifierClass}3d`);
          const h = U ? U() : {};
          Object.assign(_.params, h), Object.assign(_.originalParams, h);
        }),
          E("setTranslate", () => {
            _.params.effect === i && A();
          }),
          E("setTransition", (h, b) => {
            _.params.effect === i && I(b);
          }),
          E("transitionEnd", () => {
            if (_.params.effect === i && P) {
              if (!G || !G().slideShadows) return;
              _.slides.forEach((h) => {
                h.querySelectorAll(
                  ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                ).forEach((b) => b.remove());
              }),
                P();
            }
          }),
          E("virtualUpdate", () => {
            _.params.effect === i &&
              (_.slides.length || (k = !0),
              requestAnimationFrame(() => {
                k && _.slides && _.slides.length && (A(), (k = !1));
              }));
          });
      }
      function ri(w, i) {
        const _ = Ne(i);
        return (
          _ !== i &&
            ((_.style.backfaceVisibility = "hidden"),
            (_.style["-webkit-backface-visibility"] = "hidden")),
          _
        );
      }
      function Ei(w) {
        let { swiper: i, duration: _, transformElements: E, allSlides: A } = w;
        const { activeIndex: I } = i;
        if (i.params.virtualTranslate && 0 !== _) {
          let P,
            j = !1;
          (P = A
            ? E
            : E.filter((G) => {
                const k = G.classList.contains("swiper-slide-transform")
                  ? ((j) =>
                      j.parentElement
                        ? j.parentElement
                        : i.slides.filter(
                            (G) => G.shadowRoot && G.shadowRoot === j.parentNode
                          )[0])(G)
                  : G;
                return i.getSlideIndex(k) === I;
              })),
            P.forEach((G) => {
              Oe(G, () => {
                if (j || !i || i.destroyed) return;
                (j = !0), (i.animating = !1);
                const k = new window.CustomEvent("transitionend", {
                  bubbles: !0,
                  cancelable: !0,
                });
                i.wrapperEl.dispatchEvent(k);
              });
            });
        }
      }
      function xn(w, i, _) {
        const E = `swiper-slide-shadow${_ ? `-${_}` : ""}${
            w ? ` swiper-slide-shadow-${w}` : ""
          }`,
          A = Ne(i);
        let I = A.querySelector(`.${E.split(" ").join(".")}`);
        return I || ((I = Vt("div", E.split(" "))), A.append(I)), I;
      }
      Object.keys(mi).forEach((w) => {
        Object.keys(mi[w]).forEach((i) => {
          Mr.prototype[i] = mi[w][i];
        });
      }),
        Mr.use([
          function Qe(w) {
            let { swiper: i, on: _, emit: E } = w;
            const A = pt();
            let I = null,
              U = null;
            const j = () => {
                !i ||
                  i.destroyed ||
                  !i.initialized ||
                  (E("beforeResize"), E("resize"));
              },
              k = () => {
                !i || i.destroyed || !i.initialized || E("orientationchange");
              };
            _("init", () => {
              i.params.resizeObserver && typeof A.ResizeObserver < "u"
                ? !i ||
                  i.destroyed ||
                  !i.initialized ||
                  ((I = new ResizeObserver((h) => {
                    U = A.requestAnimationFrame(() => {
                      const { width: b, height: p } = i;
                      let T = b,
                        R = p;
                      h.forEach((Y) => {
                        let {
                          contentBoxSize: te,
                          contentRect: X,
                          target: Z,
                        } = Y;
                        (Z && Z !== i.el) ||
                          ((T = X ? X.width : (te[0] || te).inlineSize),
                          (R = X ? X.height : (te[0] || te).blockSize));
                      }),
                        (T !== b || R !== p) && j();
                    });
                  })),
                  I.observe(i.el))
                : (A.addEventListener("resize", j),
                  A.addEventListener("orientationchange", k));
            }),
              _("destroy", () => {
                U && A.cancelAnimationFrame(U),
                  I && I.unobserve && i.el && (I.unobserve(i.el), (I = null)),
                  A.removeEventListener("resize", j),
                  A.removeEventListener("orientationchange", k);
              });
          },
          function ce(w) {
            let { swiper: i, extendParams: _, on: E, emit: A } = w;
            const I = [],
              U = pt(),
              j = function (k, h) {
                void 0 === h && (h = {});
                const p = new (U.MutationObserver || U.WebkitMutationObserver)(
                  (T) => {
                    if (i.__preventObserver__) return;
                    if (1 === T.length) return void A("observerUpdate", T[0]);
                    const R = function () {
                      A("observerUpdate", T[0]);
                    };
                    U.requestAnimationFrame
                      ? U.requestAnimationFrame(R)
                      : U.setTimeout(R, 0);
                  }
                );
                p.observe(k, {
                  attributes: typeof h.attributes > "u" || h.attributes,
                  childList: typeof h.childList > "u" || h.childList,
                  characterData:
                    typeof h.characterData > "u" || h.characterData,
                }),
                  I.push(p);
              };
            _({ observer: !1, observeParents: !1, observeSlideChildren: !1 }),
              E("init", () => {
                if (i.params.observer) {
                  if (i.params.observeParents) {
                    const k = ue(i.hostEl);
                    for (let h = 0; h < k.length; h += 1) j(k[h]);
                  }
                  j(i.hostEl, { childList: i.params.observeSlideChildren }),
                    j(i.wrapperEl, { attributes: !1 });
                }
              }),
              E("destroy", () => {
                I.forEach((k) => {
                  k.disconnect();
                }),
                  I.splice(0, I.length);
              });
          },
        ]),
        Mr.use([
          function yi(w) {
            let I,
              { swiper: i, extendParams: _, on: E, emit: A } = w;
            _({
              virtual: {
                enabled: !1,
                slides: [],
                cache: !0,
                renderSlide: null,
                renderExternal: null,
                renderExternalUpdate: !0,
                addSlidesBefore: 0,
                addSlidesAfter: 0,
              },
            });
            const U = Ye();
            i.virtual = {
              cache: {},
              from: void 0,
              to: void 0,
              slides: [],
              offset: 0,
              slidesGrid: [],
            };
            const j = U.createElement("div");
            function P(T, R) {
              const Y = i.params.virtual;
              if (Y.cache && i.virtual.cache[R]) return i.virtual.cache[R];
              let te;
              return (
                Y.renderSlide
                  ? ((te = Y.renderSlide.call(i, T, R)),
                    "string" == typeof te &&
                      ((j.innerHTML = te), (te = j.children[0])))
                  : (te = i.isElement
                      ? Vt("swiper-slide")
                      : Vt("div", i.params.slideClass)),
                te.setAttribute("data-swiper-slide-index", R),
                Y.renderSlide || (te.innerHTML = T),
                Y.cache && (i.virtual.cache[R] = te),
                te
              );
            }
            function G(T) {
              const {
                  slidesPerView: R,
                  slidesPerGroup: Y,
                  centeredSlides: te,
                  loop: X,
                } = i.params,
                { addSlidesBefore: Z, addSlidesAfter: fe } = i.params.virtual,
                {
                  from: nt,
                  to: Je,
                  slides: _t,
                  slidesGrid: ct,
                  offset: We,
                } = i.virtual;
              i.params.cssMode || i.updateActiveIndex();
              const Ze = i.activeIndex || 0;
              let at, Ke, Le;
              (at = i.rtlTranslate
                ? "right"
                : i.isHorizontal()
                ? "left"
                : "top"),
                te
                  ? ((Ke = Math.floor(R / 2) + Y + fe),
                    (Le = Math.floor(R / 2) + Y + Z))
                  : ((Ke = R + (Y - 1) + fe), (Le = (X ? R : Y) + Z));
              let de = Ze - Le,
                ke = Ze + Ke;
              X || ((de = Math.max(de, 0)), (ke = Math.min(ke, _t.length - 1)));
              let ut = (i.slidesGrid[de] || 0) - (i.slidesGrid[0] || 0);
              function ht() {
                i.updateSlides(),
                  i.updateProgress(),
                  i.updateSlidesClasses(),
                  A("virtualUpdate");
              }
              if (
                (X && Ze >= Le
                  ? ((de -= Le), te || (ut += i.slidesGrid[0]))
                  : X && Ze < Le && ((de = -Le), te && (ut += i.slidesGrid[0])),
                Object.assign(i.virtual, {
                  from: de,
                  to: ke,
                  offset: ut,
                  slidesGrid: i.slidesGrid,
                  slidesBefore: Le,
                  slidesAfter: Ke,
                }),
                nt === de && Je === ke && !T)
              )
                return (
                  i.slidesGrid !== ct &&
                    ut !== We &&
                    i.slides.forEach((on) => {
                      on.style[at] =
                        ut - Math.abs(i.cssOverflowAdjustment()) + "px";
                    }),
                  i.updateProgress(),
                  void A("virtualUpdate")
                );
              if (i.params.virtual.renderExternal)
                return (
                  i.params.virtual.renderExternal.call(i, {
                    offset: ut,
                    from: de,
                    to: ke,
                    slides: (function () {
                      const Fn = [];
                      for (let Nr = de; Nr <= ke; Nr += 1) Fn.push(_t[Nr]);
                      return Fn;
                    })(),
                  }),
                  void (i.params.virtual.renderExternalUpdate
                    ? ht()
                    : A("virtualUpdate"))
                );
              const rt = [],
                ft = [],
                Jt = (on) => {
                  let Fn = on;
                  return (
                    on < 0
                      ? (Fn = _t.length + on)
                      : Fn >= _t.length && (Fn -= _t.length),
                    Fn
                  );
                };
              if (T)
                i.slides
                  .filter((on) =>
                    on.matches(`.${i.params.slideClass}, swiper-slide`)
                  )
                  .forEach((on) => {
                    on.remove();
                  });
              else
                for (let on = nt; on <= Je; on += 1)
                  if (on < de || on > ke) {
                    const Fn = Jt(on);
                    i.slides
                      .filter((Nr) =>
                        Nr.matches(
                          `.${i.params.slideClass}[data-swiper-slide-index="${Fn}"], swiper-slide[data-swiper-slide-index="${Fn}"]`
                        )
                      )
                      .forEach((Nr) => {
                        Nr.remove();
                      });
                  }
              const Pr = X ? 2 * _t.length : _t.length;
              for (let on = X ? -_t.length : 0; on < Pr; on += 1)
                if (on >= de && on <= ke) {
                  const Fn = Jt(on);
                  typeof Je > "u" || T
                    ? ft.push(Fn)
                    : (on > Je && ft.push(Fn), on < nt && rt.push(Fn));
                }
              if (
                (ft.forEach((on) => {
                  i.slidesEl.append(P(_t[on], on));
                }),
                X)
              )
                for (let on = rt.length - 1; on >= 0; on -= 1) {
                  const Fn = rt[on];
                  i.slidesEl.prepend(P(_t[Fn], Fn));
                }
              else
                rt.sort((on, Fn) => Fn - on),
                  rt.forEach((on) => {
                    i.slidesEl.prepend(P(_t[on], on));
                  });
              Mt(i.slidesEl, ".swiper-slide, swiper-slide").forEach((on) => {
                on.style[at] = ut - Math.abs(i.cssOverflowAdjustment()) + "px";
              }),
                ht();
            }
            E("beforeInit", () => {
              if (!i.params.virtual.enabled) return;
              let T;
              if (typeof i.passedParams.virtual.slides > "u") {
                const R = [...i.slidesEl.children].filter((Y) =>
                  Y.matches(`.${i.params.slideClass}, swiper-slide`)
                );
                R &&
                  R.length &&
                  ((i.virtual.slides = [...R]),
                  (T = !0),
                  R.forEach((Y, te) => {
                    Y.setAttribute("data-swiper-slide-index", te),
                      (i.virtual.cache[te] = Y),
                      Y.remove();
                  }));
              }
              T || (i.virtual.slides = i.params.virtual.slides),
                i.classNames.push(`${i.params.containerModifierClass}virtual`),
                (i.params.watchSlidesProgress = !0),
                (i.originalParams.watchSlidesProgress = !0),
                G();
            }),
              E("setTranslate", () => {
                i.params.virtual.enabled &&
                  (i.params.cssMode && !i._immediateVirtual
                    ? (clearTimeout(I),
                      (I = setTimeout(() => {
                        G();
                      }, 100)))
                    : G());
              }),
              E("init update resize", () => {
                i.params.virtual.enabled &&
                  i.params.cssMode &&
                  me(
                    i.wrapperEl,
                    "--swiper-virtual-size",
                    `${i.virtualSize}px`
                  );
              }),
              Object.assign(i.virtual, {
                appendSlide: function k(T) {
                  if ("object" == typeof T && "length" in T)
                    for (let R = 0; R < T.length; R += 1)
                      T[R] && i.virtual.slides.push(T[R]);
                  else i.virtual.slides.push(T);
                  G(!0);
                },
                prependSlide: function h(T) {
                  const R = i.activeIndex;
                  let Y = R + 1,
                    te = 1;
                  if (Array.isArray(T)) {
                    for (let X = 0; X < T.length; X += 1)
                      T[X] && i.virtual.slides.unshift(T[X]);
                    (Y = R + T.length), (te = T.length);
                  } else i.virtual.slides.unshift(T);
                  if (i.params.virtual.cache) {
                    const X = i.virtual.cache,
                      Z = {};
                    Object.keys(X).forEach((fe) => {
                      const nt = X[fe],
                        Je = nt.getAttribute("data-swiper-slide-index");
                      Je &&
                        nt.setAttribute(
                          "data-swiper-slide-index",
                          parseInt(Je, 10) + te
                        ),
                        (Z[parseInt(fe, 10) + te] = nt);
                    }),
                      (i.virtual.cache = Z);
                  }
                  G(!0), i.slideTo(Y, 0);
                },
                removeSlide: function b(T) {
                  if (typeof T > "u" || null === T) return;
                  let R = i.activeIndex;
                  if (Array.isArray(T))
                    for (let Y = T.length - 1; Y >= 0; Y -= 1)
                      i.params.virtual.cache &&
                        (delete i.virtual.cache[T[Y]],
                        Object.keys(i.virtual.cache).forEach((te) => {
                          te > T &&
                            ((i.virtual.cache[te - 1] = i.virtual.cache[te]),
                            i.virtual.cache[te - 1].setAttribute(
                              "data-swiper-slide-index",
                              te - 1
                            ),
                            delete i.virtual.cache[te]);
                        })),
                        i.virtual.slides.splice(T[Y], 1),
                        T[Y] < R && (R -= 1),
                        (R = Math.max(R, 0));
                  else
                    i.params.virtual.cache &&
                      (delete i.virtual.cache[T],
                      Object.keys(i.virtual.cache).forEach((Y) => {
                        Y > T &&
                          ((i.virtual.cache[Y - 1] = i.virtual.cache[Y]),
                          i.virtual.cache[Y - 1].setAttribute(
                            "data-swiper-slide-index",
                            Y - 1
                          ),
                          delete i.virtual.cache[Y]);
                      })),
                      i.virtual.slides.splice(T, 1),
                      T < R && (R -= 1),
                      (R = Math.max(R, 0));
                  G(!0), i.slideTo(R, 0);
                },
                removeAllSlides: function p() {
                  (i.virtual.slides = []),
                    i.params.virtual.cache && (i.virtual.cache = {}),
                    G(!0),
                    i.slideTo(0, 0);
                },
                update: G,
              });
          },
          function Ai(w) {
            let { swiper: i, extendParams: _, on: E, emit: A } = w;
            const I = Ye(),
              U = pt();
            function j(k) {
              if (!i.enabled) return;
              const { rtlTranslate: h } = i;
              let b = k;
              b.originalEvent && (b = b.originalEvent);
              const p = b.keyCode || b.charCode,
                T = i.params.keyboard.pageUpDown,
                R = T && 33 === p,
                Y = T && 34 === p,
                te = 37 === p,
                X = 39 === p,
                Z = 38 === p,
                fe = 40 === p;
              if (
                (!i.allowSlideNext &&
                  ((i.isHorizontal() && X) || (i.isVertical() && fe) || Y)) ||
                (!i.allowSlidePrev &&
                  ((i.isHorizontal() && te) || (i.isVertical() && Z) || R))
              )
                return !1;
              if (
                !(
                  b.shiftKey ||
                  b.altKey ||
                  b.ctrlKey ||
                  b.metaKey ||
                  (I.activeElement &&
                    I.activeElement.nodeName &&
                    ("input" === I.activeElement.nodeName.toLowerCase() ||
                      "textarea" === I.activeElement.nodeName.toLowerCase()))
                )
              ) {
                if (
                  i.params.keyboard.onlyInViewport &&
                  (R || Y || te || X || Z || fe)
                ) {
                  let nt = !1;
                  if (
                    ue(i.el, `.${i.params.slideClass}, swiper-slide`).length >
                      0 &&
                    0 === ue(i.el, `.${i.params.slideActiveClass}`).length
                  )
                    return;
                  const Je = i.el,
                    _t = Je.clientWidth,
                    ct = Je.clientHeight,
                    We = U.innerWidth,
                    Ze = U.innerHeight,
                    at = In(Je);
                  h && (at.left -= Je.scrollLeft);
                  const Ke = [
                    [at.left, at.top],
                    [at.left + _t, at.top],
                    [at.left, at.top + ct],
                    [at.left + _t, at.top + ct],
                  ];
                  for (let Le = 0; Le < Ke.length; Le += 1) {
                    const de = Ke[Le];
                    if (
                      de[0] >= 0 &&
                      de[0] <= We &&
                      de[1] >= 0 &&
                      de[1] <= Ze
                    ) {
                      if (0 === de[0] && 0 === de[1]) continue;
                      nt = !0;
                    }
                  }
                  if (!nt) return;
                }
                i.isHorizontal()
                  ? ((R || Y || te || X) &&
                      (b.preventDefault
                        ? b.preventDefault()
                        : (b.returnValue = !1)),
                    (((Y || X) && !h) || ((R || te) && h)) && i.slideNext(),
                    (((R || te) && !h) || ((Y || X) && h)) && i.slidePrev())
                  : ((R || Y || Z || fe) &&
                      (b.preventDefault
                        ? b.preventDefault()
                        : (b.returnValue = !1)),
                    (Y || fe) && i.slideNext(),
                    (R || Z) && i.slidePrev()),
                  A("keyPress", p);
              }
            }
            function P() {
              i.keyboard.enabled ||
                (I.addEventListener("keydown", j), (i.keyboard.enabled = !0));
            }
            function G() {
              i.keyboard.enabled &&
                (I.removeEventListener("keydown", j),
                (i.keyboard.enabled = !1));
            }
            (i.keyboard = { enabled: !1 }),
              _({
                keyboard: { enabled: !1, onlyInViewport: !0, pageUpDown: !0 },
              }),
              E("init", () => {
                i.params.keyboard.enabled && P();
              }),
              E("destroy", () => {
                i.keyboard.enabled && G();
              }),
              Object.assign(i.keyboard, { enable: P, disable: G });
          },
          function tr(w) {
            let { swiper: i, extendParams: _, on: E, emit: A } = w;
            const I = pt();
            _({
              mousewheel: {
                enabled: !1,
                releaseOnEdges: !1,
                invert: !1,
                forceToAxis: !1,
                sensitivity: 1,
                eventsTarget: "container",
                thresholdDelta: null,
                thresholdTime: null,
                noMousewheelClass: "swiper-no-mousewheel",
              },
            }),
              (i.mousewheel = { enabled: !1 });
            let U,
              P,
              j = $e();
            const G = [];
            function h() {
              i.enabled && (i.mouseEntered = !0);
            }
            function b() {
              i.enabled && (i.mouseEntered = !1);
            }
            function p(Z) {
              return (
                !(
                  (i.params.mousewheel.thresholdDelta &&
                    Z.delta < i.params.mousewheel.thresholdDelta) ||
                  (i.params.mousewheel.thresholdTime &&
                    $e() - j < i.params.mousewheel.thresholdTime)
                ) &&
                ((Z.delta >= 6 && $e() - j < 60) ||
                  (Z.direction < 0
                    ? (!i.isEnd || i.params.loop) &&
                      !i.animating &&
                      (i.slideNext(), A("scroll", Z.raw))
                    : (!i.isBeginning || i.params.loop) &&
                      !i.animating &&
                      (i.slidePrev(), A("scroll", Z.raw)),
                  (j = new I.Date().getTime()),
                  !1))
              );
            }
            function R(Z) {
              let fe = Z,
                nt = !0;
              if (
                !i.enabled ||
                Z.target.closest(`.${i.params.mousewheel.noMousewheelClass}`)
              )
                return;
              const Je = i.params.mousewheel;
              i.params.cssMode && fe.preventDefault();
              let _t = i.el;
              "container" !== i.params.mousewheel.eventsTarget &&
                (_t = document.querySelector(i.params.mousewheel.eventsTarget));
              const ct = _t && _t.contains(fe.target);
              if (!i.mouseEntered && !ct && !Je.releaseOnEdges) return !0;
              fe.originalEvent && (fe = fe.originalEvent);
              let We = 0;
              const Ze = i.rtlTranslate ? -1 : 1,
                at = (function k(Z) {
                  let _t = 0,
                    ct = 0,
                    We = 0,
                    Ze = 0;
                  return (
                    "detail" in Z && (ct = Z.detail),
                    "wheelDelta" in Z && (ct = -Z.wheelDelta / 120),
                    "wheelDeltaY" in Z && (ct = -Z.wheelDeltaY / 120),
                    "wheelDeltaX" in Z && (_t = -Z.wheelDeltaX / 120),
                    "axis" in Z &&
                      Z.axis === Z.HORIZONTAL_AXIS &&
                      ((_t = ct), (ct = 0)),
                    (We = 10 * _t),
                    (Ze = 10 * ct),
                    "deltaY" in Z && (Ze = Z.deltaY),
                    "deltaX" in Z && (We = Z.deltaX),
                    Z.shiftKey && !We && ((We = Ze), (Ze = 0)),
                    (We || Ze) &&
                      Z.deltaMode &&
                      (1 === Z.deltaMode
                        ? ((We *= 40), (Ze *= 40))
                        : ((We *= 800), (Ze *= 800))),
                    We && !_t && (_t = We < 1 ? -1 : 1),
                    Ze && !ct && (ct = Ze < 1 ? -1 : 1),
                    { spinX: _t, spinY: ct, pixelX: We, pixelY: Ze }
                  );
                })(fe);
              if (Je.forceToAxis)
                if (i.isHorizontal()) {
                  if (!(Math.abs(at.pixelX) > Math.abs(at.pixelY))) return !0;
                  We = -at.pixelX * Ze;
                } else {
                  if (!(Math.abs(at.pixelY) > Math.abs(at.pixelX))) return !0;
                  We = -at.pixelY;
                }
              else
                We =
                  Math.abs(at.pixelX) > Math.abs(at.pixelY)
                    ? -at.pixelX * Ze
                    : -at.pixelY;
              if (0 === We) return !0;
              Je.invert && (We = -We);
              let Ke = i.getTranslate() + We * Je.sensitivity;
              if (
                (Ke >= i.minTranslate() && (Ke = i.minTranslate()),
                Ke <= i.maxTranslate() && (Ke = i.maxTranslate()),
                (nt =
                  !!i.params.loop ||
                  !(Ke === i.minTranslate() || Ke === i.maxTranslate())),
                nt && i.params.nested && fe.stopPropagation(),
                i.params.freeMode && i.params.freeMode.enabled)
              ) {
                const Le = {
                    time: $e(),
                    delta: Math.abs(We),
                    direction: Math.sign(We),
                  },
                  de =
                    P &&
                    Le.time < P.time + 500 &&
                    Le.delta <= P.delta &&
                    Le.direction === P.direction;
                if (!de) {
                  P = void 0;
                  let ke = i.getTranslate() + We * Je.sensitivity;
                  const ut = i.isBeginning,
                    ht = i.isEnd;
                  if (
                    (ke >= i.minTranslate() && (ke = i.minTranslate()),
                    ke <= i.maxTranslate() && (ke = i.maxTranslate()),
                    i.setTransition(0),
                    i.setTranslate(ke),
                    i.updateProgress(),
                    i.updateActiveIndex(),
                    i.updateSlidesClasses(),
                    ((!ut && i.isBeginning) || (!ht && i.isEnd)) &&
                      i.updateSlidesClasses(),
                    i.params.loop &&
                      i.loopFix({
                        direction: Le.direction < 0 ? "next" : "prev",
                        byMousewheel: !0,
                      }),
                    i.params.freeMode.sticky)
                  ) {
                    clearTimeout(U), (U = void 0), G.length >= 15 && G.shift();
                    const rt = G.length ? G[G.length - 1] : void 0,
                      ft = G[0];
                    if (
                      (G.push(Le),
                      rt &&
                        (Le.delta > rt.delta || Le.direction !== rt.direction))
                    )
                      G.splice(0);
                    else if (
                      G.length >= 15 &&
                      Le.time - ft.time < 500 &&
                      ft.delta - Le.delta >= 1 &&
                      Le.delta <= 6
                    ) {
                      const Jt = We > 0 ? 0.8 : 0.2;
                      (P = Le),
                        G.splice(0),
                        (U = It(() => {
                          i.slideToClosest(i.params.speed, !0, void 0, Jt);
                        }, 0));
                    }
                    U ||
                      (U = It(() => {
                        (P = Le),
                          G.splice(0),
                          i.slideToClosest(i.params.speed, !0, void 0, 0.5);
                      }, 500));
                  }
                  if (
                    (de || A("scroll", fe),
                    i.params.autoplay &&
                      i.params.autoplayDisableOnInteraction &&
                      i.autoplay.stop(),
                    Je.releaseOnEdges &&
                      (ke === i.minTranslate() || ke === i.maxTranslate()))
                  )
                    return !0;
                }
              } else {
                const Le = {
                  time: $e(),
                  delta: Math.abs(We),
                  direction: Math.sign(We),
                  raw: Z,
                };
                G.length >= 2 && G.shift();
                const de = G.length ? G[G.length - 1] : void 0;
                if (
                  (G.push(Le),
                  de
                    ? (Le.direction !== de.direction ||
                        Le.delta > de.delta ||
                        Le.time > de.time + 150) &&
                      p(Le)
                    : p(Le),
                  (function T(Z) {
                    const fe = i.params.mousewheel;
                    if (Z.direction < 0) {
                      if (i.isEnd && !i.params.loop && fe.releaseOnEdges)
                        return !0;
                    } else if (
                      i.isBeginning &&
                      !i.params.loop &&
                      fe.releaseOnEdges
                    )
                      return !0;
                    return !1;
                  })(Le))
                )
                  return !0;
              }
              return (
                fe.preventDefault ? fe.preventDefault() : (fe.returnValue = !1),
                !1
              );
            }
            function Y(Z) {
              let fe = i.el;
              "container" !== i.params.mousewheel.eventsTarget &&
                (fe = document.querySelector(i.params.mousewheel.eventsTarget)),
                fe[Z]("mouseenter", h),
                fe[Z]("mouseleave", b),
                fe[Z]("wheel", R);
            }
            function te() {
              return i.params.cssMode
                ? (i.wrapperEl.removeEventListener("wheel", R), !0)
                : !i.mousewheel.enabled &&
                    (Y("addEventListener"), (i.mousewheel.enabled = !0), !0);
            }
            function X() {
              return i.params.cssMode
                ? (i.wrapperEl.addEventListener(event, R), !0)
                : !!i.mousewheel.enabled &&
                    (Y("removeEventListener"), (i.mousewheel.enabled = !1), !0);
            }
            E("init", () => {
              !i.params.mousewheel.enabled && i.params.cssMode && X(),
                i.params.mousewheel.enabled && te();
            }),
              E("destroy", () => {
                i.params.cssMode && te(), i.mousewheel.enabled && X();
              }),
              Object.assign(i.mousewheel, { enable: te, disable: X });
          },
          function Cs(w) {
            let { swiper: i, extendParams: _, on: E, emit: A } = w;
            _({
              navigation: {
                nextEl: null,
                prevEl: null,
                hideOnClick: !1,
                disabledClass: "swiper-button-disabled",
                hiddenClass: "swiper-button-hidden",
                lockClass: "swiper-button-lock",
                navigationDisabledClass: "swiper-navigation-disabled",
              },
            }),
              (i.navigation = { nextEl: null, prevEl: null });
            const I = (R) => (Array.isArray(R) ? R : [R]).filter((Y) => !!Y);
            function U(R) {
              let Y;
              return R &&
                "string" == typeof R &&
                i.isElement &&
                ((Y = i.el.querySelector(R)), Y)
                ? Y
                : (R &&
                    ("string" == typeof R &&
                      (Y = [...document.querySelectorAll(R)]),
                    i.params.uniqueNavElements &&
                      "string" == typeof R &&
                      Y.length > 1 &&
                      1 === i.el.querySelectorAll(R).length &&
                      (Y = i.el.querySelector(R))),
                  R && !Y ? R : Y);
            }
            function j(R, Y) {
              const te = i.params.navigation;
              (R = I(R)).forEach((X) => {
                X &&
                  (X.classList[Y ? "add" : "remove"](
                    ...te.disabledClass.split(" ")
                  ),
                  "BUTTON" === X.tagName && (X.disabled = Y),
                  i.params.watchOverflow &&
                    i.enabled &&
                    X.classList[i.isLocked ? "add" : "remove"](te.lockClass));
              });
            }
            function P() {
              const { nextEl: R, prevEl: Y } = i.navigation;
              if (i.params.loop) return j(Y, !1), void j(R, !1);
              j(Y, i.isBeginning && !i.params.rewind),
                j(R, i.isEnd && !i.params.rewind);
            }
            function G(R) {
              R.preventDefault(),
                (!i.isBeginning || i.params.loop || i.params.rewind) &&
                  (i.slidePrev(), A("navigationPrev"));
            }
            function k(R) {
              R.preventDefault(),
                (!i.isEnd || i.params.loop || i.params.rewind) &&
                  (i.slideNext(), A("navigationNext"));
            }
            function h() {
              const R = i.params.navigation;
              if (
                ((i.params.navigation = ni(
                  i,
                  i.originalParams.navigation,
                  i.params.navigation,
                  { nextEl: "swiper-button-next", prevEl: "swiper-button-prev" }
                )),
                !R.nextEl && !R.prevEl)
              )
                return;
              let Y = U(R.nextEl),
                te = U(R.prevEl);
              Object.assign(i.navigation, { nextEl: Y, prevEl: te }),
                (Y = I(Y)),
                (te = I(te));
              const X = (Z, fe) => {
                Z && Z.addEventListener("click", "next" === fe ? k : G),
                  !i.enabled && Z && Z.classList.add(...R.lockClass.split(" "));
              };
              Y.forEach((Z) => X(Z, "next")), te.forEach((Z) => X(Z, "prev"));
            }
            function b() {
              let { nextEl: R, prevEl: Y } = i.navigation;
              (R = I(R)), (Y = I(Y));
              const te = (X, Z) => {
                X.removeEventListener("click", "next" === Z ? k : G),
                  X.classList.remove(
                    ...i.params.navigation.disabledClass.split(" ")
                  );
              };
              R.forEach((X) => te(X, "next")), Y.forEach((X) => te(X, "prev"));
            }
            E("init", () => {
              !1 === i.params.navigation.enabled ? T() : (h(), P());
            }),
              E("toEdge fromEdge lock unlock", () => {
                P();
              }),
              E("destroy", () => {
                b();
              }),
              E("enable disable", () => {
                let { nextEl: R, prevEl: Y } = i.navigation;
                (R = I(R)),
                  (Y = I(Y)),
                  i.enabled
                    ? P()
                    : [...R, ...Y]
                        .filter((te) => !!te)
                        .forEach((te) =>
                          te.classList.add(i.params.navigation.lockClass)
                        );
              }),
              E("click", (R, Y) => {
                let { nextEl: te, prevEl: X } = i.navigation;
                (te = I(te)), (X = I(X));
                const Z = Y.target;
                if (
                  i.params.navigation.hideOnClick &&
                  !X.includes(Z) &&
                  !te.includes(Z)
                ) {
                  if (
                    i.pagination &&
                    i.params.pagination &&
                    i.params.pagination.clickable &&
                    (i.pagination.el === Z || i.pagination.el.contains(Z))
                  )
                    return;
                  let fe;
                  te.length
                    ? (fe = te[0].classList.contains(
                        i.params.navigation.hiddenClass
                      ))
                    : X.length &&
                      (fe = X[0].classList.contains(
                        i.params.navigation.hiddenClass
                      )),
                    A(!0 === fe ? "navigationShow" : "navigationHide"),
                    [...te, ...X]
                      .filter((nt) => !!nt)
                      .forEach((nt) =>
                        nt.classList.toggle(i.params.navigation.hiddenClass)
                      );
                }
              });
            const T = () => {
              i.el.classList.add(
                ...i.params.navigation.navigationDisabledClass.split(" ")
              ),
                b();
            };
            Object.assign(i.navigation, {
              enable: () => {
                i.el.classList.remove(
                  ...i.params.navigation.navigationDisabledClass.split(" ")
                ),
                  h(),
                  P();
              },
              disable: T,
              update: P,
              init: h,
              destroy: b,
            });
          },
          function Ii(w) {
            let { swiper: i, extendParams: _, on: E, emit: A } = w;
            const I = "swiper-pagination";
            _({
              pagination: {
                el: null,
                bulletElement: "span",
                clickable: !1,
                hideOnClick: !1,
                renderBullet: null,
                renderProgressbar: null,
                renderFraction: null,
                renderCustom: null,
                progressbarOpposite: !1,
                type: "bullets",
                dynamicBullets: !1,
                dynamicMainBullets: 1,
                formatFractionCurrent: (X) => X,
                formatFractionTotal: (X) => X,
                bulletClass: `${I}-bullet`,
                bulletActiveClass: `${I}-bullet-active`,
                modifierClass: `${I}-`,
                currentClass: `${I}-current`,
                totalClass: `${I}-total`,
                hiddenClass: `${I}-hidden`,
                progressbarFillClass: `${I}-progressbar-fill`,
                progressbarOppositeClass: `${I}-progressbar-opposite`,
                clickableClass: `${I}-clickable`,
                lockClass: `${I}-lock`,
                horizontalClass: `${I}-horizontal`,
                verticalClass: `${I}-vertical`,
                paginationDisabledClass: `${I}-disabled`,
              },
            }),
              (i.pagination = { el: null, bullets: [] });
            let U,
              j = 0;
            const P = (X) => (Array.isArray(X) ? X : [X]).filter((Z) => !!Z);
            function G() {
              return (
                !i.params.pagination.el ||
                !i.pagination.el ||
                (Array.isArray(i.pagination.el) && 0 === i.pagination.el.length)
              );
            }
            function k(X, Z) {
              const { bulletActiveClass: fe } = i.params.pagination;
              X &&
                (X =
                  X[("prev" === Z ? "previous" : "next") + "ElementSibling"]) &&
                (X.classList.add(`${fe}-${Z}`),
                (X =
                  X[("prev" === Z ? "previous" : "next") + "ElementSibling"]) &&
                  X.classList.add(`${fe}-${Z}-${Z}`));
            }
            function h(X) {
              const Z = X.target.closest(Ur(i.params.pagination.bulletClass));
              if (!Z) return;
              X.preventDefault();
              const fe = re(Z) * i.params.slidesPerGroup;
              if (i.params.loop) {
                if (i.realIndex === fe) return;
                i.slideToLoop(fe);
              } else i.slideTo(fe);
            }
            function b() {
              const X = i.rtl,
                Z = i.params.pagination;
              if (G()) return;
              let nt,
                Je,
                fe = i.pagination.el;
              fe = P(fe);
              const ct = i.params.loop
                ? Math.ceil(
                    (i.virtual && i.params.virtual.enabled
                      ? i.virtual.slides.length
                      : i.slides.length) / i.params.slidesPerGroup
                  )
                : i.snapGrid.length;
              if (
                (i.params.loop
                  ? ((Je = i.previousRealIndex || 0),
                    (nt =
                      i.params.slidesPerGroup > 1
                        ? Math.floor(i.realIndex / i.params.slidesPerGroup)
                        : i.realIndex))
                  : typeof i.snapIndex < "u"
                  ? ((nt = i.snapIndex), (Je = i.previousSnapIndex))
                  : ((Je = i.previousIndex || 0), (nt = i.activeIndex || 0)),
                "bullets" === Z.type &&
                  i.pagination.bullets &&
                  i.pagination.bullets.length > 0)
              ) {
                const We = i.pagination.bullets;
                let Ze, at, Ke;
                if (
                  (Z.dynamicBullets &&
                    ((U = Pe(We[0], i.isHorizontal() ? "width" : "height", !0)),
                    fe.forEach((Le) => {
                      Le.style[i.isHorizontal() ? "width" : "height"] =
                        U * (Z.dynamicMainBullets + 4) + "px";
                    }),
                    Z.dynamicMainBullets > 1 &&
                      void 0 !== Je &&
                      ((j += nt - (Je || 0)),
                      j > Z.dynamicMainBullets - 1
                        ? (j = Z.dynamicMainBullets - 1)
                        : j < 0 && (j = 0)),
                    (Ze = Math.max(nt - j, 0)),
                    (at = Ze + (Math.min(We.length, Z.dynamicMainBullets) - 1)),
                    (Ke = (at + Ze) / 2)),
                  We.forEach((Le) => {
                    const de = [
                      ...[
                        "",
                        "-next",
                        "-next-next",
                        "-prev",
                        "-prev-prev",
                        "-main",
                      ].map((ke) => `${Z.bulletActiveClass}${ke}`),
                    ]
                      .map((ke) =>
                        "string" == typeof ke && ke.includes(" ")
                          ? ke.split(" ")
                          : ke
                      )
                      .flat();
                    Le.classList.remove(...de);
                  }),
                  fe.length > 1)
                )
                  We.forEach((Le) => {
                    const de = re(Le);
                    de === nt
                      ? Le.classList.add(...Z.bulletActiveClass.split(" "))
                      : i.isElement && Le.setAttribute("part", "bullet"),
                      Z.dynamicBullets &&
                        (de >= Ze &&
                          de <= at &&
                          Le.classList.add(
                            ...`${Z.bulletActiveClass}-main`.split(" ")
                          ),
                        de === Ze && k(Le, "prev"),
                        de === at && k(Le, "next"));
                  });
                else {
                  const Le = We[nt];
                  if (
                    (Le && Le.classList.add(...Z.bulletActiveClass.split(" ")),
                    i.isElement &&
                      We.forEach((de, ke) => {
                        de.setAttribute(
                          "part",
                          ke === nt ? "bullet-active" : "bullet"
                        );
                      }),
                    Z.dynamicBullets)
                  ) {
                    const de = We[Ze],
                      ke = We[at];
                    for (let ut = Ze; ut <= at; ut += 1)
                      We[ut] &&
                        We[ut].classList.add(
                          ...`${Z.bulletActiveClass}-main`.split(" ")
                        );
                    k(de, "prev"), k(ke, "next");
                  }
                }
                if (Z.dynamicBullets) {
                  const Le = Math.min(We.length, Z.dynamicMainBullets + 4),
                    de = (U * Le - U) / 2 - Ke * U,
                    ke = X ? "right" : "left";
                  We.forEach((ut) => {
                    ut.style[i.isHorizontal() ? ke : "top"] = `${de}px`;
                  });
                }
              }
              fe.forEach((We, Ze) => {
                if (
                  ("fraction" === Z.type &&
                    (We.querySelectorAll(Ur(Z.currentClass)).forEach((at) => {
                      at.textContent = Z.formatFractionCurrent(nt + 1);
                    }),
                    We.querySelectorAll(Ur(Z.totalClass)).forEach((at) => {
                      at.textContent = Z.formatFractionTotal(ct);
                    })),
                  "progressbar" === Z.type)
                ) {
                  let at;
                  at = Z.progressbarOpposite
                    ? i.isHorizontal()
                      ? "vertical"
                      : "horizontal"
                    : i.isHorizontal()
                    ? "horizontal"
                    : "vertical";
                  const Ke = (nt + 1) / ct;
                  let Le = 1,
                    de = 1;
                  "horizontal" === at ? (Le = Ke) : (de = Ke),
                    We.querySelectorAll(Ur(Z.progressbarFillClass)).forEach(
                      (ke) => {
                        (ke.style.transform = `translate3d(0,0,0) scaleX(${Le}) scaleY(${de})`),
                          (ke.style.transitionDuration = `${i.params.speed}ms`);
                      }
                    );
                }
                "custom" === Z.type && Z.renderCustom
                  ? ((We.innerHTML = Z.renderCustom(i, nt + 1, ct)),
                    0 === Ze && A("paginationRender", We))
                  : (0 === Ze && A("paginationRender", We),
                    A("paginationUpdate", We)),
                  i.params.watchOverflow &&
                    i.enabled &&
                    We.classList[i.isLocked ? "add" : "remove"](Z.lockClass);
              });
            }
            function p() {
              const X = i.params.pagination;
              if (G()) return;
              const Z =
                i.virtual && i.params.virtual.enabled
                  ? i.virtual.slides.length
                  : i.grid && i.params.grid.rows > 1
                  ? i.slides.length / Math.ceil(i.params.grid.rows)
                  : i.slides.length;
              let fe = i.pagination.el;
              fe = P(fe);
              let nt = "";
              if ("bullets" === X.type) {
                let Je = i.params.loop
                  ? Math.ceil(Z / i.params.slidesPerGroup)
                  : i.snapGrid.length;
                i.params.freeMode &&
                  i.params.freeMode.enabled &&
                  Je > Z &&
                  (Je = Z);
                for (let _t = 0; _t < Je; _t += 1)
                  nt += X.renderBullet
                    ? X.renderBullet.call(i, _t, X.bulletClass)
                    : `<${X.bulletElement} ${
                        i.isElement ? 'part="bullet"' : ""
                      } class="${X.bulletClass}"></${X.bulletElement}>`;
              }
              "fraction" === X.type &&
                (nt = X.renderFraction
                  ? X.renderFraction.call(i, X.currentClass, X.totalClass)
                  : `<span class="${X.currentClass}"></span> / <span class="${X.totalClass}"></span>`),
                "progressbar" === X.type &&
                  (nt = X.renderProgressbar
                    ? X.renderProgressbar.call(i, X.progressbarFillClass)
                    : `<span class="${X.progressbarFillClass}"></span>`),
                (i.pagination.bullets = []),
                fe.forEach((Je) => {
                  "custom" !== X.type && (Je.innerHTML = nt || ""),
                    "bullets" === X.type &&
                      i.pagination.bullets.push(
                        ...Je.querySelectorAll(Ur(X.bulletClass))
                      );
                }),
                "custom" !== X.type && A("paginationRender", fe[0]);
            }
            function T() {
              i.params.pagination = ni(
                i,
                i.originalParams.pagination,
                i.params.pagination,
                { el: "swiper-pagination" }
              );
              const X = i.params.pagination;
              if (!X.el) return;
              let Z;
              "string" == typeof X.el &&
                i.isElement &&
                (Z = i.el.querySelector(X.el)),
                !Z &&
                  "string" == typeof X.el &&
                  (Z = [...document.querySelectorAll(X.el)]),
                Z || (Z = X.el),
                Z &&
                  0 !== Z.length &&
                  (i.params.uniqueNavElements &&
                    "string" == typeof X.el &&
                    Array.isArray(Z) &&
                    Z.length > 1 &&
                    ((Z = [...i.el.querySelectorAll(X.el)]),
                    Z.length > 1 &&
                      (Z = Z.filter((fe) => ue(fe, ".swiper")[0] === i.el)[0])),
                  Array.isArray(Z) && 1 === Z.length && (Z = Z[0]),
                  Object.assign(i.pagination, { el: Z }),
                  (Z = P(Z)),
                  Z.forEach((fe) => {
                    "bullets" === X.type &&
                      X.clickable &&
                      fe.classList.add(...(X.clickableClass || "").split(" ")),
                      fe.classList.add(X.modifierClass + X.type),
                      fe.classList.add(
                        i.isHorizontal() ? X.horizontalClass : X.verticalClass
                      ),
                      "bullets" === X.type &&
                        X.dynamicBullets &&
                        (fe.classList.add(
                          `${X.modifierClass}${X.type}-dynamic`
                        ),
                        (j = 0),
                        X.dynamicMainBullets < 1 && (X.dynamicMainBullets = 1)),
                      "progressbar" === X.type &&
                        X.progressbarOpposite &&
                        fe.classList.add(X.progressbarOppositeClass),
                      X.clickable && fe.addEventListener("click", h),
                      i.enabled || fe.classList.add(X.lockClass);
                  }));
            }
            function R() {
              const X = i.params.pagination;
              if (G()) return;
              let Z = i.pagination.el;
              Z &&
                ((Z = P(Z)),
                Z.forEach((fe) => {
                  fe.classList.remove(X.hiddenClass),
                    fe.classList.remove(X.modifierClass + X.type),
                    fe.classList.remove(
                      i.isHorizontal() ? X.horizontalClass : X.verticalClass
                    ),
                    X.clickable &&
                      (fe.classList.remove(
                        ...(X.clickableClass || "").split(" ")
                      ),
                      fe.removeEventListener("click", h));
                })),
                i.pagination.bullets &&
                  i.pagination.bullets.forEach((fe) =>
                    fe.classList.remove(...X.bulletActiveClass.split(" "))
                  );
            }
            E("changeDirection", () => {
              if (!i.pagination || !i.pagination.el) return;
              const X = i.params.pagination;
              let { el: Z } = i.pagination;
              (Z = P(Z)),
                Z.forEach((fe) => {
                  fe.classList.remove(X.horizontalClass, X.verticalClass),
                    fe.classList.add(
                      i.isHorizontal() ? X.horizontalClass : X.verticalClass
                    );
                });
            }),
              E("init", () => {
                !1 === i.params.pagination.enabled ? te() : (T(), p(), b());
              }),
              E("activeIndexChange", () => {
                typeof i.snapIndex > "u" && b();
              }),
              E("snapIndexChange", () => {
                b();
              }),
              E("snapGridLengthChange", () => {
                p(), b();
              }),
              E("destroy", () => {
                R();
              }),
              E("enable disable", () => {
                let { el: X } = i.pagination;
                X &&
                  ((X = P(X)),
                  X.forEach((Z) =>
                    Z.classList[i.enabled ? "remove" : "add"](
                      i.params.pagination.lockClass
                    )
                  ));
              }),
              E("lock unlock", () => {
                b();
              }),
              E("click", (X, Z) => {
                const fe = Z.target,
                  nt = P(i.pagination.el);
                if (
                  i.params.pagination.el &&
                  i.params.pagination.hideOnClick &&
                  nt &&
                  nt.length > 0 &&
                  !fe.classList.contains(i.params.pagination.bulletClass)
                ) {
                  if (
                    i.navigation &&
                    ((i.navigation.nextEl && fe === i.navigation.nextEl) ||
                      (i.navigation.prevEl && fe === i.navigation.prevEl))
                  )
                    return;
                  const Je = nt[0].classList.contains(
                    i.params.pagination.hiddenClass
                  );
                  A(!0 === Je ? "paginationShow" : "paginationHide"),
                    nt.forEach((_t) =>
                      _t.classList.toggle(i.params.pagination.hiddenClass)
                    );
                }
              });
            const te = () => {
              i.el.classList.add(i.params.pagination.paginationDisabledClass);
              let { el: X } = i.pagination;
              X &&
                ((X = P(X)),
                X.forEach((Z) =>
                  Z.classList.add(i.params.pagination.paginationDisabledClass)
                )),
                R();
            };
            Object.assign(i.pagination, {
              enable: () => {
                i.el.classList.remove(
                  i.params.pagination.paginationDisabledClass
                );
                let { el: X } = i.pagination;
                X &&
                  ((X = P(X)),
                  X.forEach((Z) =>
                    Z.classList.remove(
                      i.params.pagination.paginationDisabledClass
                    )
                  )),
                  T(),
                  p(),
                  b();
              },
              disable: te,
              render: p,
              update: b,
              init: T,
              destroy: R,
            });
          },
          function vi(w) {
            let { swiper: i, extendParams: _, on: E, emit: A } = w;
            const I = Ye();
            let G,
              k,
              h,
              b,
              U = !1,
              j = null,
              P = null;
            function p() {
              if (!i.params.scrollbar.el || !i.scrollbar.el) return;
              const { scrollbar: Ke, rtlTranslate: Le } = i,
                { dragEl: de, el: ke } = Ke,
                ut = i.params.scrollbar;
              let rt = k,
                ft = (h - k) * (i.params.loop ? i.progressLoop : i.progress);
              Le
                ? ((ft = -ft),
                  ft > 0
                    ? ((rt = k - ft), (ft = 0))
                    : -ft + k > h && (rt = h + ft))
                : ft < 0
                ? ((rt = k + ft), (ft = 0))
                : ft + k > h && (rt = h - ft),
                i.isHorizontal()
                  ? ((de.style.transform = `translate3d(${ft}px, 0, 0)`),
                    (de.style.width = `${rt}px`))
                  : ((de.style.transform = `translate3d(0px, ${ft}px, 0)`),
                    (de.style.height = `${rt}px`)),
                ut.hide &&
                  (clearTimeout(j),
                  (ke.style.opacity = 1),
                  (j = setTimeout(() => {
                    (ke.style.opacity = 0),
                      (ke.style.transitionDuration = "400ms");
                  }, 1e3)));
            }
            function R() {
              if (!i.params.scrollbar.el || !i.scrollbar.el) return;
              const { scrollbar: Ke } = i,
                { dragEl: Le, el: de } = Ke;
              (Le.style.width = ""),
                (Le.style.height = ""),
                (h = i.isHorizontal() ? de.offsetWidth : de.offsetHeight),
                (b =
                  i.size /
                  (i.virtualSize +
                    i.params.slidesOffsetBefore -
                    (i.params.centeredSlides ? i.snapGrid[0] : 0))),
                (k =
                  "auto" === i.params.scrollbar.dragSize
                    ? h * b
                    : parseInt(i.params.scrollbar.dragSize, 10)),
                i.isHorizontal()
                  ? (Le.style.width = `${k}px`)
                  : (Le.style.height = `${k}px`),
                (de.style.display = b >= 1 ? "none" : ""),
                i.params.scrollbar.hide && (de.style.opacity = 0),
                i.params.watchOverflow &&
                  i.enabled &&
                  Ke.el.classList[i.isLocked ? "add" : "remove"](
                    i.params.scrollbar.lockClass
                  );
            }
            function Y(Ke) {
              return i.isHorizontal() ? Ke.clientX : Ke.clientY;
            }
            function te(Ke) {
              const { scrollbar: Le, rtlTranslate: de } = i,
                { el: ke } = Le;
              let ut;
              (ut =
                (Y(Ke) -
                  In(ke)[i.isHorizontal() ? "left" : "top"] -
                  (null !== G ? G : k / 2)) /
                (h - k)),
                (ut = Math.max(Math.min(ut, 1), 0)),
                de && (ut = 1 - ut);
              const ht =
                i.minTranslate() + (i.maxTranslate() - i.minTranslate()) * ut;
              i.updateProgress(ht),
                i.setTranslate(ht),
                i.updateActiveIndex(),
                i.updateSlidesClasses();
            }
            function X(Ke) {
              const Le = i.params.scrollbar,
                { scrollbar: de, wrapperEl: ke } = i,
                { el: ut, dragEl: ht } = de;
              (U = !0),
                (G =
                  Ke.target === ht
                    ? Y(Ke) -
                      Ke.target.getBoundingClientRect()[
                        i.isHorizontal() ? "left" : "top"
                      ]
                    : null),
                Ke.preventDefault(),
                Ke.stopPropagation(),
                (ke.style.transitionDuration = "100ms"),
                (ht.style.transitionDuration = "100ms"),
                te(Ke),
                clearTimeout(P),
                (ut.style.transitionDuration = "0ms"),
                Le.hide && (ut.style.opacity = 1),
                i.params.cssMode &&
                  (i.wrapperEl.style["scroll-snap-type"] = "none"),
                A("scrollbarDragStart", Ke);
            }
            function Z(Ke) {
              const { scrollbar: Le, wrapperEl: de } = i,
                { el: ke, dragEl: ut } = Le;
              U &&
                (Ke.preventDefault
                  ? Ke.preventDefault()
                  : (Ke.returnValue = !1),
                te(Ke),
                (de.style.transitionDuration = "0ms"),
                (ke.style.transitionDuration = "0ms"),
                (ut.style.transitionDuration = "0ms"),
                A("scrollbarDragMove", Ke));
            }
            function fe(Ke) {
              const Le = i.params.scrollbar,
                { scrollbar: de, wrapperEl: ke } = i,
                { el: ut } = de;
              U &&
                ((U = !1),
                i.params.cssMode &&
                  ((i.wrapperEl.style["scroll-snap-type"] = ""),
                  (ke.style.transitionDuration = "")),
                Le.hide &&
                  (clearTimeout(P),
                  (P = It(() => {
                    (ut.style.opacity = 0),
                      (ut.style.transitionDuration = "400ms");
                  }, 1e3))),
                A("scrollbarDragEnd", Ke),
                Le.snapOnRelease && i.slideToClosest());
            }
            function nt(Ke) {
              const { scrollbar: Le, params: de } = i,
                ke = Le.el;
              if (!ke) return;
              const ht = !!de.passiveListeners && { passive: !1, capture: !1 },
                rt = !!de.passiveListeners && { passive: !0, capture: !1 };
              if (!ke) return;
              const ft =
                "on" === Ke ? "addEventListener" : "removeEventListener";
              ke[ft]("pointerdown", X, ht),
                I[ft]("pointermove", Z, ht),
                I[ft]("pointerup", fe, rt);
            }
            function ct() {
              const { scrollbar: Ke, el: Le } = i;
              i.params.scrollbar = ni(
                i,
                i.originalParams.scrollbar,
                i.params.scrollbar,
                { el: "swiper-scrollbar" }
              );
              const de = i.params.scrollbar;
              if (!de.el) return;
              let ke, ut;
              if (
                ("string" == typeof de.el &&
                  i.isElement &&
                  (ke = i.el.querySelector(de.el)),
                ke || "string" != typeof de.el)
              )
                ke || (ke = de.el);
              else if (((ke = I.querySelectorAll(de.el)), !ke.length)) return;
              i.params.uniqueNavElements &&
                "string" == typeof de.el &&
                ke.length > 1 &&
                1 === Le.querySelectorAll(de.el).length &&
                (ke = Le.querySelector(de.el)),
                ke.length > 0 && (ke = ke[0]),
                ke.classList.add(
                  i.isHorizontal() ? de.horizontalClass : de.verticalClass
                ),
                ke &&
                  ((ut = ke.querySelector(Ur(i.params.scrollbar.dragClass))),
                  ut ||
                    ((ut = Vt("div", i.params.scrollbar.dragClass)),
                    ke.append(ut))),
                Object.assign(Ke, { el: ke, dragEl: ut }),
                de.draggable &&
                  (function Je() {
                    !i.params.scrollbar.el || !i.scrollbar.el || nt("on");
                  })(),
                ke &&
                  ke.classList[i.enabled ? "remove" : "add"](
                    ...Ue(i.params.scrollbar.lockClass)
                  );
            }
            function We() {
              const Ke = i.params.scrollbar,
                Le = i.scrollbar.el;
              Le &&
                Le.classList.remove(
                  ...Ue(
                    i.isHorizontal() ? Ke.horizontalClass : Ke.verticalClass
                  )
                ),
                (function _t() {
                  !i.params.scrollbar.el || !i.scrollbar.el || nt("off");
                })();
            }
            _({
              scrollbar: {
                el: null,
                dragSize: "auto",
                hide: !1,
                draggable: !1,
                snapOnRelease: !0,
                lockClass: "swiper-scrollbar-lock",
                dragClass: "swiper-scrollbar-drag",
                scrollbarDisabledClass: "swiper-scrollbar-disabled",
                horizontalClass: "swiper-scrollbar-horizontal",
                verticalClass: "swiper-scrollbar-vertical",
              },
            }),
              (i.scrollbar = { el: null, dragEl: null }),
              E("init", () => {
                !1 === i.params.scrollbar.enabled ? at() : (ct(), R(), p());
              }),
              E("update resize observerUpdate lock unlock", () => {
                R();
              }),
              E("setTranslate", () => {
                p();
              }),
              E("setTransition", (Ke, Le) => {
                !(function T(Ke) {
                  !i.params.scrollbar.el ||
                    !i.scrollbar.el ||
                    (i.scrollbar.dragEl.style.transitionDuration = `${Ke}ms`);
                })(Le);
              }),
              E("enable disable", () => {
                const { el: Ke } = i.scrollbar;
                Ke &&
                  Ke.classList[i.enabled ? "remove" : "add"](
                    ...Ue(i.params.scrollbar.lockClass)
                  );
              }),
              E("destroy", () => {
                We();
              });
            const at = () => {
              i.el.classList.add(
                ...Ue(i.params.scrollbar.scrollbarDisabledClass)
              ),
                i.scrollbar.el &&
                  i.scrollbar.el.classList.add(
                    ...Ue(i.params.scrollbar.scrollbarDisabledClass)
                  ),
                We();
            };
            Object.assign(i.scrollbar, {
              enable: () => {
                i.el.classList.remove(
                  ...Ue(i.params.scrollbar.scrollbarDisabledClass)
                ),
                  i.scrollbar.el &&
                    i.scrollbar.el.classList.remove(
                      ...Ue(i.params.scrollbar.scrollbarDisabledClass)
                    ),
                  ct(),
                  R(),
                  p();
              },
              disable: at,
              updateSize: R,
              setTranslate: p,
              init: ct,
              destroy: We,
            });
          },
          function Sr(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({ parallax: { enabled: !1 } });
            const A =
                "[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]",
              I = (P, G) => {
                const { rtl: k } = i,
                  h = k ? -1 : 1,
                  b = P.getAttribute("data-swiper-parallax") || "0";
                let p = P.getAttribute("data-swiper-parallax-x"),
                  T = P.getAttribute("data-swiper-parallax-y");
                const R = P.getAttribute("data-swiper-parallax-scale"),
                  Y = P.getAttribute("data-swiper-parallax-opacity"),
                  te = P.getAttribute("data-swiper-parallax-rotate");
                if (
                  (p || T
                    ? ((p = p || "0"), (T = T || "0"))
                    : i.isHorizontal()
                    ? ((p = b), (T = "0"))
                    : ((T = b), (p = "0")),
                  (p =
                    p.indexOf("%") >= 0
                      ? parseInt(p, 10) * G * h + "%"
                      : p * G * h + "px"),
                  (T =
                    T.indexOf("%") >= 0
                      ? parseInt(T, 10) * G + "%"
                      : T * G + "px"),
                  typeof Y < "u" && null !== Y)
                ) {
                  const Z = Y - (Y - 1) * (1 - Math.abs(G));
                  P.style.opacity = Z;
                }
                let X = `translate3d(${p}, ${T}, 0px)`;
                typeof R < "u" &&
                  null !== R &&
                  (X += ` scale(${R - (R - 1) * (1 - Math.abs(G))})`),
                  te &&
                    typeof te < "u" &&
                    null !== te &&
                    (X += ` rotate(${te * G * -1}deg)`),
                  (P.style.transform = X);
              },
              U = () => {
                const { el: P, slides: G, progress: k, snapGrid: h } = i,
                  p = Mt(P, A);
                i.isElement && p.push(...Mt(i.hostEl, A)),
                  p.forEach((T) => {
                    I(T, k);
                  }),
                  G.forEach((T, R) => {
                    let Y = T.progress;
                    i.params.slidesPerGroup > 1 &&
                      "auto" !== i.params.slidesPerView &&
                      (Y += Math.ceil(R / 2) - k * (h.length - 1)),
                      (Y = Math.min(Math.max(Y, -1), 1)),
                      T.querySelectorAll(
                        `${A}, [data-swiper-parallax-rotate]`
                      ).forEach((te) => {
                        I(te, Y);
                      });
                  });
              };
            E("beforeInit", () => {
              i.params.parallax.enabled &&
                ((i.params.watchSlidesProgress = !0),
                (i.originalParams.watchSlidesProgress = !0));
            }),
              E("init", () => {
                i.params.parallax.enabled && U();
              }),
              E("setTranslate", () => {
                i.params.parallax.enabled && U();
              }),
              E("setTransition", (P, G) => {
                i.params.parallax.enabled &&
                  (function (P) {
                    void 0 === P && (P = i.params.speed);
                    const { el: G, hostEl: k } = i,
                      h = [...G.querySelectorAll(A)];
                    i.isElement && h.push(...k.querySelectorAll(A)),
                      h.forEach((b) => {
                        let p =
                          parseInt(
                            b.getAttribute("data-swiper-parallax-duration"),
                            10
                          ) || P;
                        0 === P && (p = 0),
                          (b.style.transitionDuration = `${p}ms`);
                      });
                  })(G);
              });
          },
          function wi(w) {
            let { swiper: i, extendParams: _, on: E, emit: A } = w;
            const I = pt();
            _({
              zoom: {
                enabled: !1,
                maxRatio: 3,
                minRatio: 1,
                toggle: !0,
                containerClass: "swiper-zoom-container",
                zoomedSlideClass: "swiper-slide-zoomed",
              },
            }),
              (i.zoom = { enabled: !1 });
            let P,
              G,
              U = 1,
              j = !1;
            const k = [],
              h = {
                originX: 0,
                originY: 0,
                slideEl: void 0,
                slideWidth: void 0,
                slideHeight: void 0,
                imageEl: void 0,
                imageWrapEl: void 0,
                maxRatio: 3,
              },
              b = {
                isTouched: void 0,
                isMoved: void 0,
                currentX: void 0,
                currentY: void 0,
                minX: void 0,
                minY: void 0,
                maxX: void 0,
                maxY: void 0,
                width: void 0,
                height: void 0,
                startX: void 0,
                startY: void 0,
                touchesStart: {},
                touchesCurrent: {},
              },
              p = {
                x: void 0,
                y: void 0,
                prevPositionX: void 0,
                prevPositionY: void 0,
                prevTime: void 0,
              };
            let T = 1;
            function R() {
              return k.length < 2
                ? 1
                : Math.sqrt(
                    (k[1].pageX - k[0].pageX) ** 2 +
                      (k[1].pageY - k[0].pageY) ** 2
                  );
            }
            function X(ht) {
              const rt = (function te() {
                return i.isElement ? "swiper-slide" : `.${i.params.slideClass}`;
              })();
              return !!(
                ht.target.matches(rt) ||
                i.slides.filter((ft) => ft.contains(ht.target)).length > 0
              );
            }
            function fe(ht) {
              if (("mouse" === ht.pointerType && k.splice(0, k.length), !X(ht)))
                return;
              const rt = i.params.zoom;
              if (((P = !1), (G = !1), k.push(ht), !(k.length < 2))) {
                if (((P = !0), (h.scaleStart = R()), !h.slideEl)) {
                  (h.slideEl = ht.target.closest(
                    `.${i.params.slideClass}, swiper-slide`
                  )),
                    h.slideEl || (h.slideEl = i.slides[i.activeIndex]);
                  let ft = h.slideEl.querySelector(`.${rt.containerClass}`);
                  if (
                    (ft &&
                      (ft = ft.querySelectorAll(
                        "picture, img, svg, canvas, .swiper-zoom-target"
                      )[0]),
                    (h.imageEl = ft),
                    (h.imageWrapEl = ft
                      ? ue(h.imageEl, `.${rt.containerClass}`)[0]
                      : void 0),
                    !h.imageWrapEl)
                  )
                    return void (h.imageEl = void 0);
                  h.maxRatio =
                    h.imageWrapEl.getAttribute("data-swiper-zoom") ||
                    rt.maxRatio;
                }
                if (h.imageEl) {
                  const [ft, Jt] = (function Y() {
                    if (k.length < 2) return { x: null, y: null };
                    const ht = h.imageEl.getBoundingClientRect();
                    return [
                      (k[0].pageX +
                        (k[1].pageX - k[0].pageX) / 2 -
                        ht.x -
                        I.scrollX) /
                        U,
                      (k[0].pageY +
                        (k[1].pageY - k[0].pageY) / 2 -
                        ht.y -
                        I.scrollY) /
                        U,
                    ];
                  })();
                  (h.originX = ft),
                    (h.originY = Jt),
                    (h.imageEl.style.transitionDuration = "0ms");
                }
                j = !0;
              }
            }
            function nt(ht) {
              if (!X(ht)) return;
              const rt = i.params.zoom,
                ft = i.zoom,
                Jt = k.findIndex((An) => An.pointerId === ht.pointerId);
              Jt >= 0 && (k[Jt] = ht),
                !(k.length < 2) &&
                  ((G = !0),
                  (h.scaleMove = R()),
                  h.imageEl &&
                    ((ft.scale = (h.scaleMove / h.scaleStart) * U),
                    ft.scale > h.maxRatio &&
                      (ft.scale =
                        h.maxRatio - 1 + (ft.scale - h.maxRatio + 1) ** 0.5),
                    ft.scale < rt.minRatio &&
                      (ft.scale =
                        rt.minRatio + 1 - (rt.minRatio - ft.scale + 1) ** 0.5),
                    (h.imageEl.style.transform = `translate3d(0,0,0) scale(${ft.scale})`)));
            }
            function Je(ht) {
              if (
                !X(ht) ||
                ("mouse" === ht.pointerType && "pointerout" === ht.type)
              )
                return;
              const rt = i.params.zoom,
                ft = i.zoom,
                Jt = k.findIndex((An) => An.pointerId === ht.pointerId);
              Jt >= 0 && k.splice(Jt, 1),
                P &&
                  G &&
                  ((P = !1),
                  (G = !1),
                  h.imageEl &&
                    ((ft.scale = Math.max(
                      Math.min(ft.scale, h.maxRatio),
                      rt.minRatio
                    )),
                    (h.imageEl.style.transitionDuration = `${i.params.speed}ms`),
                    (h.imageEl.style.transform = `translate3d(0,0,0) scale(${ft.scale})`),
                    (U = ft.scale),
                    (j = !1),
                    ft.scale > 1 && h.slideEl
                      ? h.slideEl.classList.add(`${rt.zoomedSlideClass}`)
                      : ft.scale <= 1 &&
                        h.slideEl &&
                        h.slideEl.classList.remove(`${rt.zoomedSlideClass}`),
                    1 === ft.scale &&
                      ((h.originX = 0),
                      (h.originY = 0),
                      (h.slideEl = void 0))));
            }
            function ct(ht) {
              if (
                !X(ht) ||
                !(function Z(ht) {
                  const rt = `.${i.params.zoom.containerClass}`;
                  return !!(
                    ht.target.matches(rt) ||
                    [...i.hostEl.querySelectorAll(rt)].filter((ft) =>
                      ft.contains(ht.target)
                    ).length > 0
                  );
                })(ht)
              )
                return;
              const rt = i.zoom;
              if (!h.imageEl || !b.isTouched || !h.slideEl) return;
              b.isMoved ||
                ((b.width = h.imageEl.offsetWidth),
                (b.height = h.imageEl.offsetHeight),
                (b.startX = Se(h.imageWrapEl, "x") || 0),
                (b.startY = Se(h.imageWrapEl, "y") || 0),
                (h.slideWidth = h.slideEl.offsetWidth),
                (h.slideHeight = h.slideEl.offsetHeight),
                (h.imageWrapEl.style.transitionDuration = "0ms"));
              const ft = b.width * rt.scale,
                Jt = b.height * rt.scale;
              if (ft < h.slideWidth && Jt < h.slideHeight) return;
              if (
                ((b.minX = Math.min(h.slideWidth / 2 - ft / 2, 0)),
                (b.maxX = -b.minX),
                (b.minY = Math.min(h.slideHeight / 2 - Jt / 2, 0)),
                (b.maxY = -b.minY),
                (b.touchesCurrent.x = k.length > 0 ? k[0].pageX : ht.pageX),
                (b.touchesCurrent.y = k.length > 0 ? k[0].pageY : ht.pageY),
                Math.max(
                  Math.abs(b.touchesCurrent.x - b.touchesStart.x),
                  Math.abs(b.touchesCurrent.y - b.touchesStart.y)
                ) > 5 && (i.allowClick = !1),
                !b.isMoved && !j)
              ) {
                if (
                  i.isHorizontal() &&
                  ((Math.floor(b.minX) === Math.floor(b.startX) &&
                    b.touchesCurrent.x < b.touchesStart.x) ||
                    (Math.floor(b.maxX) === Math.floor(b.startX) &&
                      b.touchesCurrent.x > b.touchesStart.x))
                )
                  return void (b.isTouched = !1);
                if (
                  !i.isHorizontal() &&
                  ((Math.floor(b.minY) === Math.floor(b.startY) &&
                    b.touchesCurrent.y < b.touchesStart.y) ||
                    (Math.floor(b.maxY) === Math.floor(b.startY) &&
                      b.touchesCurrent.y > b.touchesStart.y))
                )
                  return void (b.isTouched = !1);
              }
              ht.cancelable && ht.preventDefault(),
                ht.stopPropagation(),
                (b.isMoved = !0);
              const Pr = (rt.scale - U) / (h.maxRatio - i.params.zoom.minRatio),
                { originX: on, originY: Fn } = h;
              (b.currentX =
                b.touchesCurrent.x -
                b.touchesStart.x +
                b.startX +
                Pr * (b.width - 2 * on)),
                (b.currentY =
                  b.touchesCurrent.y -
                  b.touchesStart.y +
                  b.startY +
                  Pr * (b.height - 2 * Fn)),
                b.currentX < b.minX &&
                  (b.currentX = b.minX + 1 - (b.minX - b.currentX + 1) ** 0.8),
                b.currentX > b.maxX &&
                  (b.currentX = b.maxX - 1 + (b.currentX - b.maxX + 1) ** 0.8),
                b.currentY < b.minY &&
                  (b.currentY = b.minY + 1 - (b.minY - b.currentY + 1) ** 0.8),
                b.currentY > b.maxY &&
                  (b.currentY = b.maxY - 1 + (b.currentY - b.maxY + 1) ** 0.8),
                p.prevPositionX || (p.prevPositionX = b.touchesCurrent.x),
                p.prevPositionY || (p.prevPositionY = b.touchesCurrent.y),
                p.prevTime || (p.prevTime = Date.now()),
                (p.x =
                  (b.touchesCurrent.x - p.prevPositionX) /
                  (Date.now() - p.prevTime) /
                  2),
                (p.y =
                  (b.touchesCurrent.y - p.prevPositionY) /
                  (Date.now() - p.prevTime) /
                  2),
                Math.abs(b.touchesCurrent.x - p.prevPositionX) < 2 && (p.x = 0),
                Math.abs(b.touchesCurrent.y - p.prevPositionY) < 2 && (p.y = 0),
                (p.prevPositionX = b.touchesCurrent.x),
                (p.prevPositionY = b.touchesCurrent.y),
                (p.prevTime = Date.now()),
                (h.imageWrapEl.style.transform = `translate3d(${b.currentX}px, ${b.currentY}px,0)`);
            }
            function Ze() {
              const ht = i.zoom;
              h.slideEl &&
                i.activeIndex !== i.slides.indexOf(h.slideEl) &&
                (h.imageEl &&
                  (h.imageEl.style.transform = "translate3d(0,0,0) scale(1)"),
                h.imageWrapEl &&
                  (h.imageWrapEl.style.transform = "translate3d(0,0,0)"),
                h.slideEl.classList.remove(`${i.params.zoom.zoomedSlideClass}`),
                (ht.scale = 1),
                (U = 1),
                (h.slideEl = void 0),
                (h.imageEl = void 0),
                (h.imageWrapEl = void 0),
                (h.originX = 0),
                (h.originY = 0));
            }
            function at(ht) {
              const rt = i.zoom,
                ft = i.params.zoom;
              if (!h.slideEl) {
                ht &&
                  ht.target &&
                  (h.slideEl = ht.target.closest(
                    `.${i.params.slideClass}, swiper-slide`
                  )),
                  h.slideEl ||
                    (h.slideEl =
                      i.params.virtual && i.params.virtual.enabled && i.virtual
                        ? Mt(i.slidesEl, `.${i.params.slideActiveClass}`)[0]
                        : i.slides[i.activeIndex]);
                let Gi = h.slideEl.querySelector(`.${ft.containerClass}`);
                Gi &&
                  (Gi = Gi.querySelectorAll(
                    "picture, img, svg, canvas, .swiper-zoom-target"
                  )[0]),
                  (h.imageEl = Gi),
                  (h.imageWrapEl = Gi
                    ? ue(h.imageEl, `.${ft.containerClass}`)[0]
                    : void 0);
              }
              if (!h.imageEl || !h.imageWrapEl) return;
              let Jt,
                An,
                Pr,
                on,
                Fn,
                Nr,
                ai,
                Bi,
                ns,
                $s,
                ji,
                Is,
                zi,
                rs,
                is,
                Bs,
                qs,
                Hs;
              i.params.cssMode &&
                ((i.wrapperEl.style.overflow = "hidden"),
                (i.wrapperEl.style.touchAction = "none")),
                h.slideEl.classList.add(`${ft.zoomedSlideClass}`),
                typeof b.touchesStart.x > "u" && ht
                  ? ((Jt = ht.pageX), (An = ht.pageY))
                  : ((Jt = b.touchesStart.x), (An = b.touchesStart.y));
              const ss = "number" == typeof ht ? ht : null;
              1 === U && ss && ((Jt = void 0), (An = void 0)),
                (rt.scale =
                  ss ||
                  h.imageWrapEl.getAttribute("data-swiper-zoom") ||
                  ft.maxRatio),
                (U =
                  ss ||
                  h.imageWrapEl.getAttribute("data-swiper-zoom") ||
                  ft.maxRatio),
                !ht || (1 === U && ss)
                  ? ((ai = 0), (Bi = 0))
                  : ((qs = h.slideEl.offsetWidth),
                    (Hs = h.slideEl.offsetHeight),
                    (Pr = In(h.slideEl).left + I.scrollX),
                    (on = In(h.slideEl).top + I.scrollY),
                    (Fn = Pr + qs / 2 - Jt),
                    (Nr = on + Hs / 2 - An),
                    (ns = h.imageEl.offsetWidth),
                    ($s = h.imageEl.offsetHeight),
                    (ji = ns * rt.scale),
                    (Is = $s * rt.scale),
                    (zi = Math.min(qs / 2 - ji / 2, 0)),
                    (rs = Math.min(Hs / 2 - Is / 2, 0)),
                    (is = -zi),
                    (Bs = -rs),
                    (ai = Fn * rt.scale),
                    (Bi = Nr * rt.scale),
                    ai < zi && (ai = zi),
                    ai > is && (ai = is),
                    Bi < rs && (Bi = rs),
                    Bi > Bs && (Bi = Bs)),
                ss && 1 === rt.scale && ((h.originX = 0), (h.originY = 0)),
                (h.imageWrapEl.style.transitionDuration = "300ms"),
                (h.imageWrapEl.style.transform = `translate3d(${ai}px, ${Bi}px,0)`),
                (h.imageEl.style.transitionDuration = "300ms"),
                (h.imageEl.style.transform = `translate3d(0,0,0) scale(${rt.scale})`);
            }
            function Ke() {
              const ht = i.zoom,
                rt = i.params.zoom;
              if (!h.slideEl) {
                h.slideEl =
                  i.params.virtual && i.params.virtual.enabled && i.virtual
                    ? Mt(i.slidesEl, `.${i.params.slideActiveClass}`)[0]
                    : i.slides[i.activeIndex];
                let ft = h.slideEl.querySelector(`.${rt.containerClass}`);
                ft &&
                  (ft = ft.querySelectorAll(
                    "picture, img, svg, canvas, .swiper-zoom-target"
                  )[0]),
                  (h.imageEl = ft),
                  (h.imageWrapEl = ft
                    ? ue(h.imageEl, `.${rt.containerClass}`)[0]
                    : void 0);
              }
              !h.imageEl ||
                !h.imageWrapEl ||
                (i.params.cssMode &&
                  ((i.wrapperEl.style.overflow = ""),
                  (i.wrapperEl.style.touchAction = "")),
                (ht.scale = 1),
                (U = 1),
                (h.imageWrapEl.style.transitionDuration = "300ms"),
                (h.imageWrapEl.style.transform = "translate3d(0,0,0)"),
                (h.imageEl.style.transitionDuration = "300ms"),
                (h.imageEl.style.transform = "translate3d(0,0,0) scale(1)"),
                h.slideEl.classList.remove(`${rt.zoomedSlideClass}`),
                (h.slideEl = void 0),
                (h.originX = 0),
                (h.originY = 0));
            }
            function Le(ht) {
              const rt = i.zoom;
              rt.scale && 1 !== rt.scale ? Ke() : at(ht);
            }
            function de() {
              return {
                passiveListener: !!i.params.passiveListeners && {
                  passive: !0,
                  capture: !1,
                },
                activeListenerWithCapture: !i.params.passiveListeners || {
                  passive: !1,
                  capture: !0,
                },
              };
            }
            function ke() {
              const ht = i.zoom;
              if (ht.enabled) return;
              ht.enabled = !0;
              const { passiveListener: rt, activeListenerWithCapture: ft } =
                de();
              i.wrapperEl.addEventListener("pointerdown", fe, rt),
                i.wrapperEl.addEventListener("pointermove", nt, ft),
                ["pointerup", "pointercancel", "pointerout"].forEach((Jt) => {
                  i.wrapperEl.addEventListener(Jt, Je, rt);
                }),
                i.wrapperEl.addEventListener("pointermove", ct, ft);
            }
            function ut() {
              const ht = i.zoom;
              if (!ht.enabled) return;
              ht.enabled = !1;
              const { passiveListener: rt, activeListenerWithCapture: ft } =
                de();
              i.wrapperEl.removeEventListener("pointerdown", fe, rt),
                i.wrapperEl.removeEventListener("pointermove", nt, ft),
                ["pointerup", "pointercancel", "pointerout"].forEach((Jt) => {
                  i.wrapperEl.removeEventListener(Jt, Je, rt);
                }),
                i.wrapperEl.removeEventListener("pointermove", ct, ft);
            }
            Object.defineProperty(i.zoom, "scale", {
              get: () => T,
              set(ht) {
                T !== ht && A("zoomChange", ht, h.imageEl, h.slideEl), (T = ht);
              },
            }),
              E("init", () => {
                i.params.zoom.enabled && ke();
              }),
              E("destroy", () => {
                ut();
              }),
              E("touchStart", (ht, rt) => {
                i.zoom.enabled &&
                  (function _t(ht) {
                    if (!h.imageEl || b.isTouched) return;
                    i.device.android && ht.cancelable && ht.preventDefault(),
                      (b.isTouched = !0);
                    const ft = k.length > 0 ? k[0] : ht;
                    (b.touchesStart.x = ft.pageX),
                      (b.touchesStart.y = ft.pageY);
                  })(rt);
              }),
              E("touchEnd", (ht, rt) => {
                i.zoom.enabled &&
                  (function We() {
                    const ht = i.zoom;
                    if (!h.imageEl) return;
                    if (!b.isTouched || !b.isMoved)
                      return (b.isTouched = !1), void (b.isMoved = !1);
                    (b.isTouched = !1), (b.isMoved = !1);
                    let rt = 300,
                      ft = 300;
                    const An = b.currentX + p.x * rt,
                      on = b.currentY + p.y * ft;
                    0 !== p.x && (rt = Math.abs((An - b.currentX) / p.x)),
                      0 !== p.y && (ft = Math.abs((on - b.currentY) / p.y));
                    const Fn = Math.max(rt, ft);
                    (b.currentX = An), (b.currentY = on);
                    const ai = b.height * ht.scale;
                    (b.minX = Math.min(
                      h.slideWidth / 2 - (b.width * ht.scale) / 2,
                      0
                    )),
                      (b.maxX = -b.minX),
                      (b.minY = Math.min(h.slideHeight / 2 - ai / 2, 0)),
                      (b.maxY = -b.minY),
                      (b.currentX = Math.max(
                        Math.min(b.currentX, b.maxX),
                        b.minX
                      )),
                      (b.currentY = Math.max(
                        Math.min(b.currentY, b.maxY),
                        b.minY
                      )),
                      (h.imageWrapEl.style.transitionDuration = `${Fn}ms`),
                      (h.imageWrapEl.style.transform = `translate3d(${b.currentX}px, ${b.currentY}px,0)`);
                  })();
              }),
              E("doubleTap", (ht, rt) => {
                !i.animating &&
                  i.params.zoom.enabled &&
                  i.zoom.enabled &&
                  i.params.zoom.toggle &&
                  Le(rt);
              }),
              E("transitionEnd", () => {
                i.zoom.enabled && i.params.zoom.enabled && Ze();
              }),
              E("slideChange", () => {
                i.zoom.enabled &&
                  i.params.zoom.enabled &&
                  i.params.cssMode &&
                  Ze();
              }),
              Object.assign(i.zoom, {
                enable: ke,
                disable: ut,
                in: at,
                out: Ke,
                toggle: Le,
              });
          },
          function hi(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            function A(G, k) {
              const h = (function () {
                let R, Y, te;
                return (X, Z) => {
                  for (Y = -1, R = X.length; R - Y > 1; )
                    (te = (R + Y) >> 1), X[te] <= Z ? (Y = te) : (R = te);
                  return R;
                };
              })();
              let b, p;
              return (
                (this.x = G),
                (this.y = k),
                (this.lastIndex = G.length - 1),
                (this.interpolate = function (R) {
                  return R
                    ? ((p = h(this.x, R)),
                      (b = p - 1),
                      ((R - this.x[b]) * (this.y[p] - this.y[b])) /
                        (this.x[p] - this.x[b]) +
                        this.y[b])
                    : 0;
                }),
                this
              );
            }
            function P() {
              i.controller.control &&
                i.controller.spline &&
                ((i.controller.spline = void 0), delete i.controller.spline);
            }
            _({ controller: { control: void 0, inverse: !1, by: "slide" } }),
              (i.controller = { control: void 0 }),
              E("beforeInit", () => {
                if (
                  typeof window < "u" &&
                  ("string" == typeof i.params.controller.control ||
                    i.params.controller.control instanceof HTMLElement)
                ) {
                  const G = document.querySelector(i.params.controller.control);
                  if (G && G.swiper) i.controller.control = G.swiper;
                  else if (G) {
                    const k = (h) => {
                      (i.controller.control = h.detail[0]),
                        i.update(),
                        G.removeEventListener("init", k);
                    };
                    G.addEventListener("init", k);
                  }
                } else i.controller.control = i.params.controller.control;
              }),
              E("update", () => {
                P();
              }),
              E("resize", () => {
                P();
              }),
              E("observerUpdate", () => {
                P();
              }),
              E("setTranslate", (G, k, h) => {
                !i.controller.control ||
                  i.controller.control.destroyed ||
                  i.controller.setTranslate(k, h);
              }),
              E("setTransition", (G, k, h) => {
                !i.controller.control ||
                  i.controller.control.destroyed ||
                  i.controller.setTransition(k, h);
              }),
              Object.assign(i.controller, {
                setTranslate: function U(G, k) {
                  const h = i.controller.control;
                  let b, p;
                  const T = i.constructor;
                  function R(Y) {
                    if (Y.destroyed) return;
                    const te = i.rtlTranslate ? -i.translate : i.translate;
                    "slide" === i.params.controller.by &&
                      ((function I(G) {
                        i.controller.spline = i.params.loop
                          ? new A(i.slidesGrid, G.slidesGrid)
                          : new A(i.snapGrid, G.snapGrid);
                      })(Y),
                      (p = -i.controller.spline.interpolate(-te))),
                      (!p || "container" === i.params.controller.by) &&
                        ((b =
                          (Y.maxTranslate() - Y.minTranslate()) /
                          (i.maxTranslate() - i.minTranslate())),
                        (Number.isNaN(b) || !Number.isFinite(b)) && (b = 1),
                        (p = (te - i.minTranslate()) * b + Y.minTranslate())),
                      i.params.controller.inverse && (p = Y.maxTranslate() - p),
                      Y.updateProgress(p),
                      Y.setTranslate(p, i),
                      Y.updateActiveIndex(),
                      Y.updateSlidesClasses();
                  }
                  if (Array.isArray(h))
                    for (let Y = 0; Y < h.length; Y += 1)
                      h[Y] !== k && h[Y] instanceof T && R(h[Y]);
                  else h instanceof T && k !== h && R(h);
                },
                setTransition: function j(G, k) {
                  const h = i.constructor,
                    b = i.controller.control;
                  let p;
                  function T(R) {
                    R.destroyed ||
                      (R.setTransition(G, i),
                      0 !== G &&
                        (R.transitionStart(),
                        R.params.autoHeight &&
                          It(() => {
                            R.updateAutoHeight();
                          }),
                        Oe(R.wrapperEl, () => {
                          b && R.transitionEnd();
                        })));
                  }
                  if (Array.isArray(b))
                    for (p = 0; p < b.length; p += 1)
                      b[p] !== k && b[p] instanceof h && T(b[p]);
                  else b instanceof h && k !== b && T(b);
                },
              });
          },
          function Ar(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({
              a11y: {
                enabled: !0,
                notificationClass: "swiper-notification",
                prevSlideMessage: "Previous slide",
                nextSlideMessage: "Next slide",
                firstSlideMessage: "This is the first slide",
                lastSlideMessage: "This is the last slide",
                paginationBulletMessage: "Go to slide {{index}}",
                slideLabelMessage: "{{index}} / {{slidesLength}}",
                containerMessage: null,
                containerRoleDescriptionMessage: null,
                itemRoleDescriptionMessage: null,
                slideRole: "group",
                id: null,
              },
            }),
              (i.a11y = { clicked: !1 });
            let A = null;
            function I(de) {
              const ke = A;
              0 !== ke.length && ((ke.innerHTML = ""), (ke.innerHTML = de));
            }
            const U = (de) =>
              (Array.isArray(de) ? de : [de]).filter((ke) => !!ke);
            function P(de) {
              (de = U(de)).forEach((ke) => {
                ke.setAttribute("tabIndex", "0");
              });
            }
            function G(de) {
              (de = U(de)).forEach((ke) => {
                ke.setAttribute("tabIndex", "-1");
              });
            }
            function k(de, ke) {
              (de = U(de)).forEach((ut) => {
                ut.setAttribute("role", ke);
              });
            }
            function h(de, ke) {
              (de = U(de)).forEach((ut) => {
                ut.setAttribute("aria-roledescription", ke);
              });
            }
            function p(de, ke) {
              (de = U(de)).forEach((ut) => {
                ut.setAttribute("aria-label", ke);
              });
            }
            function Y(de) {
              (de = U(de)).forEach((ke) => {
                ke.setAttribute("aria-disabled", !0);
              });
            }
            function te(de) {
              (de = U(de)).forEach((ke) => {
                ke.setAttribute("aria-disabled", !1);
              });
            }
            function X(de) {
              if (13 !== de.keyCode && 32 !== de.keyCode) return;
              const ke = i.params.a11y,
                ut = de.target;
              (i.pagination &&
                i.pagination.el &&
                (ut === i.pagination.el ||
                  i.pagination.el.contains(de.target)) &&
                !de.target.matches(Ur(i.params.pagination.bulletClass))) ||
                (i.navigation &&
                  i.navigation.nextEl &&
                  ut === i.navigation.nextEl &&
                  ((i.isEnd && !i.params.loop) || i.slideNext(),
                  I(i.isEnd ? ke.lastSlideMessage : ke.nextSlideMessage)),
                i.navigation &&
                  i.navigation.prevEl &&
                  ut === i.navigation.prevEl &&
                  ((i.isBeginning && !i.params.loop) || i.slidePrev(),
                  I(
                    i.isBeginning ? ke.firstSlideMessage : ke.prevSlideMessage
                  )),
                i.pagination &&
                  ut.matches(Ur(i.params.pagination.bulletClass)) &&
                  ut.click());
            }
            function fe() {
              return (
                i.pagination &&
                i.pagination.bullets &&
                i.pagination.bullets.length
              );
            }
            function nt() {
              return fe() && i.params.pagination.clickable;
            }
            const _t = (de, ke, ut) => {
                P(de),
                  "BUTTON" !== de.tagName &&
                    (k(de, "button"), de.addEventListener("keydown", X)),
                  p(de, ut),
                  (function b(de, ke) {
                    (de = U(de)).forEach((ut) => {
                      ut.setAttribute("aria-controls", ke);
                    });
                  })(de, ke);
              },
              ct = () => {
                i.a11y.clicked = !0;
              },
              We = () => {
                requestAnimationFrame(() => {
                  requestAnimationFrame(() => {
                    i.destroyed || (i.a11y.clicked = !1);
                  });
                });
              },
              Ze = (de) => {
                if (i.a11y.clicked) return;
                const ke = de.target.closest(
                  `.${i.params.slideClass}, swiper-slide`
                );
                if (!ke || !i.slides.includes(ke)) return;
                const ut = i.slides.indexOf(ke) === i.activeIndex,
                  ht =
                    i.params.watchSlidesProgress &&
                    i.visibleSlides &&
                    i.visibleSlides.includes(ke);
                ut ||
                  ht ||
                  (de.sourceCapabilities &&
                    de.sourceCapabilities.firesTouchEvents) ||
                  (i.isHorizontal()
                    ? (i.el.scrollLeft = 0)
                    : (i.el.scrollTop = 0),
                  i.slideTo(i.slides.indexOf(ke), 0));
              },
              at = () => {
                const de = i.params.a11y;
                de.itemRoleDescriptionMessage &&
                  h(i.slides, de.itemRoleDescriptionMessage),
                  de.slideRole && k(i.slides, de.slideRole);
                const ke = i.slides.length;
                de.slideLabelMessage &&
                  i.slides.forEach((ut, ht) => {
                    const rt = i.params.loop
                      ? parseInt(ut.getAttribute("data-swiper-slide-index"), 10)
                      : ht;
                    p(
                      ut,
                      de.slideLabelMessage
                        .replace(/\{\{index\}\}/, rt + 1)
                        .replace(/\{\{slidesLength\}\}/, ke)
                    );
                  });
              };
            E("beforeInit", () => {
              (A = Vt("span", i.params.a11y.notificationClass)),
                A.setAttribute("aria-live", "assertive"),
                A.setAttribute("aria-atomic", "true");
            }),
              E("afterInit", () => {
                i.params.a11y.enabled &&
                  (() => {
                    const de = i.params.a11y;
                    i.el.append(A);
                    const ke = i.el;
                    de.containerRoleDescriptionMessage &&
                      h(ke, de.containerRoleDescriptionMessage),
                      de.containerMessage && p(ke, de.containerMessage);
                    const ut = i.wrapperEl,
                      ht =
                        de.id ||
                        ut.getAttribute("id") ||
                        `swiper-wrapper-${(function j(de) {
                          return (
                            void 0 === de && (de = 16),
                            "x"
                              .repeat(de)
                              .replace(/x/g, () =>
                                Math.round(16 * Math.random()).toString(16)
                              )
                          );
                        })(16)}`,
                      rt =
                        i.params.autoplay && i.params.autoplay.enabled
                          ? "off"
                          : "polite";
                    (function T(de, ke) {
                      (de = U(de)).forEach((ut) => {
                        ut.setAttribute("id", ke);
                      });
                    })(ut, ht),
                      (function R(de, ke) {
                        (de = U(de)).forEach((ut) => {
                          ut.setAttribute("aria-live", ke);
                        });
                      })(ut, rt),
                      at();
                    let { nextEl: ft, prevEl: Jt } = i.navigation
                      ? i.navigation
                      : {};
                    (ft = U(ft)),
                      (Jt = U(Jt)),
                      ft && ft.forEach((An) => _t(An, ht, de.nextSlideMessage)),
                      Jt && Jt.forEach((An) => _t(An, ht, de.prevSlideMessage)),
                      nt() &&
                        (Array.isArray(i.pagination.el)
                          ? i.pagination.el
                          : [i.pagination.el]
                        ).forEach((Pr) => {
                          Pr.addEventListener("keydown", X);
                        }),
                      i.el.addEventListener("focus", Ze, !0),
                      i.el.addEventListener("pointerdown", ct, !0),
                      i.el.addEventListener("pointerup", We, !0);
                  })();
              }),
              E(
                "slidesLengthChange snapGridLengthChange slidesGridLengthChange",
                () => {
                  i.params.a11y.enabled && at();
                }
              ),
              E("fromEdge toEdge afterInit lock unlock", () => {
                i.params.a11y.enabled &&
                  (function Z() {
                    if (i.params.loop || i.params.rewind || !i.navigation)
                      return;
                    const { nextEl: de, prevEl: ke } = i.navigation;
                    ke && (i.isBeginning ? (Y(ke), G(ke)) : (te(ke), P(ke))),
                      de && (i.isEnd ? (Y(de), G(de)) : (te(de), P(de)));
                  })();
              }),
              E("paginationUpdate", () => {
                i.params.a11y.enabled &&
                  (function Je() {
                    const de = i.params.a11y;
                    fe() &&
                      i.pagination.bullets.forEach((ke) => {
                        i.params.pagination.clickable &&
                          (P(ke),
                          i.params.pagination.renderBullet ||
                            (k(ke, "button"),
                            p(
                              ke,
                              de.paginationBulletMessage.replace(
                                /\{\{index\}\}/,
                                re(ke) + 1
                              )
                            ))),
                          ke.matches(Ur(i.params.pagination.bulletActiveClass))
                            ? ke.setAttribute("aria-current", "true")
                            : ke.removeAttribute("aria-current");
                      });
                  })();
              }),
              E("destroy", () => {
                i.params.a11y.enabled &&
                  (function Le() {
                    A && A.remove();
                    let { nextEl: de, prevEl: ke } = i.navigation
                      ? i.navigation
                      : {};
                    (de = U(de)),
                      (ke = U(ke)),
                      de &&
                        de.forEach((ut) =>
                          ut.removeEventListener("keydown", X)
                        ),
                      ke &&
                        ke.forEach((ut) =>
                          ut.removeEventListener("keydown", X)
                        ),
                      nt() &&
                        (Array.isArray(i.pagination.el)
                          ? i.pagination.el
                          : [i.pagination.el]
                        ).forEach((ht) => {
                          ht.removeEventListener("keydown", X);
                        }),
                      i.el.removeEventListener("focus", Ze, !0),
                      i.el.removeEventListener("pointerdown", ct, !0),
                      i.el.removeEventListener("pointerup", We, !0);
                  })();
              });
          },
          function ds(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({
              history: {
                enabled: !1,
                root: "",
                replaceState: !1,
                key: "slides",
                keepQuery: !1,
              },
            });
            let A = !1,
              I = {};
            const U = (p) =>
                p
                  .toString()
                  .replace(/\s+/g, "-")
                  .replace(/[^\w-]+/g, "")
                  .replace(/--+/g, "-")
                  .replace(/^-+/, "")
                  .replace(/-+$/, ""),
              j = (p) => {
                const T = pt();
                let R;
                R = p ? new URL(p) : T.location;
                const Y = R.pathname
                    .slice(1)
                    .split("/")
                    .filter((fe) => "" !== fe),
                  te = Y.length;
                return { key: Y[te - 2], value: Y[te - 1] };
              },
              P = (p, T) => {
                const R = pt();
                if (!A || !i.params.history.enabled) return;
                let Y;
                Y = i.params.url ? new URL(i.params.url) : R.location;
                let X = U(i.slides[T].getAttribute("data-history"));
                if (i.params.history.root.length > 0) {
                  let fe = i.params.history.root;
                  "/" === fe[fe.length - 1] &&
                    (fe = fe.slice(0, fe.length - 1)),
                    (X = `${fe}/${p ? `${p}/` : ""}${X}`);
                } else
                  Y.pathname.includes(p) || (X = `${p ? `${p}/` : ""}${X}`);
                i.params.history.keepQuery && (X += Y.search);
                const Z = R.history.state;
                (Z && Z.value === X) ||
                  (i.params.history.replaceState
                    ? R.history.replaceState({ value: X }, null, X)
                    : R.history.pushState({ value: X }, null, X));
              },
              G = (p, T, R) => {
                if (T)
                  for (let Y = 0, te = i.slides.length; Y < te; Y += 1) {
                    const X = i.slides[Y];
                    if (U(X.getAttribute("data-history")) === T) {
                      const fe = i.getSlideIndex(X);
                      i.slideTo(fe, p, R);
                    }
                  }
                else i.slideTo(0, p, R);
              },
              k = () => {
                (I = j(i.params.url)), G(i.params.speed, I.value, !1);
              };
            E("init", () => {
              i.params.history.enabled &&
                (() => {
                  const p = pt();
                  if (i.params.history) {
                    if (!p.history || !p.history.pushState)
                      return (
                        (i.params.history.enabled = !1),
                        void (i.params.hashNavigation.enabled = !0)
                      );
                    if (((A = !0), (I = j(i.params.url)), !I.key && !I.value))
                      return void (
                        i.params.history.replaceState ||
                        p.addEventListener("popstate", k)
                      );
                    G(0, I.value, i.params.runCallbacksOnInit),
                      i.params.history.replaceState ||
                        p.addEventListener("popstate", k);
                  }
                })();
            }),
              E("destroy", () => {
                i.params.history.enabled &&
                  (() => {
                    const p = pt();
                    i.params.history.replaceState ||
                      p.removeEventListener("popstate", k);
                  })();
              }),
              E("transitionEnd _freeModeNoMomentumRelease", () => {
                A && P(i.params.history.key, i.activeIndex);
              }),
              E("slideChange", () => {
                A && i.params.cssMode && P(i.params.history.key, i.activeIndex);
              });
          },
          function fs(w) {
            let { swiper: i, extendParams: _, emit: E, on: A } = w,
              I = !1;
            const U = Ye(),
              j = pt();
            _({
              hashNavigation: {
                enabled: !1,
                replaceState: !1,
                watchState: !1,
                getSlideIndex(b, p) {
                  if (i.virtual && i.params.virtual.enabled) {
                    const T = i.slides.filter(
                      (Y) => Y.getAttribute("data-hash") === p
                    )[0];
                    return T
                      ? parseInt(T.getAttribute("data-swiper-slide-index"), 10)
                      : 0;
                  }
                  return i.getSlideIndex(
                    Mt(
                      i.slidesEl,
                      `.${i.params.slideClass}[data-hash="${p}"], swiper-slide[data-hash="${p}"]`
                    )[0]
                  );
                },
              },
            });
            const P = () => {
                E("hashChange");
                const b = U.location.hash.replace("#", ""),
                  p =
                    i.virtual && i.params.virtual.enabled
                      ? i.slidesEl.querySelector(
                          `[data-swiper-slide-index="${i.activeIndex}"]`
                        )
                      : i.slides[i.activeIndex];
                if (b !== (p ? p.getAttribute("data-hash") : "")) {
                  const R = i.params.hashNavigation.getSlideIndex(i, b);
                  if (typeof R > "u" || Number.isNaN(R)) return;
                  i.slideTo(R);
                }
              },
              G = () => {
                if (!I || !i.params.hashNavigation.enabled) return;
                const b =
                    i.virtual && i.params.virtual.enabled
                      ? i.slidesEl.querySelector(
                          `[data-swiper-slide-index="${i.activeIndex}"]`
                        )
                      : i.slides[i.activeIndex],
                  p = b
                    ? b.getAttribute("data-hash") ||
                      b.getAttribute("data-history")
                    : "";
                i.params.hashNavigation.replaceState &&
                j.history &&
                j.history.replaceState
                  ? (j.history.replaceState(null, null, `#${p}` || ""),
                    E("hashSet"))
                  : ((U.location.hash = p || ""), E("hashSet"));
              };
            A("init", () => {
              i.params.hashNavigation.enabled &&
                (() => {
                  if (
                    !i.params.hashNavigation.enabled ||
                    (i.params.history && i.params.history.enabled)
                  )
                    return;
                  I = !0;
                  const b = U.location.hash.replace("#", "");
                  if (b) {
                    const T = i.params.hashNavigation.getSlideIndex(i, b);
                    i.slideTo(T || 0, 0, i.params.runCallbacksOnInit, !0);
                  }
                  i.params.hashNavigation.watchState &&
                    j.addEventListener("hashchange", P);
                })();
            }),
              A("destroy", () => {
                i.params.hashNavigation.enabled &&
                  i.params.hashNavigation.watchState &&
                  j.removeEventListener("hashchange", P);
              }),
              A("transitionEnd _freeModeNoMomentumRelease", () => {
                I && G();
              }),
              A("slideChange", () => {
                I && i.params.cssMode && G();
              });
          },
          function Ki(w) {
            let { swiper: i, extendParams: _, on: E, emit: A, params: I } = w;
            (i.autoplay = { running: !1, paused: !1, timeLeft: 0 }),
              _({
                autoplay: {
                  enabled: !1,
                  delay: 3e3,
                  waitForTransition: !0,
                  disableOnInteraction: !1,
                  stopOnLastSlide: !1,
                  reverseDirection: !1,
                  pauseOnMouseEnter: !1,
                },
              });
            let U,
              j,
              k,
              b,
              p,
              T,
              R,
              Y,
              te,
              X,
              P = I && I.autoplay ? I.autoplay.delay : 3e3,
              G = I && I.autoplay ? I.autoplay.delay : 3e3,
              h = new Date().getTime();
            function Z(rt) {
              !i ||
                i.destroyed ||
                !i.wrapperEl ||
                (rt.target === i.wrapperEl &&
                  (i.wrapperEl.removeEventListener("transitionend", Z),
                  !X && Ze()));
            }
            const fe = () => {
                if (i.destroyed || !i.autoplay.running) return;
                i.autoplay.paused ? (b = !0) : b && ((G = k), (b = !1));
                const rt = i.autoplay.paused ? k : h + G - new Date().getTime();
                (i.autoplay.timeLeft = rt),
                  A("autoplayTimeLeft", rt, rt / P),
                  (j = requestAnimationFrame(() => {
                    fe();
                  }));
              },
              Je = (rt) => {
                if (i.destroyed || !i.autoplay.running) return;
                cancelAnimationFrame(j), fe();
                let ft = typeof rt > "u" ? i.params.autoplay.delay : rt;
                (P = i.params.autoplay.delay), (G = i.params.autoplay.delay);
                const Jt = (() => {
                  let rt;
                  return (
                    (rt =
                      i.virtual && i.params.virtual.enabled
                        ? i.slides.filter((Jt) =>
                            Jt.classList.contains("swiper-slide-active")
                          )[0]
                        : i.slides[i.activeIndex]),
                    rt
                      ? parseInt(rt.getAttribute("data-swiper-autoplay"), 10)
                      : void 0
                  );
                })();
                !Number.isNaN(Jt) &&
                  Jt > 0 &&
                  typeof rt > "u" &&
                  ((ft = Jt), (P = Jt), (G = Jt)),
                  (k = ft);
                const An = i.params.speed,
                  Pr = () => {
                    !i ||
                      i.destroyed ||
                      (i.params.autoplay.reverseDirection
                        ? !i.isBeginning || i.params.loop || i.params.rewind
                          ? (i.slidePrev(An, !0, !0), A("autoplay"))
                          : i.params.autoplay.stopOnLastSlide ||
                            (i.slideTo(i.slides.length - 1, An, !0, !0),
                            A("autoplay"))
                        : !i.isEnd || i.params.loop || i.params.rewind
                        ? (i.slideNext(An, !0, !0), A("autoplay"))
                        : i.params.autoplay.stopOnLastSlide ||
                          (i.slideTo(0, An, !0, !0), A("autoplay")),
                      i.params.cssMode &&
                        ((h = new Date().getTime()),
                        requestAnimationFrame(() => {
                          Je();
                        })));
                  };
                return (
                  ft > 0
                    ? (clearTimeout(U),
                      (U = setTimeout(() => {
                        Pr();
                      }, ft)))
                    : requestAnimationFrame(() => {
                        Pr();
                      }),
                  ft
                );
              },
              _t = () => {
                (h = new Date().getTime()),
                  (i.autoplay.running = !0),
                  Je(),
                  A("autoplayStart");
              },
              ct = () => {
                (i.autoplay.running = !1),
                  clearTimeout(U),
                  cancelAnimationFrame(j),
                  A("autoplayStop");
              },
              We = (rt, ft) => {
                if (i.destroyed || !i.autoplay.running) return;
                clearTimeout(U), rt || (te = !0);
                const Jt = () => {
                  A("autoplayPause"),
                    i.params.autoplay.waitForTransition
                      ? i.wrapperEl.addEventListener("transitionend", Z)
                      : Ze();
                };
                if (((i.autoplay.paused = !0), ft))
                  return (
                    Y && (k = i.params.autoplay.delay), (Y = !1), void Jt()
                  );
                (k =
                  (k || i.params.autoplay.delay) - (new Date().getTime() - h)),
                  (!(i.isEnd && k < 0) || i.params.loop) &&
                    (k < 0 && (k = 0), Jt());
              },
              Ze = () => {
                (i.isEnd && k < 0 && !i.params.loop) ||
                  i.destroyed ||
                  !i.autoplay.running ||
                  ((h = new Date().getTime()),
                  te ? ((te = !1), Je(k)) : Je(),
                  (i.autoplay.paused = !1),
                  A("autoplayResume"));
              },
              at = () => {
                if (i.destroyed || !i.autoplay.running) return;
                const rt = Ye();
                "hidden" === rt.visibilityState && ((te = !0), We(!0)),
                  "visible" === rt.visibilityState && Ze();
              },
              Ke = (rt) => {
                "mouse" === rt.pointerType &&
                  ((te = !0),
                  (X = !0),
                  !i.animating && !i.autoplay.paused && We(!0));
              },
              Le = (rt) => {
                "mouse" === rt.pointerType &&
                  ((X = !1), i.autoplay.paused && Ze());
              };
            E("init", () => {
              i.params.autoplay.enabled &&
                (i.params.autoplay.pauseOnMouseEnter &&
                  (i.el.addEventListener("pointerenter", Ke),
                  i.el.addEventListener("pointerleave", Le)),
                Ye().addEventListener("visibilitychange", at),
                _t());
            }),
              E("destroy", () => {
                i.el.removeEventListener("pointerenter", Ke),
                  i.el.removeEventListener("pointerleave", Le),
                  Ye().removeEventListener("visibilitychange", at),
                  i.autoplay.running && ct();
              }),
              E("_freeModeStaticRelease", () => {
                (T || te) && Ze();
              }),
              E("_freeModeNoMomentumRelease", () => {
                i.params.autoplay.disableOnInteraction ? ct() : We(!0, !0);
              }),
              E("beforeTransitionStart", (rt, ft, Jt) => {
                i.destroyed ||
                  !i.autoplay.running ||
                  (Jt || !i.params.autoplay.disableOnInteraction
                    ? We(!0, !0)
                    : ct());
              }),
              E("sliderFirstMove", () => {
                if (!i.destroyed && i.autoplay.running) {
                  if (i.params.autoplay.disableOnInteraction) return void ct();
                  (p = !0),
                    (T = !1),
                    (te = !1),
                    (R = setTimeout(() => {
                      (te = !0), (T = !0), We(!0);
                    }, 200));
                }
              }),
              E("touchEnd", () => {
                if (!i.destroyed && i.autoplay.running && p) {
                  if (
                    (clearTimeout(R),
                    clearTimeout(U),
                    i.params.autoplay.disableOnInteraction)
                  )
                    return (T = !1), void (p = !1);
                  T && i.params.cssMode && Ze(), (T = !1), (p = !1);
                }
              }),
              E("slideChange", () => {
                i.destroyed || !i.autoplay.running || (Y = !0);
              }),
              Object.assign(i.autoplay, {
                start: _t,
                stop: ct,
                pause: We,
                resume: Ze,
              });
          },
          function bi(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({
              thumbs: {
                swiper: null,
                multipleActiveThumbs: !0,
                autoScrollOffset: 0,
                slideThumbActiveClass: "swiper-slide-thumb-active",
                thumbsContainerClass: "swiper-thumbs",
              },
            });
            let A = !1,
              I = !1;
            function U() {
              const G = i.thumbs.swiper;
              if (!G || G.destroyed) return;
              const k = G.clickedIndex,
                h = G.clickedSlide;
              if (
                (h &&
                  h.classList.contains(
                    i.params.thumbs.slideThumbActiveClass
                  )) ||
                typeof k > "u" ||
                null === k
              )
                return;
              let b;
              (b = G.params.loop
                ? parseInt(
                    G.clickedSlide.getAttribute("data-swiper-slide-index"),
                    10
                  )
                : k),
                i.params.loop ? i.slideToLoop(b) : i.slideTo(b);
            }
            function j() {
              const { thumbs: G } = i.params;
              if (A) return !1;
              A = !0;
              const k = i.constructor;
              if (G.swiper instanceof k)
                (i.thumbs.swiper = G.swiper),
                  Object.assign(i.thumbs.swiper.originalParams, {
                    watchSlidesProgress: !0,
                    slideToClickedSlide: !1,
                  }),
                  Object.assign(i.thumbs.swiper.params, {
                    watchSlidesProgress: !0,
                    slideToClickedSlide: !1,
                  }),
                  i.thumbs.swiper.update();
              else if (J(G.swiper)) {
                const h = Object.assign({}, G.swiper);
                Object.assign(h, {
                  watchSlidesProgress: !0,
                  slideToClickedSlide: !1,
                }),
                  (i.thumbs.swiper = new k(h)),
                  (I = !0);
              }
              return (
                i.thumbs.swiper.el.classList.add(
                  i.params.thumbs.thumbsContainerClass
                ),
                i.thumbs.swiper.on("tap", U),
                !0
              );
            }
            function P(G) {
              const k = i.thumbs.swiper;
              if (!k || k.destroyed) return;
              const h =
                "auto" === k.params.slidesPerView
                  ? k.slidesPerViewDynamic()
                  : k.params.slidesPerView;
              let b = 1;
              const p = i.params.thumbs.slideThumbActiveClass;
              if (
                (i.params.slidesPerView > 1 &&
                  !i.params.centeredSlides &&
                  (b = i.params.slidesPerView),
                i.params.thumbs.multipleActiveThumbs || (b = 1),
                (b = Math.floor(b)),
                k.slides.forEach((Y) => Y.classList.remove(p)),
                k.params.loop || (k.params.virtual && k.params.virtual.enabled))
              )
                for (let Y = 0; Y < b; Y += 1)
                  Mt(
                    k.slidesEl,
                    `[data-swiper-slide-index="${i.realIndex + Y}"]`
                  ).forEach((te) => {
                    te.classList.add(p);
                  });
              else
                for (let Y = 0; Y < b; Y += 1)
                  k.slides[i.realIndex + Y] &&
                    k.slides[i.realIndex + Y].classList.add(p);
              const T = i.params.thumbs.autoScrollOffset,
                R = T && !k.params.loop;
              if (i.realIndex !== k.realIndex || R) {
                const Y = k.activeIndex;
                let te, X;
                if (k.params.loop) {
                  const Z = k.slides.filter(
                    (fe) =>
                      fe.getAttribute("data-swiper-slide-index") ===
                      `${i.realIndex}`
                  )[0];
                  (te = k.slides.indexOf(Z)),
                    (X = i.activeIndex > i.previousIndex ? "next" : "prev");
                } else
                  (te = i.realIndex),
                    (X = te > i.previousIndex ? "next" : "prev");
                R && (te += "next" === X ? T : -1 * T),
                  k.visibleSlidesIndexes &&
                    k.visibleSlidesIndexes.indexOf(te) < 0 &&
                    (k.params.centeredSlides &&
                      (te =
                        te > Y
                          ? te - Math.floor(h / 2) + 1
                          : te + Math.floor(h / 2) - 1),
                    k.slideTo(te, G ? 0 : void 0));
              }
            }
            (i.thumbs = { swiper: null }),
              E("beforeInit", () => {
                const { thumbs: G } = i.params;
                if (G && G.swiper)
                  if (
                    "string" == typeof G.swiper ||
                    G.swiper instanceof HTMLElement
                  ) {
                    const k = Ye(),
                      h = () => {
                        const p =
                          "string" == typeof G.swiper
                            ? k.querySelector(G.swiper)
                            : G.swiper;
                        if (p && p.swiper) (G.swiper = p.swiper), j(), P(!0);
                        else if (p) {
                          const T = (R) => {
                            (G.swiper = R.detail[0]),
                              p.removeEventListener("init", T),
                              j(),
                              P(!0),
                              G.swiper.update(),
                              i.update();
                          };
                          p.addEventListener("init", T);
                        }
                        return p;
                      },
                      b = () => {
                        i.destroyed || h() || requestAnimationFrame(b);
                      };
                    requestAnimationFrame(b);
                  } else j(), P(!0);
              }),
              E("slideChange update resize observerUpdate", () => {
                P();
              }),
              E("setTransition", (G, k) => {
                const h = i.thumbs.swiper;
                !h || h.destroyed || h.setTransition(k);
              }),
              E("beforeDestroy", () => {
                const G = i.thumbs.swiper;
                !G || G.destroyed || (I && G.destroy());
              }),
              Object.assign(i.thumbs, { init: j, update: P });
          },
          function Ss(w) {
            let { swiper: i, extendParams: _, emit: E, once: A } = w;
            _({
              freeMode: {
                enabled: !1,
                momentum: !0,
                momentumRatio: 1,
                momentumBounce: !0,
                momentumBounceRatio: 1,
                momentumVelocityRatio: 1,
                sticky: !1,
                minimumVelocity: 0.02,
              },
            }),
              Object.assign(i, {
                freeMode: {
                  onTouchStart: function I() {
                    if (i.params.cssMode) return;
                    const P = i.getTranslate();
                    i.setTranslate(P),
                      i.setTransition(0),
                      (i.touchEventsData.velocities.length = 0),
                      i.freeMode.onTouchEnd({
                        currentPos: i.rtl ? i.translate : -i.translate,
                      });
                  },
                  onTouchMove: function U() {
                    if (i.params.cssMode) return;
                    const { touchEventsData: P, touches: G } = i;
                    0 === P.velocities.length &&
                      P.velocities.push({
                        position: G[i.isHorizontal() ? "startX" : "startY"],
                        time: P.touchStartTime,
                      }),
                      P.velocities.push({
                        position: G[i.isHorizontal() ? "currentX" : "currentY"],
                        time: $e(),
                      });
                  },
                  onTouchEnd: function j(P) {
                    let { currentPos: G } = P;
                    if (i.params.cssMode) return;
                    const {
                        params: k,
                        wrapperEl: h,
                        rtlTranslate: b,
                        snapGrid: p,
                        touchEventsData: T,
                      } = i,
                      Y = $e() - T.touchStartTime;
                    if (G < -i.minTranslate()) i.slideTo(i.activeIndex);
                    else if (G > -i.maxTranslate())
                      i.slideTo(
                        i.slides.length < p.length
                          ? p.length - 1
                          : i.slides.length - 1
                      );
                    else {
                      if (k.freeMode.momentum) {
                        if (T.velocities.length > 1) {
                          const ct = T.velocities.pop(),
                            We = T.velocities.pop(),
                            at = ct.time - We.time;
                          (i.velocity = (ct.position - We.position) / at),
                            (i.velocity /= 2),
                            Math.abs(i.velocity) < k.freeMode.minimumVelocity &&
                              (i.velocity = 0),
                            (at > 150 || $e() - ct.time > 300) &&
                              (i.velocity = 0);
                        } else i.velocity = 0;
                        (i.velocity *= k.freeMode.momentumVelocityRatio),
                          (T.velocities.length = 0);
                        let te = 1e3 * k.freeMode.momentumRatio,
                          Z = i.translate + i.velocity * te;
                        b && (Z = -Z);
                        let nt,
                          fe = !1;
                        const Je =
                          20 *
                          Math.abs(i.velocity) *
                          k.freeMode.momentumBounceRatio;
                        let _t;
                        if (Z < i.maxTranslate())
                          k.freeMode.momentumBounce
                            ? (Z + i.maxTranslate() < -Je &&
                                (Z = i.maxTranslate() - Je),
                              (nt = i.maxTranslate()),
                              (fe = !0),
                              (T.allowMomentumBounce = !0))
                            : (Z = i.maxTranslate()),
                            k.loop && k.centeredSlides && (_t = !0);
                        else if (Z > i.minTranslate())
                          k.freeMode.momentumBounce
                            ? (Z - i.minTranslate() > Je &&
                                (Z = i.minTranslate() + Je),
                              (nt = i.minTranslate()),
                              (fe = !0),
                              (T.allowMomentumBounce = !0))
                            : (Z = i.minTranslate()),
                            k.loop && k.centeredSlides && (_t = !0);
                        else if (k.freeMode.sticky) {
                          let ct;
                          for (let We = 0; We < p.length; We += 1)
                            if (p[We] > -Z) {
                              ct = We;
                              break;
                            }
                          (Z =
                            Math.abs(p[ct] - Z) < Math.abs(p[ct - 1] - Z) ||
                            "next" === i.swipeDirection
                              ? p[ct]
                              : p[ct - 1]),
                            (Z = -Z);
                        }
                        if (
                          (_t &&
                            A("transitionEnd", () => {
                              i.loopFix();
                            }),
                          0 !== i.velocity)
                        ) {
                          if (
                            ((te = b
                              ? Math.abs((-Z - i.translate) / i.velocity)
                              : Math.abs((Z - i.translate) / i.velocity)),
                            k.freeMode.sticky)
                          ) {
                            const ct = Math.abs((b ? -Z : Z) - i.translate),
                              We = i.slidesSizesGrid[i.activeIndex];
                            te =
                              ct < We
                                ? k.speed
                                : ct < 2 * We
                                ? 1.5 * k.speed
                                : 2.5 * k.speed;
                          }
                        } else if (k.freeMode.sticky)
                          return void i.slideToClosest();
                        k.freeMode.momentumBounce && fe
                          ? (i.updateProgress(nt),
                            i.setTransition(te),
                            i.setTranslate(Z),
                            i.transitionStart(!0, i.swipeDirection),
                            (i.animating = !0),
                            Oe(h, () => {
                              !i ||
                                i.destroyed ||
                                !T.allowMomentumBounce ||
                                (E("momentumBounce"),
                                i.setTransition(k.speed),
                                setTimeout(() => {
                                  i.setTranslate(nt),
                                    Oe(h, () => {
                                      !i || i.destroyed || i.transitionEnd();
                                    });
                                }, 0));
                            }))
                          : i.velocity
                          ? (E("_freeModeNoMomentumRelease"),
                            i.updateProgress(Z),
                            i.setTransition(te),
                            i.setTranslate(Z),
                            i.transitionStart(!0, i.swipeDirection),
                            i.animating ||
                              ((i.animating = !0),
                              Oe(h, () => {
                                !i || i.destroyed || i.transitionEnd();
                              })))
                          : i.updateProgress(Z),
                          i.updateActiveIndex(),
                          i.updateSlidesClasses();
                      } else {
                        if (k.freeMode.sticky) return void i.slideToClosest();
                        k.freeMode && E("_freeModeNoMomentumRelease");
                      }
                      (!k.freeMode.momentum || Y >= k.longSwipesMs) &&
                        (E("_freeModeStaticRelease"),
                        i.updateProgress(),
                        i.updateActiveIndex(),
                        i.updateSlidesClasses());
                    }
                  },
                },
              });
          },
          function hs(w) {
            let A,
              I,
              U,
              j,
              { swiper: i, extendParams: _, on: E } = w;
            _({ grid: { rows: 1, fill: "column" } });
            const P = () => {
              let R = i.params.spaceBetween;
              return (
                "string" == typeof R && R.indexOf("%") >= 0
                  ? (R = (parseFloat(R.replace("%", "")) / 100) * i.size)
                  : "string" == typeof R && (R = parseFloat(R)),
                R
              );
            };
            E("init", () => {
              j = i.params.grid && i.params.grid.rows > 1;
            }),
              E("update", () => {
                const { params: R, el: Y } = i,
                  te = R.grid && R.grid.rows > 1;
                j && !te
                  ? (Y.classList.remove(
                      `${R.containerModifierClass}grid`,
                      `${R.containerModifierClass}grid-column`
                    ),
                    (U = 1),
                    i.emitContainerClasses())
                  : !j &&
                    te &&
                    (Y.classList.add(`${R.containerModifierClass}grid`),
                    "column" === R.grid.fill &&
                      Y.classList.add(`${R.containerModifierClass}grid-column`),
                    i.emitContainerClasses()),
                  (j = te);
              }),
              (i.grid = {
                initSlides: (R) => {
                  const { slidesPerView: Y } = i.params,
                    { rows: te, fill: X } = i.params.grid,
                    Z =
                      i.virtual && i.params.virtual.enabled
                        ? i.virtual.slides.length
                        : R.length;
                  (U = Math.floor(Z / te)),
                    (A =
                      Math.floor(Z / te) === Z / te
                        ? Z
                        : Math.ceil(Z / te) * te),
                    "auto" !== Y && "row" === X && (A = Math.max(A, Y * te)),
                    (I = A / te);
                },
                unsetSlides: () => {
                  i.slides &&
                    i.slides.forEach((R) => {
                      R.swiperSlideGridSet &&
                        ((R.style.height = ""),
                        (R.style[i.getDirectionLabel("margin-top")] = ""));
                    });
                },
                updateSlide: (R, Y, te) => {
                  const { slidesPerGroup: X } = i.params,
                    Z = P(),
                    { rows: fe, fill: nt } = i.params.grid,
                    Je =
                      i.virtual && i.params.virtual.enabled
                        ? i.virtual.slides.length
                        : te.length;
                  let _t, ct, We;
                  if ("row" === nt && X > 1) {
                    const Ze = Math.floor(R / (X * fe)),
                      at = R - fe * X * Ze,
                      Ke =
                        0 === Ze
                          ? X
                          : Math.min(Math.ceil((Je - Ze * fe * X) / fe), X);
                    (We = Math.floor(at / Ke)),
                      (ct = at - We * Ke + Ze * X),
                      (_t = ct + (We * A) / fe),
                      (Y.style.order = _t);
                  } else
                    "column" === nt
                      ? ((ct = Math.floor(R / fe)),
                        (We = R - ct * fe),
                        (ct > U || (ct === U && We === fe - 1)) &&
                          ((We += 1), We >= fe && ((We = 0), (ct += 1))))
                      : ((We = Math.floor(R / I)), (ct = R - We * I));
                  (Y.row = We),
                    (Y.column = ct),
                    (Y.style.height = `calc((100% - ${
                      (fe - 1) * Z
                    }px) / ${fe})`),
                    (Y.style[i.getDirectionLabel("margin-top")] =
                      0 !== We ? Z && `${Z}px` : ""),
                    (Y.swiperSlideGridSet = !0);
                },
                updateWrapperSize: (R, Y) => {
                  const { centeredSlides: te, roundLengths: X } = i.params,
                    Z = P(),
                    { rows: fe } = i.params.grid;
                  if (
                    ((i.virtualSize = (R + Z) * A),
                    (i.virtualSize = Math.ceil(i.virtualSize / fe) - Z),
                    i.params.cssMode ||
                      (i.wrapperEl.style[i.getDirectionLabel("width")] = `${
                        i.virtualSize + Z
                      }px`),
                    te)
                  ) {
                    const nt = [];
                    for (let Je = 0; Je < Y.length; Je += 1) {
                      let _t = Y[Je];
                      X && (_t = Math.floor(_t)),
                        Y[Je] < i.virtualSize + Y[0] && nt.push(_t);
                    }
                    Y.splice(0, Y.length), Y.push(...nt);
                  }
                },
              });
          },
          function Ji(w) {
            let { swiper: i } = w;
            Object.assign(i, {
              appendSlide: Xi.bind(i),
              prependSlide: $i.bind(i),
              addSlide: Qi.bind(i),
              removeSlide: Ts.bind(i),
              removeAllSlides: Fs.bind(i),
            });
          },
          function Di(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({ fadeEffect: { crossFade: !1 } }),
              _i({
                effect: "fade",
                swiper: i,
                on: E,
                setTranslate: () => {
                  const { slides: U } = i;
                  for (let P = 0; P < U.length; P += 1) {
                    const G = i.slides[P];
                    let h = -G.swiperSlideOffset;
                    i.params.virtualTranslate || (h -= i.translate);
                    let b = 0;
                    i.isHorizontal() || ((b = h), (h = 0));
                    const p = i.params.fadeEffect.crossFade
                        ? Math.max(1 - Math.abs(G.progress), 0)
                        : 1 + Math.min(Math.max(G.progress, -1), 0),
                      T = ri(0, G);
                    (T.style.opacity = p),
                      (T.style.transform = `translate3d(${h}px, ${b}px, 0px)`);
                  }
                },
                setTransition: (U) => {
                  const j = i.slides.map((P) => Ne(P));
                  j.forEach((P) => {
                    P.style.transitionDuration = `${U}ms`;
                  }),
                    Ei({
                      swiper: i,
                      duration: U,
                      transformElements: j,
                      allSlides: !0,
                    });
                },
                overwriteParams: () => ({
                  slidesPerView: 1,
                  slidesPerGroup: 1,
                  watchSlidesProgress: !0,
                  spaceBetween: 0,
                  virtualTranslate: !i.params.cssMode,
                }),
              });
          },
          function gn(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({
              cubeEffect: {
                slideShadows: !0,
                shadow: !0,
                shadowOffset: 20,
                shadowScale: 0.94,
              },
            });
            const A = (P, G, k) => {
              let h = P.querySelector(
                  k ? ".swiper-slide-shadow-left" : ".swiper-slide-shadow-top"
                ),
                b = P.querySelector(
                  k
                    ? ".swiper-slide-shadow-right"
                    : ".swiper-slide-shadow-bottom"
                );
              h ||
                ((h = Vt(
                  "div",
                  (
                    "swiper-slide-shadow-cube swiper-slide-shadow-" +
                    (k ? "left" : "top")
                  ).split(" ")
                )),
                P.append(h)),
                b ||
                  ((b = Vt(
                    "div",
                    (
                      "swiper-slide-shadow-cube swiper-slide-shadow-" +
                      (k ? "right" : "bottom")
                    ).split(" ")
                  )),
                  P.append(b)),
                h && (h.style.opacity = Math.max(-G, 0)),
                b && (b.style.opacity = Math.max(G, 0));
            };
            _i({
              effect: "cube",
              swiper: i,
              on: E,
              setTranslate: () => {
                const {
                    el: P,
                    wrapperEl: G,
                    slides: k,
                    width: h,
                    height: b,
                    rtlTranslate: p,
                    size: T,
                    browser: R,
                  } = i,
                  Y = i.params.cubeEffect,
                  te = i.isHorizontal(),
                  X = i.virtual && i.params.virtual.enabled;
                let fe,
                  Z = 0;
                Y.shadow &&
                  (te
                    ? ((fe = i.wrapperEl.querySelector(".swiper-cube-shadow")),
                      fe ||
                        ((fe = Vt("div", "swiper-cube-shadow")),
                        i.wrapperEl.append(fe)),
                      (fe.style.height = `${h}px`))
                    : ((fe = P.querySelector(".swiper-cube-shadow")),
                      fe ||
                        ((fe = Vt("div", "swiper-cube-shadow")),
                        P.append(fe))));
                for (let Je = 0; Je < k.length; Je += 1) {
                  const _t = k[Je];
                  let ct = Je;
                  X &&
                    (ct = parseInt(
                      _t.getAttribute("data-swiper-slide-index"),
                      10
                    ));
                  let We = 90 * ct,
                    Ze = Math.floor(We / 360);
                  p && ((We = -We), (Ze = Math.floor(-We / 360)));
                  const at = Math.max(Math.min(_t.progress, 1), -1);
                  let Ke = 0,
                    Le = 0,
                    de = 0;
                  ct % 4 == 0
                    ? ((Ke = 4 * -Ze * T), (de = 0))
                    : (ct - 1) % 4 == 0
                    ? ((Ke = 0), (de = 4 * -Ze * T))
                    : (ct - 2) % 4 == 0
                    ? ((Ke = T + 4 * Ze * T), (de = T))
                    : (ct - 3) % 4 == 0 &&
                      ((Ke = -T), (de = 3 * T + 4 * T * Ze)),
                    p && (Ke = -Ke),
                    te || ((Le = Ke), (Ke = 0)),
                    at <= 1 &&
                      at > -1 &&
                      ((Z = 90 * ct + 90 * at), p && (Z = 90 * -ct - 90 * at)),
                    (_t.style.transform = `rotateX(${
                      te ? 0 : -We
                    }deg) rotateY(${
                      te ? We : 0
                    }deg) translate3d(${Ke}px, ${Le}px, ${de}px)`),
                    Y.slideShadows && A(_t, at, te);
                }
                if (
                  ((G.style.transformOrigin = `50% 50% -${T / 2}px`),
                  (G.style["-webkit-transform-origin"] = `50% 50% -${T / 2}px`),
                  Y.shadow)
                )
                  if (te)
                    fe.style.transform = `translate3d(0px, ${
                      h / 2 + Y.shadowOffset
                    }px, ${-h / 2}px) rotateX(90deg) rotateZ(0deg) scale(${
                      Y.shadowScale
                    })`;
                  else {
                    const Je = Math.abs(Z) - 90 * Math.floor(Math.abs(Z) / 90),
                      _t =
                        1.5 -
                        (Math.sin((2 * Je * Math.PI) / 360) / 2 +
                          Math.cos((2 * Je * Math.PI) / 360) / 2),
                      We = Y.shadowScale / _t;
                    fe.style.transform = `scale3d(${
                      Y.shadowScale
                    }, 1, ${We}) translate3d(0px, ${
                      b / 2 + Y.shadowOffset
                    }px, ${-b / 2 / We}px) rotateX(-90deg)`;
                  }
                const nt =
                  (R.isSafari || R.isWebView) && R.needPerspectiveFix
                    ? -T / 2
                    : 0;
                (G.style.transform = `translate3d(0px,0,${nt}px) rotateX(${
                  i.isHorizontal() ? 0 : Z
                }deg) rotateY(${i.isHorizontal() ? -Z : 0}deg)`),
                  G.style.setProperty("--swiper-cube-translate-z", `${nt}px`);
              },
              setTransition: (P) => {
                const { el: G, slides: k } = i;
                if (
                  (k.forEach((h) => {
                    (h.style.transitionDuration = `${P}ms`),
                      h
                        .querySelectorAll(
                          ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                        )
                        .forEach((b) => {
                          b.style.transitionDuration = `${P}ms`;
                        });
                  }),
                  i.params.cubeEffect.shadow && !i.isHorizontal())
                ) {
                  const h = G.querySelector(".swiper-cube-shadow");
                  h && (h.style.transitionDuration = `${P}ms`);
                }
              },
              recreateShadows: () => {
                const P = i.isHorizontal();
                i.slides.forEach((G) => {
                  const k = Math.max(Math.min(G.progress, 1), -1);
                  A(G, k, P);
                });
              },
              getEffectParams: () => i.params.cubeEffect,
              perspective: () => !0,
              overwriteParams: () => ({
                slidesPerView: 1,
                slidesPerGroup: 1,
                watchSlidesProgress: !0,
                resistanceRatio: 0,
                spaceBetween: 0,
                centeredSlides: !1,
                virtualTranslate: !0,
              }),
            });
          },
          function or(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({ flipEffect: { slideShadows: !0, limitRotation: !0 } });
            const A = (P, G) => {
              let k = i.isHorizontal()
                  ? P.querySelector(".swiper-slide-shadow-left")
                  : P.querySelector(".swiper-slide-shadow-top"),
                h = i.isHorizontal()
                  ? P.querySelector(".swiper-slide-shadow-right")
                  : P.querySelector(".swiper-slide-shadow-bottom");
              k || (k = xn("flip", P, i.isHorizontal() ? "left" : "top")),
                h || (h = xn("flip", P, i.isHorizontal() ? "right" : "bottom")),
                k && (k.style.opacity = Math.max(-G, 0)),
                h && (h.style.opacity = Math.max(G, 0));
            };
            _i({
              effect: "flip",
              swiper: i,
              on: E,
              setTranslate: () => {
                const { slides: P, rtlTranslate: G } = i,
                  k = i.params.flipEffect;
                for (let h = 0; h < P.length; h += 1) {
                  const b = P[h];
                  let p = b.progress;
                  i.params.flipEffect.limitRotation &&
                    (p = Math.max(Math.min(b.progress, 1), -1));
                  const T = b.swiperSlideOffset;
                  let Y = -180 * p,
                    te = 0,
                    X = i.params.cssMode ? -T - i.translate : -T,
                    Z = 0;
                  i.isHorizontal()
                    ? G && (Y = -Y)
                    : ((Z = X), (X = 0), (te = -Y), (Y = 0)),
                    (b.style.zIndex = -Math.abs(Math.round(p)) + P.length),
                    k.slideShadows && A(b, p);
                  const fe = `translate3d(${X}px, ${Z}px, 0px) rotateX(${te}deg) rotateY(${Y}deg)`;
                  ri(0, b).style.transform = fe;
                }
              },
              setTransition: (P) => {
                const G = i.slides.map((k) => Ne(k));
                G.forEach((k) => {
                  (k.style.transitionDuration = `${P}ms`),
                    k
                      .querySelectorAll(
                        ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                      )
                      .forEach((h) => {
                        h.style.transitionDuration = `${P}ms`;
                      });
                }),
                  Ei({ swiper: i, duration: P, transformElements: G });
              },
              recreateShadows: () => {
                i.slides.forEach((P) => {
                  let G = P.progress;
                  i.params.flipEffect.limitRotation &&
                    (G = Math.max(Math.min(P.progress, 1), -1)),
                    A(P, G);
                });
              },
              getEffectParams: () => i.params.flipEffect,
              perspective: () => !0,
              overwriteParams: () => ({
                slidesPerView: 1,
                slidesPerGroup: 1,
                watchSlidesProgress: !0,
                spaceBetween: 0,
                virtualTranslate: !i.params.cssMode,
              }),
            });
          },
          function ii(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({
              coverflowEffect: {
                rotate: 50,
                stretch: 0,
                depth: 100,
                scale: 1,
                modifier: 1,
                slideShadows: !0,
              },
            }),
              _i({
                effect: "coverflow",
                swiper: i,
                on: E,
                setTranslate: () => {
                  const {
                      width: U,
                      height: j,
                      slides: P,
                      slidesSizesGrid: G,
                    } = i,
                    k = i.params.coverflowEffect,
                    h = i.isHorizontal(),
                    b = i.translate,
                    p = h ? U / 2 - b : j / 2 - b,
                    T = h ? k.rotate : -k.rotate,
                    R = k.depth;
                  for (let Y = 0, te = P.length; Y < te; Y += 1) {
                    const X = P[Y],
                      Z = G[Y],
                      nt = (p - X.swiperSlideOffset - Z / 2) / Z,
                      Je =
                        "function" == typeof k.modifier
                          ? k.modifier(nt)
                          : nt * k.modifier;
                    let _t = h ? T * Je : 0,
                      ct = h ? 0 : T * Je,
                      We = -R * Math.abs(Je),
                      Ze = k.stretch;
                    "string" == typeof Ze &&
                      -1 !== Ze.indexOf("%") &&
                      (Ze = (parseFloat(k.stretch) / 100) * Z);
                    let at = h ? 0 : Ze * Je,
                      Ke = h ? Ze * Je : 0,
                      Le = 1 - (1 - k.scale) * Math.abs(Je);
                    Math.abs(Ke) < 0.001 && (Ke = 0),
                      Math.abs(at) < 0.001 && (at = 0),
                      Math.abs(We) < 0.001 && (We = 0),
                      Math.abs(_t) < 0.001 && (_t = 0),
                      Math.abs(ct) < 0.001 && (ct = 0),
                      Math.abs(Le) < 0.001 && (Le = 0);
                    const de = `translate3d(${Ke}px,${at}px,${We}px)  rotateX(${ct}deg) rotateY(${_t}deg) scale(${Le})`;
                    if (
                      ((ri(0, X).style.transform = de),
                      (X.style.zIndex = 1 - Math.abs(Math.round(Je))),
                      k.slideShadows)
                    ) {
                      let ut = X.querySelector(
                          h
                            ? ".swiper-slide-shadow-left"
                            : ".swiper-slide-shadow-top"
                        ),
                        ht = X.querySelector(
                          h
                            ? ".swiper-slide-shadow-right"
                            : ".swiper-slide-shadow-bottom"
                        );
                      ut || (ut = xn("coverflow", X, h ? "left" : "top")),
                        ht || (ht = xn("coverflow", X, h ? "right" : "bottom")),
                        ut && (ut.style.opacity = Je > 0 ? Je : 0),
                        ht && (ht.style.opacity = -Je > 0 ? -Je : 0);
                    }
                  }
                },
                setTransition: (U) => {
                  i.slides
                    .map((P) => Ne(P))
                    .forEach((P) => {
                      (P.style.transitionDuration = `${U}ms`),
                        P.querySelectorAll(
                          ".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left"
                        ).forEach((G) => {
                          G.style.transitionDuration = `${U}ms`;
                        });
                    });
                },
                perspective: () => !0,
                overwriteParams: () => ({ watchSlidesProgress: !0 }),
              });
          },
          function Ir(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({
              creativeEffect: {
                limitProgress: 1,
                shadowPerProgress: !1,
                progressMultiplier: 1,
                perspective: !0,
                prev: {
                  translate: [0, 0, 0],
                  rotate: [0, 0, 0],
                  opacity: 1,
                  scale: 1,
                },
                next: {
                  translate: [0, 0, 0],
                  rotate: [0, 0, 0],
                  opacity: 1,
                  scale: 1,
                },
              },
            });
            const A = (j) => ("string" == typeof j ? j : `${j}px`);
            _i({
              effect: "creative",
              swiper: i,
              on: E,
              setTranslate: () => {
                const { slides: j, wrapperEl: P, slidesSizesGrid: G } = i,
                  k = i.params.creativeEffect,
                  { progressMultiplier: h } = k,
                  b = i.params.centeredSlides;
                b &&
                  (P.style.transform = `translateX(calc(50% - ${
                    G[0] / 2 - i.params.slidesOffsetBefore || 0
                  }px))`);
                for (let p = 0; p < j.length; p += 1) {
                  const T = j[p],
                    R = T.progress,
                    Y = Math.min(
                      Math.max(T.progress, -k.limitProgress),
                      k.limitProgress
                    );
                  let te = Y;
                  b ||
                    (te = Math.min(
                      Math.max(T.originalProgress, -k.limitProgress),
                      k.limitProgress
                    ));
                  const X = T.swiperSlideOffset,
                    Z = [i.params.cssMode ? -X - i.translate : -X, 0, 0],
                    fe = [0, 0, 0];
                  let nt = !1;
                  i.isHorizontal() || ((Z[1] = Z[0]), (Z[0] = 0));
                  let Je = {
                    translate: [0, 0, 0],
                    rotate: [0, 0, 0],
                    scale: 1,
                    opacity: 1,
                  };
                  Y < 0
                    ? ((Je = k.next), (nt = !0))
                    : Y > 0 && ((Je = k.prev), (nt = !0)),
                    Z.forEach((Le, de) => {
                      Z[de] = `calc(${Le}px + (${A(
                        Je.translate[de]
                      )} * ${Math.abs(Y * h)}))`;
                    }),
                    fe.forEach((Le, de) => {
                      fe[de] = Je.rotate[de] * Math.abs(Y * h);
                    }),
                    (T.style.zIndex = -Math.abs(Math.round(R)) + j.length);
                  const _t = Z.join(", "),
                    Ze =
                      te < 0
                        ? 1 + (1 - Je.opacity) * te * h
                        : 1 - (1 - Je.opacity) * te * h,
                    at = `translate3d(${_t}) rotateX(${fe[0]}deg) rotateY(${
                      fe[1]
                    }deg) rotateZ(${fe[2]}deg) ${
                      te < 0
                        ? `scale(${1 + (1 - Je.scale) * te * h})`
                        : `scale(${1 - (1 - Je.scale) * te * h})`
                    }`;
                  if ((nt && Je.shadow) || !nt) {
                    let Le = T.querySelector(".swiper-slide-shadow");
                    !Le && Je.shadow && (Le = xn("creative", T)),
                      Le &&
                        (Le.style.opacity = Math.min(
                          Math.max(
                            Math.abs(
                              k.shadowPerProgress
                                ? Y * (1 / k.limitProgress)
                                : Y
                            ),
                            0
                          ),
                          1
                        ));
                  }
                  const Ke = ri(0, T);
                  (Ke.style.transform = at),
                    (Ke.style.opacity = Ze),
                    Je.origin && (Ke.style.transformOrigin = Je.origin);
                }
              },
              setTransition: (j) => {
                const P = i.slides.map((G) => Ne(G));
                P.forEach((G) => {
                  (G.style.transitionDuration = `${j}ms`),
                    G.querySelectorAll(".swiper-slide-shadow").forEach((k) => {
                      k.style.transitionDuration = `${j}ms`;
                    });
                }),
                  Ei({
                    swiper: i,
                    duration: j,
                    transformElements: P,
                    allSlides: !0,
                  });
              },
              perspective: () => i.params.creativeEffect.perspective,
              overwriteParams: () => ({
                watchSlidesProgress: !0,
                virtualTranslate: !i.params.cssMode,
              }),
            });
          },
          function Or(w) {
            let { swiper: i, extendParams: _, on: E } = w;
            _({
              cardsEffect: {
                slideShadows: !0,
                rotate: !0,
                perSlideRotate: 2,
                perSlideOffset: 8,
              },
            }),
              _i({
                effect: "cards",
                swiper: i,
                on: E,
                setTranslate: () => {
                  const { slides: U, activeIndex: j, rtlTranslate: P } = i,
                    G = i.params.cardsEffect,
                    { startTranslate: k, isTouched: h } = i.touchEventsData,
                    b = P ? -i.translate : i.translate;
                  for (let p = 0; p < U.length; p += 1) {
                    const T = U[p],
                      R = T.progress,
                      Y = Math.min(Math.max(R, -4), 4);
                    let te = T.swiperSlideOffset;
                    i.params.centeredSlides &&
                      !i.params.cssMode &&
                      (i.wrapperEl.style.transform = `translateX(${i.minTranslate()}px)`),
                      i.params.centeredSlides &&
                        i.params.cssMode &&
                        (te -= U[0].swiperSlideOffset);
                    let X = i.params.cssMode ? -te - i.translate : -te,
                      Z = 0;
                    const fe = -100 * Math.abs(Y);
                    let nt = 1,
                      Je = -G.perSlideRotate * Y,
                      _t = G.perSlideOffset - 0.75 * Math.abs(Y);
                    const ct =
                      i.virtual && i.params.virtual.enabled
                        ? i.virtual.from + p
                        : p;
                    if (
                      ((ct === j || ct === j - 1) &&
                        Y > 0 &&
                        Y < 1 &&
                        (h || i.params.cssMode) &&
                        b < k) ||
                      ((ct === j || ct === j + 1) &&
                        Y < 0 &&
                        Y > -1 &&
                        (h || i.params.cssMode) &&
                        b > k)
                    ) {
                      const de =
                        (1 - Math.abs((Math.abs(Y) - 0.5) / 0.5)) ** 0.5;
                      (Je += -28 * Y * de),
                        (nt += -0.5 * de),
                        (_t += 96 * de),
                        (Z = -25 * de * Math.abs(Y) + "%");
                    }
                    if (
                      ((X =
                        Y < 0
                          ? `calc(${X}px ${P ? "-" : "+"} (${
                              _t * Math.abs(Y)
                            }%))`
                          : Y > 0
                          ? `calc(${X}px ${P ? "-" : "+"} (-${
                              _t * Math.abs(Y)
                            }%))`
                          : `${X}px`),
                      !i.isHorizontal())
                    ) {
                      const de = Z;
                      (Z = X), (X = de);
                    }
                    const Ke = `\n        translate3d(${X}, ${Z}, ${fe}px)\n        rotateZ(${
                      G.rotate ? (P ? -Je : Je) : 0
                    }deg)\n        scale(${
                      Y < 0 ? "" + (1 + (1 - nt) * Y) : "" + (1 - (1 - nt) * Y)
                    })\n      `;
                    if (G.slideShadows) {
                      let de = T.querySelector(".swiper-slide-shadow");
                      de || (de = xn("cards", T)),
                        de &&
                          (de.style.opacity = Math.min(
                            Math.max((Math.abs(Y) - 0.5) / 0.5, 0),
                            1
                          ));
                    }
                    (T.style.zIndex = -Math.abs(Math.round(R)) + U.length),
                      (ri(0, T).style.transform = Ke);
                  }
                },
                setTransition: (U) => {
                  const j = i.slides.map((P) => Ne(P));
                  j.forEach((P) => {
                    (P.style.transitionDuration = `${U}ms`),
                      P.querySelectorAll(".swiper-slide-shadow").forEach(
                        (G) => {
                          G.style.transitionDuration = `${U}ms`;
                        }
                      );
                  }),
                    Ei({ swiper: i, duration: U, transformElements: j });
                },
                perspective: () => !0,
                overwriteParams: () => ({
                  watchSlidesProgress: !0,
                  virtualTranslate: !i.params.cssMode,
                }),
              });
          },
        ]);
      const Fr = [
        "eventsPrefix",
        "injectStyles",
        "injectStylesUrls",
        "modules",
        "init",
        "_direction",
        "oneWayMovement",
        "touchEventsTarget",
        "initialSlide",
        "_speed",
        "cssMode",
        "updateOnWindowResize",
        "resizeObserver",
        "nested",
        "focusableElements",
        "_enabled",
        "_width",
        "_height",
        "preventInteractionOnTransition",
        "userAgent",
        "url",
        "_edgeSwipeDetection",
        "_edgeSwipeThreshold",
        "_freeMode",
        "_autoHeight",
        "setWrapperSize",
        "virtualTranslate",
        "_effect",
        "breakpoints",
        "breakpointsBase",
        "_spaceBetween",
        "_slidesPerView",
        "maxBackfaceHiddenSlides",
        "_grid",
        "_slidesPerGroup",
        "_slidesPerGroupSkip",
        "_slidesPerGroupAuto",
        "_centeredSlides",
        "_centeredSlidesBounds",
        "_slidesOffsetBefore",
        "_slidesOffsetAfter",
        "normalizeSlideIndex",
        "_centerInsufficientSlides",
        "_watchOverflow",
        "roundLengths",
        "touchRatio",
        "touchAngle",
        "simulateTouch",
        "_shortSwipes",
        "_longSwipes",
        "longSwipesRatio",
        "longSwipesMs",
        "_followFinger",
        "allowTouchMove",
        "_threshold",
        "touchMoveStopPropagation",
        "touchStartPreventDefault",
        "touchStartForcePreventDefault",
        "touchReleaseOnEdges",
        "uniqueNavElements",
        "_resistance",
        "_resistanceRatio",
        "_watchSlidesProgress",
        "_grabCursor",
        "preventClicks",
        "preventClicksPropagation",
        "_slideToClickedSlide",
        "_loop",
        "loopAdditionalSlides",
        "loopAddBlankSlides",
        "loopPreventsSliding",
        "_rewind",
        "_allowSlidePrev",
        "_allowSlideNext",
        "_swipeHandler",
        "_noSwiping",
        "noSwipingClass",
        "noSwipingSelector",
        "passiveListeners",
        "containerModifierClass",
        "slideClass",
        "slideActiveClass",
        "slideVisibleClass",
        "slideFullyVisibleClass",
        "slideNextClass",
        "slidePrevClass",
        "slideBlankClass",
        "wrapperClass",
        "lazyPreloaderClass",
        "lazyPreloadPrevNext",
        "runCallbacksOnInit",
        "observer",
        "observeParents",
        "observeSlideChildren",
        "a11y",
        "_autoplay",
        "_controller",
        "coverflowEffect",
        "cubeEffect",
        "fadeEffect",
        "flipEffect",
        "creativeEffect",
        "cardsEffect",
        "hashNavigation",
        "history",
        "keyboard",
        "mousewheel",
        "_navigation",
        "_pagination",
        "parallax",
        "_scrollbar",
        "_thumbs",
        "virtual",
        "zoom",
        "control",
      ];
      function Zr(w) {
        return (
          "object" == typeof w &&
          null !== w &&
          w.constructor &&
          "Object" === Object.prototype.toString.call(w).slice(8, -1) &&
          !w.__swiper__
        );
      }
      function es(w, i) {
        const _ = ["__proto__", "constructor", "prototype"];
        Object.keys(i)
          .filter((E) => _.indexOf(E) < 0)
          .forEach((E) => {
            typeof w[E] > "u"
              ? (w[E] = i[E])
              : Zr(i[E]) && Zr(w[E]) && Object.keys(i[E]).length > 0
              ? i[E].__swiper__
                ? (w[E] = i[E])
                : es(w[E], i[E])
              : (w[E] = i[E]);
          });
      }
      function br(w) {
        return (
          void 0 === w && (w = ""),
          w.replace(/-[a-z]/g, (i) => i.toUpperCase().replace("-", ""))
        );
      }
      const Vr = (w) => {
          if (parseFloat(w) === Number(w)) return Number(w);
          if ("true" === w || "" === w) return !0;
          if ("false" === w) return !1;
          if ("null" === w) return null;
          if ("undefined" !== w) {
            if (
              "string" == typeof w &&
              w.includes("{") &&
              w.includes("}") &&
              w.includes('"')
            ) {
              let i;
              try {
                i = JSON.parse(w);
              } catch {
                i = w;
              }
              return i;
            }
            return w;
          }
        },
        nr = [
          "a11y",
          "autoplay",
          "controller",
          "cards-effect",
          "coverflow-effect",
          "creative-effect",
          "cube-effect",
          "fade-effect",
          "flip-effect",
          "free-mode",
          "grid",
          "hash-navigation",
          "history",
          "keyboard",
          "mousewheel",
          "navigation",
          "pagination",
          "parallax",
          "scrollbar",
          "thumbs",
          "virtual",
          "zoom",
        ];
      function Kr(w, i, _) {
        const E = {},
          A = {};
        es(E, qn);
        const I = [...Fr, "on"],
          U = I.map((P) => P.replace(/_/, ""));
        I.forEach((P) => {
          (P = P.replace("_", "")), typeof w[P] < "u" && (A[P] = w[P]);
        });
        const j = [...w.attributes];
        return (
          "string" == typeof i &&
            typeof _ < "u" &&
            j.push({ name: i, value: Zr(_) ? { ..._ } : _ }),
          j.forEach((P) => {
            const G = nr.filter((k) => 0 === P.name.indexOf(`${k}-`))[0];
            if (G) {
              const k = br(G),
                h = br(P.name.split(`${G}-`)[1]);
              typeof A[k] > "u" && (A[k] = {}),
                !0 === A[k] && (A[k] = { enabled: !0 }),
                (A[k][h] = Vr(P.value));
            } else {
              const k = br(P.name);
              if (!U.includes(k)) return;
              const h = Vr(P.value);
              A[k] && nr.includes(P.name) && !Zr(h)
                ? (A[k].constructor !== Object && (A[k] = {}),
                  (A[k].enabled = !!h))
                : (A[k] = h);
            }
          }),
          es(E, A),
          E.navigation
            ? (E.navigation = {
                prevEl: ".swiper-button-prev",
                nextEl: ".swiper-button-next",
                ...(!0 !== E.navigation ? E.navigation : {}),
              })
            : !1 === E.navigation && delete E.navigation,
          E.scrollbar
            ? (E.scrollbar = {
                el: ".swiper-scrollbar",
                ...(!0 !== E.scrollbar ? E.scrollbar : {}),
              })
            : !1 === E.scrollbar && delete E.scrollbar,
          E.pagination
            ? (E.pagination = {
                el: ".swiper-pagination",
                ...(!0 !== E.pagination ? E.pagination : {}),
              })
            : !1 === E.pagination && delete E.pagination,
          { params: E, passedParams: A }
        );
      }
      const xi =
          ":host{--swiper-theme-color:#007aff}:host{position:relative;display:block;margin-left:auto;margin-right:auto;z-index:1}.swiper{width:100%;height:100%;margin-left:auto;margin-right:auto;position:relative;overflow:hidden;list-style:none;padding:0;z-index:1;display:block}.swiper-vertical>.swiper-wrapper{flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:flex;transition-property:transform;transition-timing-function:var(--swiper-wrapper-transition-timing-function,initial);box-sizing:content-box}.swiper-android ::slotted(swiper-slide),.swiper-ios ::slotted(swiper-slide),.swiper-wrapper{transform:translate3d(0px,0,0)}.swiper-horizontal{touch-action:pan-y}.swiper-vertical{touch-action:pan-x}::slotted(swiper-slide){flex-shrink:0;width:100%;height:100%;position:relative;transition-property:transform;display:block}::slotted(.swiper-slide-invisible-blank){visibility:hidden}.swiper-autoheight,.swiper-autoheight ::slotted(swiper-slide){height:auto}.swiper-autoheight .swiper-wrapper{align-items:flex-start;transition-property:transform,height}.swiper-backface-hidden ::slotted(swiper-slide){transform:translateZ(0);-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-3d.swiper-css-mode .swiper-wrapper{perspective:1200px}.swiper-3d .swiper-wrapper{transform-style:preserve-3d}.swiper-3d{perspective:1200px}.swiper-3d .swiper-cube-shadow,.swiper-3d ::slotted(swiper-slide){transform-style:preserve-3d}.swiper-css-mode>.swiper-wrapper{overflow:auto;scrollbar-width:none;-ms-overflow-style:none}.swiper-css-mode>.swiper-wrapper::-webkit-scrollbar{display:none}.swiper-css-mode ::slotted(swiper-slide){scroll-snap-align:start start}.swiper-css-mode.swiper-horizontal>.swiper-wrapper{scroll-snap-type:x mandatory}.swiper-css-mode.swiper-vertical>.swiper-wrapper{scroll-snap-type:y mandatory}.swiper-css-mode.swiper-free-mode>.swiper-wrapper{scroll-snap-type:none}.swiper-css-mode.swiper-free-mode ::slotted(swiper-slide){scroll-snap-align:none}.swiper-css-mode.swiper-centered>.swiper-wrapper::before{content:'';flex-shrink:0;order:9999}.swiper-css-mode.swiper-centered ::slotted(swiper-slide){scroll-snap-align:center center;scroll-snap-stop:always}.swiper-css-mode.swiper-centered.swiper-horizontal ::slotted(swiper-slide):first-child{margin-inline-start:var(--swiper-centered-offset-before)}.swiper-css-mode.swiper-centered.swiper-horizontal>.swiper-wrapper::before{height:100%;min-height:1px;width:var(--swiper-centered-offset-after)}.swiper-css-mode.swiper-centered.swiper-vertical ::slotted(swiper-slide):first-child{margin-block-start:var(--swiper-centered-offset-before)}.swiper-css-mode.swiper-centered.swiper-vertical>.swiper-wrapper::before{width:100%;min-width:1px;height:var(--swiper-centered-offset-after)}.swiper-virtual ::slotted(swiper-slide){-webkit-backface-visibility:hidden;transform:translateZ(0)}.swiper-virtual.swiper-css-mode .swiper-wrapper::after{content:'';position:absolute;left:0;top:0;pointer-events:none}.swiper-virtual.swiper-css-mode.swiper-horizontal .swiper-wrapper::after{height:1px;width:var(--swiper-virtual-size)}.swiper-virtual.swiper-css-mode.swiper-vertical .swiper-wrapper::after{width:1px;height:var(--swiper-virtual-size)}:host{--swiper-navigation-size:44px}.swiper-button-next,.swiper-button-prev{position:absolute;top:var(--swiper-navigation-top-offset,50%);width:calc(var(--swiper-navigation-size)/ 44 * 27);height:var(--swiper-navigation-size);margin-top:calc(0px - (var(--swiper-navigation-size)/ 2));z-index:10;cursor:pointer;display:flex;align-items:center;justify-content:center;color:var(--swiper-navigation-color,var(--swiper-theme-color))}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-next.swiper-button-hidden,.swiper-button-prev.swiper-button-hidden{opacity:0;cursor:auto;pointer-events:none}.swiper-navigation-disabled .swiper-button-next,.swiper-navigation-disabled .swiper-button-prev{display:none!important}.swiper-button-next svg,.swiper-button-prev svg{width:100%;height:100%;object-fit:contain;transform-origin:center}.swiper-rtl .swiper-button-next svg,.swiper-rtl .swiper-button-prev svg{transform:rotate(180deg)}.swiper-button-prev,.swiper-rtl .swiper-button-next{left:var(--swiper-navigation-sides-offset,10px);right:auto}.swiper-button-next,.swiper-rtl .swiper-button-prev{right:var(--swiper-navigation-sides-offset,10px);left:auto}.swiper-button-lock{display:none}.swiper-pagination{position:absolute;text-align:center;transition:.3s opacity;transform:translate3d(0,0,0);z-index:10}.swiper-pagination.swiper-pagination-hidden{opacity:0}.swiper-pagination-disabled>.swiper-pagination,.swiper-pagination.swiper-pagination-disabled{display:none!important}.swiper-horizontal>.swiper-pagination-bullets,.swiper-pagination-bullets.swiper-pagination-horizontal,.swiper-pagination-custom,.swiper-pagination-fraction{bottom:var(--swiper-pagination-bottom,8px);top:var(--swiper-pagination-top,auto);left:0;width:100%}.swiper-pagination-bullets-dynamic{overflow:hidden;font-size:0}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{transform:scale(.33);position:relative}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active{transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main{transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev{transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev{transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next{transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next{transform:scale(.33)}.swiper-pagination-bullet{width:var(--swiper-pagination-bullet-width,var(--swiper-pagination-bullet-size,8px));height:var(--swiper-pagination-bullet-height,var(--swiper-pagination-bullet-size,8px));display:inline-block;border-radius:var(--swiper-pagination-bullet-border-radius,50%);background:var(--swiper-pagination-bullet-inactive-color,#000);opacity:var(--swiper-pagination-bullet-inactive-opacity, .2)}button.swiper-pagination-bullet{border:none;margin:0;padding:0;box-shadow:none;-webkit-appearance:none;appearance:none}.swiper-pagination-clickable .swiper-pagination-bullet{cursor:pointer}.swiper-pagination-bullet:only-child{display:none!important}.swiper-pagination-bullet-active{opacity:var(--swiper-pagination-bullet-opacity, 1);background:var(--swiper-pagination-color,var(--swiper-theme-color))}.swiper-pagination-vertical.swiper-pagination-bullets,.swiper-vertical>.swiper-pagination-bullets{right:var(--swiper-pagination-right,8px);left:var(--swiper-pagination-left,auto);top:50%;transform:translate3d(0px,-50%,0)}.swiper-pagination-vertical.swiper-pagination-bullets .swiper-pagination-bullet,.swiper-vertical>.swiper-pagination-bullets .swiper-pagination-bullet{margin:var(--swiper-pagination-bullet-vertical-gap,6px) 0;display:block}.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic,.swiper-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{top:50%;transform:translateY(-50%);width:8px}.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,.swiper-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{display:inline-block;transition:.2s transform,.2s top}.swiper-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet,.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet{margin:0 var(--swiper-pagination-bullet-horizontal-gap,4px)}.swiper-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic,.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{left:50%;transform:translateX(-50%);white-space:nowrap}.swiper-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{transition:.2s transform,.2s left}.swiper-horizontal.swiper-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{transition:.2s transform,.2s right}.swiper-pagination-fraction{color:var(--swiper-pagination-fraction-color,inherit)}.swiper-pagination-progressbar{background:var(--swiper-pagination-progressbar-bg-color,rgba(0,0,0,.25));position:absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill{background:var(--swiper-pagination-color,var(--swiper-theme-color));position:absolute;left:0;top:0;width:100%;height:100%;transform:scale(0);transform-origin:left top}.swiper-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill{transform-origin:right top}.swiper-horizontal>.swiper-pagination-progressbar,.swiper-pagination-progressbar.swiper-pagination-horizontal,.swiper-pagination-progressbar.swiper-pagination-vertical.swiper-pagination-progressbar-opposite,.swiper-vertical>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite{width:100%;height:var(--swiper-pagination-progressbar-size,4px);left:0;top:0}.swiper-horizontal>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,.swiper-pagination-progressbar.swiper-pagination-horizontal.swiper-pagination-progressbar-opposite,.swiper-pagination-progressbar.swiper-pagination-vertical,.swiper-vertical>.swiper-pagination-progressbar{width:var(--swiper-pagination-progressbar-size,4px);height:100%;left:0;top:0}.swiper-pagination-lock{display:none}.swiper-scrollbar{border-radius:var(--swiper-scrollbar-border-radius,10px);position:relative;touch-action:none;background:var(--swiper-scrollbar-bg-color,rgba(0,0,0,.1))}.swiper-scrollbar-disabled>.swiper-scrollbar,.swiper-scrollbar.swiper-scrollbar-disabled{display:none!important}.swiper-horizontal>.swiper-scrollbar,.swiper-scrollbar.swiper-scrollbar-horizontal{position:absolute;left:var(--swiper-scrollbar-sides-offset,1%);bottom:var(--swiper-scrollbar-bottom,4px);top:var(--swiper-scrollbar-top,auto);z-index:50;height:var(--swiper-scrollbar-size,4px);width:calc(100% - 2 * var(--swiper-scrollbar-sides-offset,1%))}.swiper-scrollbar.swiper-scrollbar-vertical,.swiper-vertical>.swiper-scrollbar{position:absolute;left:var(--swiper-scrollbar-left,auto);right:var(--swiper-scrollbar-right,4px);top:var(--swiper-scrollbar-sides-offset,1%);z-index:50;width:var(--swiper-scrollbar-size,4px);height:calc(100% - 2 * var(--swiper-scrollbar-sides-offset,1%))}.swiper-scrollbar-drag{height:100%;width:100%;position:relative;background:var(--swiper-scrollbar-drag-bg-color,rgba(0,0,0,.5));border-radius:var(--swiper-scrollbar-border-radius,10px);left:0;top:0}.swiper-scrollbar-cursor-drag{cursor:move}.swiper-scrollbar-lock{display:none}::slotted(.swiper-slide-zoomed){cursor:move;touch-action:none}.swiper .swiper-notification{position:absolute;left:0;top:0;pointer-events:none;opacity:0;z-index:-1000}.swiper-free-mode>.swiper-wrapper{transition-timing-function:ease-out;margin:0 auto}.swiper-grid>.swiper-wrapper{flex-wrap:wrap}.swiper-grid-column>.swiper-wrapper{flex-wrap:wrap;flex-direction:column}.swiper-fade.swiper-free-mode ::slotted(swiper-slide){transition-timing-function:ease-out}.swiper-fade ::slotted(swiper-slide){pointer-events:none;transition-property:opacity}.swiper-fade ::slotted(swiper-slide) ::slotted(swiper-slide){pointer-events:none}.swiper-fade ::slotted(.swiper-slide-active){pointer-events:auto}.swiper-fade ::slotted(.swiper-slide-active) ::slotted(.swiper-slide-active){pointer-events:auto}.swiper-cube{overflow:visible}.swiper-cube ::slotted(swiper-slide){pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1;visibility:hidden;transform-origin:0 0;width:100%;height:100%}.swiper-cube ::slotted(swiper-slide) ::slotted(swiper-slide){pointer-events:none}.swiper-cube.swiper-rtl ::slotted(swiper-slide){transform-origin:100% 0}.swiper-cube ::slotted(.swiper-slide-active),.swiper-cube ::slotted(.swiper-slide-active) ::slotted(.swiper-slide-active){pointer-events:auto}.swiper-cube ::slotted(.swiper-slide-active),.swiper-cube ::slotted(.swiper-slide-next),.swiper-cube ::slotted(.swiper-slide-prev){pointer-events:auto;visibility:visible}.swiper-cube .swiper-cube-shadow{position:absolute;left:0;bottom:0px;width:100%;height:100%;opacity:.6;z-index:0}.swiper-cube .swiper-cube-shadow:before{content:'';background:#000;position:absolute;left:0;top:0;bottom:0;right:0;filter:blur(50px)}.swiper-cube ::slotted(.swiper-slide-next)+::slotted(swiper-slide){pointer-events:auto;visibility:visible}.swiper-flip{overflow:visible}.swiper-flip ::slotted(swiper-slide){pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1}.swiper-flip ::slotted(swiper-slide) ::slotted(swiper-slide){pointer-events:none}.swiper-flip ::slotted(.swiper-slide-active),.swiper-flip ::slotted(.swiper-slide-active) ::slotted(.swiper-slide-active){pointer-events:auto}.swiper-creative ::slotted(swiper-slide){-webkit-backface-visibility:hidden;backface-visibility:hidden;overflow:hidden;transition-property:transform,opacity,height}.swiper-cards{overflow:visible}.swiper-cards ::slotted(swiper-slide){transform-origin:center bottom;-webkit-backface-visibility:hidden;backface-visibility:hidden;overflow:hidden}",
        ts =
          typeof window > "u" || typeof HTMLElement > "u"
            ? class $r {}
            : HTMLElement,
        si =
          '<svg width="11" height="20" viewBox="0 0 11 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.38296 20.0762C0.111788 19.805 0.111788 19.3654 0.38296 19.0942L9.19758 10.2796L0.38296 1.46497C0.111788 1.19379 0.111788 0.754138 0.38296 0.482966C0.654131 0.211794 1.09379 0.211794 1.36496 0.482966L10.4341 9.55214C10.8359 9.9539 10.8359 10.6053 10.4341 11.007L1.36496 20.0762C1.09379 20.3474 0.654131 20.3474 0.38296 20.0762Z" fill="currentColor"/></svg>\n    ',
        Gn = (w, i) => {
          if (typeof CSSStyleSheet < "u" && w.adoptedStyleSheets) {
            const _ = new CSSStyleSheet();
            _.replaceSync(i), (w.adoptedStyleSheets = [_]);
          } else {
            const _ = document.createElement("style");
            (_.rel = "stylesheet"), (_.textContent = i), w.appendChild(_);
          }
        };
      class Xr extends ts {
        constructor() {
          super(), this.attachShadow({ mode: "open" });
        }
        static get nextButtonSvg() {
          return si;
        }
        static get prevButtonSvg() {
          return si.replace(
            "/></svg>",
            ' transform-origin="center" transform="rotate(180)"/></svg>'
          );
        }
        cssStyles() {
          return [
            xi,
            ...(this.injectStyles && Array.isArray(this.injectStyles)
              ? this.injectStyles
              : []),
          ].join("\n");
        }
        cssLinks() {
          return this.injectStylesUrls || [];
        }
        calcSlideSlots() {
          const i = this.slideSlots || 0,
            _ = [...this.querySelectorAll("[slot^=slide-]")].map((E) =>
              parseInt(E.getAttribute("slot").split("slide-")[1], 10)
            );
          if (
            ((this.slideSlots = _.length ? Math.max(..._) + 1 : 0),
            this.rendered)
          )
            if (this.slideSlots > i)
              for (let E = i; E < this.slideSlots; E += 1) {
                const A = document.createElement("swiper-slide");
                A.setAttribute("part", `slide slide-${E + 1}`);
                const I = document.createElement("slot");
                I.setAttribute("name", `slide-${E + 1}`),
                  A.appendChild(I),
                  this.shadowRoot
                    .querySelector(".swiper-wrapper")
                    .appendChild(A);
              }
            else if (this.slideSlots < i) {
              const E = this.swiper.slides;
              for (let A = E.length - 1; A >= 0; A -= 1)
                A > this.slideSlots && E[A].remove();
            }
        }
        render() {
          if (this.rendered) return;
          this.calcSlideSlots();
          let i = this.cssStyles();
          this.slideSlots > 0 &&
            (i = i.replace(/::slotted\(([a-z-0-9.]*)\)/g, "$1")),
            i.length && Gn(this.shadowRoot, i),
            this.cssLinks().forEach((E) => {
              if (this.shadowRoot.querySelector(`link[href="${E}"]`)) return;
              const I = document.createElement("link");
              (I.rel = "stylesheet"),
                (I.href = E),
                this.shadowRoot.appendChild(I);
            });
          const _ = document.createElement("div");
          _.classList.add("swiper"),
            (_.part = "container"),
            (_.innerHTML = `\n      <slot name="container-start"></slot>\n      <div class="swiper-wrapper" part="wrapper">\n        <slot></slot>\n        ${Array.from(
              { length: this.slideSlots }
            )
              .map(
                (E, A) =>
                  `\n        <swiper-slide part="slide slide-${A}">\n          <slot name="slide-${A}"></slot>\n        </swiper-slide>\n        `
              )
              .join(
                ""
              )}\n      </div>\n      <slot name="container-end"></slot>\n      ${
              (function Cn(w) {
                return (
                  void 0 === w && (w = {}),
                  w.navigation &&
                    typeof w.navigation.nextEl > "u" &&
                    typeof w.navigation.prevEl > "u"
                );
              })(this.passedParams)
                ? `\n        <div part="button-prev" class="swiper-button-prev">${this.constructor.prevButtonSvg}</div>\n        <div part="button-next" class="swiper-button-next">${this.constructor.nextButtonSvg}</div>\n      `
                : ""
            }\n      ${
              (function Rt(w) {
                return (
                  void 0 === w && (w = {}),
                  w.pagination && typeof w.pagination.el > "u"
                );
              })(this.passedParams)
                ? '\n        <div part="pagination" class="swiper-pagination"></div>\n      '
                : ""
            }\n      ${
              (function Qt(w) {
                return (
                  void 0 === w && (w = {}),
                  w.scrollbar && typeof w.scrollbar.el > "u"
                );
              })(this.passedParams)
                ? '\n        <div part="scrollbar" class="swiper-scrollbar"></div>\n      '
                : ""
            }\n    `),
            this.shadowRoot.appendChild(_),
            (this.rendered = !0);
        }
        initialize() {
          var i = this;
          if (this.initialized) return;
          this.initialized = !0;
          const { params: _, passedParams: E } = Kr(this);
          (this.swiperParams = _),
            (this.passedParams = E),
            delete this.swiperParams.init,
            this.render(),
            (this.swiper = new Mr(this.shadowRoot.querySelector(".swiper"), {
              ...(_.virtual
                ? {}
                : { observer: !0, observeSlideChildren: this.slideSlots > 0 }),
              ..._,
              touchEventsTarget: "container",
              onAny: function (A) {
                "observerUpdate" === A && i.calcSlideSlots();
                const I = _.eventsPrefix
                  ? `${_.eventsPrefix}${A.toLowerCase()}`
                  : A.toLowerCase();
                for (
                  var U = arguments.length,
                    j = new Array(U > 1 ? U - 1 : 0),
                    P = 1;
                  P < U;
                  P++
                )
                  j[P - 1] = arguments[P];
                const G = new CustomEvent(I, {
                  detail: j,
                  bubbles: "hashChange" !== A,
                  cancelable: !0,
                });
                i.dispatchEvent(G);
              },
            }));
        }
        connectedCallback() {
          (this.initialized &&
            this.nested &&
            this.closest("swiper-slide") &&
            this.closest("swiper-slide").swiperLoopMoveDOM) ||
            !1 === this.init ||
            "false" === this.getAttribute("init") ||
            this.initialize();
        }
        disconnectedCallback() {
          (this.nested &&
            this.closest("swiper-slide") &&
            this.closest("swiper-slide").swiperLoopMoveDOM) ||
            (this.swiper && this.swiper.destroy && this.swiper.destroy(),
            (this.initialized = !1));
        }
        updateSwiperOnPropChange(i, _) {
          const { params: E, passedParams: A } = Kr(this, i, _);
          (this.passedParams = A),
            (this.swiperParams = E),
            (!this.swiper || this.swiper.params[i] !== _) &&
              (function mr(w) {
                let {
                  swiper: i,
                  slides: _,
                  passedParams: E,
                  changedParams: A,
                  nextEl: I,
                  prevEl: U,
                  scrollbarEl: j,
                  paginationEl: P,
                } = w;
                const G = A.filter(
                    (We) =>
                      "children" !== We &&
                      "direction" !== We &&
                      "wrapperClass" !== We
                  ),
                  {
                    params: k,
                    pagination: h,
                    navigation: b,
                    scrollbar: p,
                    virtual: T,
                    thumbs: R,
                  } = i;
                let Y, te, X, Z, fe, nt, Je, _t;
                A.includes("thumbs") &&
                  E.thumbs &&
                  E.thumbs.swiper &&
                  k.thumbs &&
                  !k.thumbs.swiper &&
                  (Y = !0),
                  A.includes("controller") &&
                    E.controller &&
                    E.controller.control &&
                    k.controller &&
                    !k.controller.control &&
                    (te = !0),
                  A.includes("pagination") &&
                    E.pagination &&
                    (E.pagination.el || P) &&
                    (k.pagination || !1 === k.pagination) &&
                    h &&
                    !h.el &&
                    (X = !0),
                  A.includes("scrollbar") &&
                    E.scrollbar &&
                    (E.scrollbar.el || j) &&
                    (k.scrollbar || !1 === k.scrollbar) &&
                    p &&
                    !p.el &&
                    (Z = !0),
                  A.includes("navigation") &&
                    E.navigation &&
                    (E.navigation.prevEl || U) &&
                    (E.navigation.nextEl || I) &&
                    (k.navigation || !1 === k.navigation) &&
                    b &&
                    !b.prevEl &&
                    !b.nextEl &&
                    (fe = !0);
                const ct = (We) => {
                  i[We] &&
                    (i[We].destroy(),
                    "navigation" === We
                      ? (i.isElement &&
                          (i[We].prevEl.remove(), i[We].nextEl.remove()),
                        (k[We].prevEl = void 0),
                        (k[We].nextEl = void 0),
                        (i[We].prevEl = void 0),
                        (i[We].nextEl = void 0))
                      : (i.isElement && i[We].el.remove(),
                        (k[We].el = void 0),
                        (i[We].el = void 0)));
                };
                A.includes("loop") &&
                  i.isElement &&
                  (k.loop && !E.loop
                    ? (nt = !0)
                    : !k.loop && E.loop
                    ? (Je = !0)
                    : (_t = !0)),
                  G.forEach((We) => {
                    if (Zr(k[We]) && Zr(E[We]))
                      Object.assign(k[We], E[We]),
                        ("navigation" === We ||
                          "pagination" === We ||
                          "scrollbar" === We) &&
                          "enabled" in E[We] &&
                          !E[We].enabled &&
                          ct(We);
                    else {
                      const Ze = E[We];
                      (!0 !== Ze && !1 !== Ze) ||
                      ("navigation" !== We &&
                        "pagination" !== We &&
                        "scrollbar" !== We)
                        ? (k[We] = E[We])
                        : !1 === Ze && ct(We);
                    }
                  }),
                  G.includes("controller") &&
                    !te &&
                    i.controller &&
                    i.controller.control &&
                    k.controller &&
                    k.controller.control &&
                    (i.controller.control = k.controller.control),
                  A.includes("children") && _ && T && k.virtual.enabled
                    ? ((T.slides = _), T.update(!0))
                    : A.includes("virtual") &&
                      T &&
                      k.virtual.enabled &&
                      (_ && (T.slides = _), T.update(!0)),
                  A.includes("children") && _ && k.loop && (_t = !0),
                  Y && R.init() && R.update(!0),
                  te && (i.controller.control = k.controller.control),
                  X &&
                    (i.isElement &&
                      (!P || "string" == typeof P) &&
                      ((P = document.createElement("div")),
                      P.classList.add("swiper-pagination"),
                      P.part.add("pagination"),
                      i.el.appendChild(P)),
                    P && (k.pagination.el = P),
                    h.init(),
                    h.render(),
                    h.update()),
                  Z &&
                    (i.isElement &&
                      (!j || "string" == typeof j) &&
                      ((j = document.createElement("div")),
                      j.classList.add("swiper-scrollbar"),
                      j.part.add("scrollbar"),
                      i.el.appendChild(j)),
                    j && (k.scrollbar.el = j),
                    p.init(),
                    p.updateSize(),
                    p.setTranslate()),
                  fe &&
                    (i.isElement &&
                      ((!I || "string" == typeof I) &&
                        ((I = document.createElement("div")),
                        I.classList.add("swiper-button-next"),
                        (I.innerHTML = i.hostEl.constructor.nextButtonSvg),
                        I.part.add("button-next"),
                        i.el.appendChild(I)),
                      (!U || "string" == typeof U) &&
                        ((U = document.createElement("div")),
                        U.classList.add("swiper-button-prev"),
                        (U.innerHTML = i.hostEl.constructor.prevButtonSvg),
                        U.part.add("button-prev"),
                        i.el.appendChild(U))),
                    I && (k.navigation.nextEl = I),
                    U && (k.navigation.prevEl = U),
                    b.init(),
                    b.update()),
                  A.includes("allowSlideNext") &&
                    (i.allowSlideNext = E.allowSlideNext),
                  A.includes("allowSlidePrev") &&
                    (i.allowSlidePrev = E.allowSlidePrev),
                  A.includes("direction") && i.changeDirection(E.direction, !1),
                  (nt || _t) && i.loopDestroy(),
                  (Je || _t) && i.loopCreate(),
                  i.update();
              })({
                swiper: this.swiper,
                passedParams: this.passedParams,
                changedParams: [br(i)],
                ...("navigation" === i && A[i]
                  ? {
                      prevEl: ".swiper-button-prev",
                      nextEl: ".swiper-button-next",
                    }
                  : {}),
                ...("pagination" === i && A[i]
                  ? { paginationEl: ".swiper-pagination" }
                  : {}),
                ...("scrollbar" === i && A[i]
                  ? { scrollbarEl: ".swiper-scrollbar" }
                  : {}),
              });
        }
        attributeChangedCallback(i, _, E) {
          this.initialized &&
            ("true" === _ && null === E && (E = !1),
            this.updateSwiperOnPropChange(i, E));
        }
        static get observedAttributes() {
          return Fr.filter((_) => _.includes("_")).map((_) =>
            _.replace(/[A-Z]/g, (E) => `-${E}`)
              .replace("_", "")
              .toLowerCase()
          );
        }
      }
      Fr.forEach((w) => {
        "init" !== w &&
          ((w = w.replace("_", "")),
          Object.defineProperty(Xr.prototype, w, {
            configurable: !0,
            get() {
              return (this.passedParams || {})[w];
            },
            set(i) {
              this.passedParams || (this.passedParams = {}),
                (this.passedParams[w] = i),
                this.initialized && this.updateSwiperOnPropChange(w, i);
            },
          }));
      });
      class Hr extends ts {
        constructor() {
          super(), this.attachShadow({ mode: "open" });
        }
        render() {
          const i =
            this.lazy ||
            "" === this.getAttribute("lazy") ||
            "true" === this.getAttribute("lazy");
          if (
            (Gn(
              this.shadowRoot,
              "::slotted(.swiper-slide-shadow),::slotted(.swiper-slide-shadow-bottom),::slotted(.swiper-slide-shadow-left),::slotted(.swiper-slide-shadow-right),::slotted(.swiper-slide-shadow-top){position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}::slotted(.swiper-slide-shadow){background:rgba(0,0,0,.15)}::slotted(.swiper-slide-shadow-left){background-image:linear-gradient(to left,rgba(0,0,0,.5),rgba(0,0,0,0))}::slotted(.swiper-slide-shadow-right){background-image:linear-gradient(to right,rgba(0,0,0,.5),rgba(0,0,0,0))}::slotted(.swiper-slide-shadow-top){background-image:linear-gradient(to top,rgba(0,0,0,.5),rgba(0,0,0,0))}::slotted(.swiper-slide-shadow-bottom){background-image:linear-gradient(to bottom,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-lazy-preloader{animation:swiper-preloader-spin 1s infinite linear;width:42px;height:42px;position:absolute;left:50%;top:50%;margin-left:-21px;margin-top:-21px;z-index:10;transform-origin:50%;box-sizing:border-box;border:4px solid var(--swiper-preloader-color,var(--swiper-theme-color));border-radius:50%;border-top-color:transparent}@keyframes swiper-preloader-spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}::slotted(.swiper-slide-shadow-cube.swiper-slide-shadow-bottom),::slotted(.swiper-slide-shadow-cube.swiper-slide-shadow-left),::slotted(.swiper-slide-shadow-cube.swiper-slide-shadow-right),::slotted(.swiper-slide-shadow-cube.swiper-slide-shadow-top){z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}::slotted(.swiper-slide-shadow-flip.swiper-slide-shadow-bottom),::slotted(.swiper-slide-shadow-flip.swiper-slide-shadow-left),::slotted(.swiper-slide-shadow-flip.swiper-slide-shadow-right),::slotted(.swiper-slide-shadow-flip.swiper-slide-shadow-top){z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}::slotted(.swiper-zoom-container){width:100%;height:100%;display:flex;justify-content:center;align-items:center;text-align:center}::slotted(.swiper-zoom-container)>canvas,::slotted(.swiper-zoom-container)>img,::slotted(.swiper-zoom-container)>svg{max-width:100%;max-height:100%;object-fit:contain}"
            ),
            this.shadowRoot.appendChild(document.createElement("slot")),
            i)
          ) {
            const _ = document.createElement("div");
            _.classList.add("swiper-lazy-preloader"),
              _.part.add("preloader"),
              this.shadowRoot.appendChild(_);
          }
        }
        initialize() {
          this.render();
        }
        connectedCallback() {
          this.initialize();
        }
      }
      typeof window < "u" &&
        (window.SwiperElementRegisterParams = (w) => {
          Fr.push(...w);
        }),
        N(513),
        N(9926);
      var Nn = N(4769);
      N(2341), N(2123), N(6133), N(7624);
      var Jr = N(2051),
        oi = (N(7234), N(9877), N(8672));
      const ks = [l.ez, L.Bz, we.u5, Re.bB, we.UX, xe.mr, Jr.zk, oi.ef];
      let Xn = (() => {
        class w {
          constructor() {
            typeof window > "u" ||
              (window.customElements.get("swiper-container") ||
                window.customElements.define("swiper-container", Xr),
              window.customElements.get("swiper-slide") ||
                window.customElements.define("swiper-slide", Hr));
          }
          static #e = (this.ɵfac = function (E) {
            return new (E || w)();
          });
          static #t = (this.ɵmod = Nn.oAB({ type: w }));
          static #n = (this.ɵinj = Nn.cJS({
            imports: [
              ks,
              Jr.zk.forRoot(),
              l.ez,
              L.Bz,
              we.u5,
              Re.bB,
              we.UX,
              xe.mr,
              Jr.zk,
              oi.ef,
            ],
          }));
        }
        return w;
      })();
    },
    553: (Lt, Fe, N) => {
      N.d(Fe, { N: () => l });
      const l = { production: !1, apiBaseUrl: "https://api.npoint.io" };
    },
    4491: (Lt, Fe, N) => {
      var l = N(6593),
        L = N(7553),
        B = N(4769),
        Me = N(2490);
      const _e = function () {
        return ["/"];
      };
      let we = (() => {
        class F {
          constructor() {
            this.noPageUrl = "assets/Fe-kit/images/not-found.png";
          }
          static #e = (this.ɵfac = function (d) {
            return new (d || F)();
          });
          static #t = (this.ɵcmp = B.Xpm({
            type: F,
            selectors: [["app-page-not-found"]],
            decls: 9,
            vars: 6,
            consts: [
              [1, "section-page-not-found"],
              [1, "text-container"],
              ["alt", "404 logo", 1, "not-found-image", 3, "src"],
              [1, "not-found-title"],
              [1, "not-found-content"],
              [1, "button-container"],
              [
                3,
                "className",
                "buttonLabel",
                "buttonTitleClassName",
                "routerLink",
              ],
            ],
            template: function (d, g) {
              1 & d &&
                (B.TgZ(0, "section", 0)(1, "div", 1),
                B._UZ(2, "img", 2),
                B.TgZ(3, "p", 3),
                B._uU(4, "Page Not Found"),
                B.qZA(),
                B.TgZ(5, "p", 4),
                B._uU(6, "The Page you requested could not be Found"),
                B.qZA(),
                B.TgZ(7, "div", 5),
                B._UZ(8, "app-button", 6),
                B.qZA()()()),
                2 & d &&
                  (B.xp6(2),
                  B.Q6J("src", g.noPageUrl, B.LSH),
                  B.xp6(6),
                  B.Q6J("className", "secondary")("buttonLabel", "Back Home")(
                    "buttonTitleClassName",
                    "not-found-button-text"
                  )("routerLink", B.DdM(5, _e)));
            },
            dependencies: [Me.r, L.rH],
          }));
        }
        return F;
      })();
      var Ie = N(5879);
      const Re = (F, a) => {
          const u = (0, B.f3M)(L.F0);
          return (
            (0, B.f3M)(Ie.I).isLoggedIn() ||
              u.navigate(["login"], { queryParams: { returnURL: a.url } }),
            !0
          );
        },
        ge = [
          {
            path: "",
            loadChildren: () =>
              Promise.all([N.e(592), N.e(977)])
                .then(N.bind(N, 977))
                .then((F) => F.HomeModule),
          },
          {
            path: "news",
            loadChildren: () =>
              Promise.all([N.e(592), N.e(902)])
                .then(N.bind(N, 8902))
                .then((F) => F.NewsModule),
          },
          {
            path: "courses",
            canActivate: [Re],
            loadChildren: () =>
              Promise.all([N.e(592), N.e(817)])
                .then(N.bind(N, 3817))
                .then((F) => F.CoursesModule),
          },
          {
            path: "virtual-program",
            canActivate: [Re],
            loadChildren: () =>
              Promise.all([N.e(592), N.e(361)])
                .then(N.bind(N, 7361))
                .then((F) => F.DepartmentsModule),
          },
          {
            path: "",
            canActivate: [(F, a) => !(0, B.f3M)(Ie.I).isLoggedIn()],
            loadChildren: () =>
              N.e(468)
                .then(N.bind(N, 6468))
                .then((F) => F.AuthenticationModule),
          },
          { path: "error", component: N(8502).P },
          { path: "**", redirectTo: "404", pathMatch: "full" },
          { path: "404", component: we },
        ];
      let Be = (() => {
        class F {
          static #e = (this.ɵfac = function (d) {
            return new (d || F)();
          });
          static #t = (this.ɵmod = B.oAB({ type: F }));
          static #n = (this.ɵinj = B.cJS({
            imports: [
              L.Bz.forRoot(ge, { scrollPositionRestoration: "enabled" }),
              L.Bz,
            ],
          }));
        }
        return F;
      })();
      const et = {
        news: {
          title: "News Listing",
          breadcrumb: [{ label: "News Listing", url: "" }],
          isViewSearch: !0,
        },
        "news/": {
          title: "News Details",
          breadcrumb: [
            { label: "News Listing", url: "/news" },
            { label: "News Details", url: "" },
          ],
          isViewSearch: !1,
        },
        courses: {
          title: "Internship Courses",
          breadcrumb: "Home Internship Courses Listing",
          isViewSearch: !0,
        },
        "virtual-program": {
          title: "Virtual Program",
          breadcrumb: [{ label: "Virtual Program", url: "" }],
          isViewSearch: !1,
        },
        "virtual-program/": {
          title: "Virtual Program",
          breadcrumb: [
            { label: "Virtual Program", url: "/virtual-program" },
            { label: "", url: "" },
          ],
          isViewSearch: !1,
        },
      };
      var Ye = N(6814),
        ot = N(557),
        pt = N(9926),
        Ue = N(95);
      function st(F, a) {
        if (1 & F) {
          const u = B.EpF();
          B.TgZ(0, "button", 20),
            B.NdJ("click", function () {
              B.CHM(u);
              const g = B.oxw();
              return B.KtG(g.handleScroll());
            }),
            B.TgZ(1, "p", 21),
            B._uU(2, "Back to top"),
            B.qZA(),
            B._UZ(3, "img", 22),
            B.qZA();
        }
      }
      function It(F, a) {
        1 & F && B._UZ(0, "img", 17);
      }
      function $e(F, a) {
        if (
          (1 & F &&
            (B.TgZ(0, "a")(1, "span"),
            B._uU(2),
            B.qZA(),
            B.YNc(3, It, 1, 0, "img", 23),
            B.qZA()),
          2 & F)
        ) {
          const u = a.$implicit,
            d = a.index,
            g = B.oxw();
          B.xp6(2),
            B.hij(" ", u.title, " "),
            B.xp6(1),
            B.Q6J("ngIf", d !== g.feeds.length - 1);
        }
      }
      function K(F, a) {
        if ((1 & F && (B.TgZ(0, "a"), B._UZ(1, "img", 24), B.qZA()), 2 & F)) {
          const u = a.$implicit;
          B.xp6(1),
            B.Tol(u.class),
            B.s9C("src", u.logo, B.LSH),
            B.s9C("alt", u.title);
        }
      }
      function Se(F, a) {
        if ((1 & F && (B.TgZ(0, "a"), B._UZ(1, "img", 25), B.qZA()), 2 & F)) {
          const u = a.$implicit;
          B.xp6(1),
            B.s9C("src", u.logo, B.LSH),
            B.s9C("alt", u.title),
            B.s9C("width", u.width),
            B.s9C("height", u.height);
        }
      }
      const J = function () {
        return {
          name: "email",
          type: "email",
          placeholder: "Your email address here",
          required: !0,
        };
      };
      let De = (() => {
        class F {
          constructor(u) {
            (this.router = u),
              (this.viewBackToTopBtn = !1),
              (this.feeds = [
                { title: "IHF President", url: "" },
                { title: "Introduction", url: "" },
                { title: "About Us", url: "" },
                { title: "Announcements", url: "" },
                { title: "Terminology", url: "" },
                { title: "Video Library", url: "" },
              ]),
              (this.socialLinks = [
                {
                  logo: "assets/Fe-kit/svg/facebook.svg",
                  title: "facebook",
                  url: "",
                  class: "facebook-icon",
                },
                {
                  logo: "assets/Fe-kit/svg/twitter.svg",
                  title: "twitter",
                  class: "twitter-icon",
                },
                {
                  logo: "assets/Fe-kit/svg/youtube.svg",
                  title: "youtube",
                  url: "",
                  class: "youtube-icon",
                },
                {
                  logo: "assets/Fe-kit/svg/instagram.svg",
                  title: "instagram",
                  url: "",
                  class: "instagram-icon",
                },
              ]),
              (this.accessibilits = [
                {
                  logo: "assets/Fe-kit/svg/A-plus.svg",
                  title: "A plus",
                  url: "",
                  width: "28",
                  height: "19",
                },
                {
                  logo: "assets/Fe-kit/svg/A-minus.svg",
                  title: "A minus",
                  url: "",
                  width: "24",
                  height: "18",
                },
                {
                  logo: "assets/Fe-kit/svg/color.svg",
                  title: "color",
                  url: "",
                  width: "21",
                  height: "21",
                },
              ]),
              this.router.events.subscribe((d) => {
                d instanceof L.m2 && (this.viewBackToTopBtn = "/" === d.url);
              });
          }
          handleScroll() {
            (0, ot.e)("carousel");
          }
          static #e = (this.ɵfac = function (d) {
            return new (d || F)(B.Y36(L.F0));
          });
          static #t = (this.ɵcmp = B.Xpm({
            type: F,
            selectors: [["app-footer"]],
            decls: 32,
            vars: 8,
            consts: [
              [1, "footer"],
              [1, "footer-wrapper"],
              ["class", "explore-buuton", 3, "click", 4, "ngIf"],
              [1, "row", "justify-content-center"],
              [1, "col-xl-12"],
              [1, "footer-container"],
              [1, "subscribe"],
              ["for", "email"],
              [1, "field-container"],
              [3, "inputProps"],
              [3, "buttonLabel", "className"],
              [1, "feeds"],
              [4, "ngFor", "ngForOf"],
              [1, "feeds-hr"],
              [1, "copyright"],
              [1, "contacts"],
              [1, "social-links"],
              [
                "src",
                "assets/Fe-kit/svg/social-line.svg",
                "alt",
                "line icon",
                1,
                "line",
              ],
              [1, "social-container"],
              [1, "social-links", "access"],
              [1, "explore-buuton", 3, "click"],
              [1, "explore-buuton-text"],
              ["src", "assets/Fe-kit/svg/line.svg", "alt", "line"],
              [
                "src",
                "assets/Fe-kit/svg/social-line.svg",
                "class",
                "line",
                "alt",
                "line icon",
                4,
                "ngIf",
              ],
              [3, "src", "alt"],
              [3, "src", "alt", "width", "height"],
            ],
            template: function (d, g) {
              1 & d &&
                (B.TgZ(0, "footer", 0)(1, "div", 1),
                B.YNc(2, st, 4, 0, "button", 2),
                B.TgZ(3, "div", 3)(4, "div", 4)(5, "div", 5)(6, "div", 6)(
                  7,
                  "form"
                )(8, "label", 7),
                B._uU(9, "Subscribe to our newsletter"),
                B.qZA(),
                B.TgZ(10, "div", 8),
                B._UZ(11, "app-input", 9)(12, "app-button", 10),
                B.qZA()()(),
                B._UZ(13, "hr"),
                B.TgZ(14, "div", 11),
                B.YNc(15, $e, 4, 2, "a", 12),
                B.qZA(),
                B._UZ(16, "hr", 13),
                B.TgZ(17, "p", 14),
                B._uU(18, "All rights reserved \xa9 2023 Link Development"),
                B.qZA(),
                B.TgZ(19, "div", 15)(20, "div", 16)(21, "p"),
                B._uU(22, "Follow us"),
                B.qZA(),
                B._UZ(23, "img", 17),
                B.TgZ(24, "div", 18),
                B.YNc(25, K, 2, 5, "a", 12),
                B.qZA()(),
                B.TgZ(26, "div", 19)(27, "p"),
                B._uU(28, "Accessibility"),
                B.qZA(),
                B._UZ(29, "img", 17),
                B.TgZ(30, "div", 18),
                B.YNc(31, Se, 2, 4, "a", 12),
                B.qZA()()()()()()()()),
                2 & d &&
                  (B.xp6(2),
                  B.Q6J("ngIf", g.viewBackToTopBtn),
                  B.xp6(9),
                  B.Q6J("inputProps", B.DdM(7, J)),
                  B.xp6(1),
                  B.Q6J("buttonLabel", "Subscribe")(
                    "className",
                    "secondaryColor"
                  ),
                  B.xp6(3),
                  B.Q6J("ngForOf", g.feeds),
                  B.xp6(10),
                  B.Q6J("ngForOf", g.socialLinks),
                  B.xp6(6),
                  B.Q6J("ngForOf", g.accessibilits));
            },
            dependencies: [Me.r, pt.a, Ye.sg, Ye.O5, Ue._Y, Ue.JL, Ue.F],
          }));
        }
        return F;
      })();
      var ye = N(6133);
      function me(F, a) {
        if (
          (1 & F && (B.TgZ(0, "li", 20)(1, "a", 18), B._uU(2), B.qZA()()),
          2 & F)
        ) {
          const u = a.$implicit;
          B.xp6(1),
            B.Tol(null != u && u.url ? "" : "active"),
            B.Q6J(
              "routerLink",
              null != u && u.url ? (null == u ? null : u.url) : null
            ),
            B.xp6(1),
            B.hij("", null == u ? null : u.label, " ");
        }
      }
      function dt(F, a) {
        if (
          (1 & F &&
            (B.TgZ(0, "nav", 15)(1, "ol", 16)(2, "li", 17)(3, "a", 18),
            B._uU(4, "Home"),
            B.qZA()(),
            B.YNc(5, me, 3, 4, "li", 19),
            B.qZA()()),
          2 & F)
        ) {
          const u = B.oxw();
          B.Tol(
            (null == u.activePage ? null : u.activePage.isViewSearch) &&
              "breadcrumb-nav"
          ),
            B.xp6(3),
            B.Q6J("routerLink", "/"),
            B.xp6(2),
            B.Q6J("ngForOf", u.activePage.breadcrumb);
        }
      }
      let Ne = (() => {
        class F {
          constructor() {}
          static #e = (this.ɵfac = function (d) {
            return new (d || F)();
          });
          static #t = (this.ɵcmp = B.Xpm({
            type: F,
            selectors: [["app-header"]],
            inputs: { activePage: "activePage" },
            decls: 19,
            vars: 3,
            consts: [
              [1, "image-container"],
              [
                "src",
                "assets/Fe-kit/images/header-banner.png",
                "alt",
                "",
                1,
                "imgFull",
              ],
              [1, "hover"],
              [1, "container", "custom-container"],
              [1, "nav-wrapper"],
              [3, "isViewSearch"],
              [1, "bottom-nav"],
              [1, "title"],
              [1, "options"],
              ["aria-label", "breadcrumb", 3, "class", 4, "ngIf"],
              [1, "share"],
              [
                "src",
                "assets/Fe-kit/svg/facebook.svg",
                "alt",
                "facebook icon",
                1,
                "facebook-icon",
              ],
              [
                "src",
                "assets/Fe-kit/svg/twitter.svg",
                "alt",
                "twitter icon",
                1,
                "twitter-icon",
              ],
              [1, "printer"],
              ["src", "assets/Fe-kit/svg/printer.svg", "alt", "facebook icon"],
              ["aria-label", "breadcrumb"],
              [1, "breadcrumb"],
              [1, "breadcrumb-item"],
              [3, "routerLink"],
              [
                "aria-current",
                "page",
                "class",
                "breadcrumb-item seondary-item",
                4,
                "ngFor",
                "ngForOf",
              ],
              ["aria-current", "page", 1, "breadcrumb-item", "seondary-item"],
            ],
            template: function (d, g) {
              1 & d &&
                (B.TgZ(0, "header")(1, "div", 0),
                B._UZ(2, "img", 1)(3, "div", 2),
                B.qZA(),
                B.TgZ(4, "div", 3)(5, "div", 4),
                B._UZ(6, "app-navbar", 5),
                B.TgZ(7, "div", 6)(8, "h1", 7),
                B._uU(9),
                B.qZA(),
                B.TgZ(10, "div", 8),
                B.YNc(11, dt, 6, 5, "nav", 9),
                B.TgZ(12, "div", 10)(13, "p", 7),
                B._uU(14, "Share this Program"),
                B.qZA(),
                B._UZ(15, "img", 11)(16, "img", 12),
                B.TgZ(17, "div", 13),
                B._UZ(18, "img", 14),
                B.qZA()()()()()()()),
                2 & d &&
                  (B.xp6(6),
                  B.Q6J(
                    "isViewSearch",
                    null == g.activePage ? null : g.activePage.isViewSearch
                  ),
                  B.xp6(3),
                  B.Oqu(null == g.activePage ? null : g.activePage.title),
                  B.xp6(2),
                  B.Q6J(
                    "ngIf",
                    null == g.activePage || null == g.activePage.breadcrumb
                      ? null
                      : g.activePage.breadcrumb.length
                  ));
            },
            dependencies: [ye.S, Ye.sg, Ye.O5, L.rH],
          }));
        }
        return F;
      })();
      var Mt = N(8672);
      function At(F, a) {
        if ((1 & F && B._UZ(0, "app-header", 3), 2 & F)) {
          const u = B.oxw();
          B.Q6J("activePage", u.activePage);
        }
      }
      function Vt(F, a) {
        1 & F && B._UZ(0, "app-footer");
      }
      let In = (() => {
        class F {
          constructor(u) {
            (this.router = u),
              (this.isViewFooter = !0),
              (this.isViewHeader = !0),
              (this.t = ""),
              (this.title = "angular-sessions"),
              this.router.events.subscribe((d) => {
                if (d instanceof L.m2) {
                  d.url.includes("register") ||
                  d.url.includes("login") ||
                  "/" === d.url ||
                  d.urlAfterRedirects.includes("/404") ||
                  d.urlAfterRedirects.includes("/error")
                    ? (("/" !== d.url ||
                        d.urlAfterRedirects.includes("/404") ||
                        d.urlAfterRedirects.includes("/error")) &&
                        (this.isViewFooter = !1),
                      (this.isViewHeader = !1))
                    : ((this.isViewFooter = !0), (this.isViewHeader = !0));
                  let g = d?.url?.replace("/", "").replace(/[0-9]/g, "");
                  if (g) {
                    let M = "";
                    if (g.includes("/")) {
                      g = g.split("/");
                      let H = g;
                      (g = g.length < 2 ? g : g[0] + "/"),
                        (M = H.length > 1 ? H[1] : "");
                    }
                    et[g]
                      ? ((this.activePage = et[g]),
                        this.activePage.breadcrumb.length > 1 &&
                          (this.activePage.breadcrumb[1].label =
                            M || this.activePage.breadcrumb[1].label))
                      : (this.activePage = null);
                  }
                }
              });
          }
          static #e = (this.ɵfac = function (d) {
            return new (d || F)(B.Y36(L.F0));
          });
          static #t = (this.ɵcmp = B.Xpm({
            type: F,
            selectors: [["app-root"]],
            decls: 5,
            vars: 2,
            consts: [
              [3, "activePage", 4, "ngIf"],
              ["type", "ball-scale-multiple"],
              [4, "ngIf"],
              [3, "activePage"],
            ],
            template: function (d, g) {
              1 & d &&
                (B.YNc(0, At, 1, 1, "app-header", 0),
                B.TgZ(1, "main"),
                B._UZ(2, "router-outlet")(3, "ngx-spinner", 1),
                B.qZA(),
                B.YNc(4, Vt, 1, 0, "app-footer", 2)),
                2 & d &&
                  (B.Q6J("ngIf", g.isViewHeader),
                  B.xp6(4),
                  B.Q6J("ngIf", g.isViewFooter));
            },
            dependencies: [Ye.O5, L.lC, De, Ne, Mt.Ro],
          }));
        }
        return F;
      })();
      var qt = N(6825);
      function qe(F) {
        return new B.vHH(3e3, !1);
      }
      function wn(F) {
        switch (F.length) {
          case 0:
            return new qt.ZN();
          case 1:
            return F[0];
          default:
            return new qt.ZE(F);
        }
      }
      function Yr(F, a, u = new Map(), d = new Map()) {
        const g = [],
          M = [];
        let H = -1,
          q = null;
        if (
          (a.forEach((pe) => {
            const ze = pe.get("offset"),
              yt = ze == H,
              wt = (yt && q) || new Map();
            pe.forEach((Ft, Ut) => {
              let xt = Ut,
                jt = Ft;
              if ("offset" !== Ut)
                switch (((xt = F.normalizePropertyName(xt, g)), jt)) {
                  case qt.k1:
                    jt = u.get(Ut);
                    break;
                  case qt.l3:
                    jt = d.get(Ut);
                    break;
                  default:
                    jt = F.normalizeStyleValue(Ut, xt, jt, g);
                }
              wt.set(xt, jt);
            }),
              yt || M.push(wt),
              (q = wt),
              (H = ze);
          }),
          g.length)
        )
          throw (function ar(F) {
            return new B.vHH(3502, !1);
          })();
        return M;
      }
      function wr(F, a, u, d) {
        switch (a) {
          case "start":
            F.onStart(() => d(u && rn(u, "start", F)));
            break;
          case "done":
            F.onDone(() => d(u && rn(u, "done", F)));
            break;
          case "destroy":
            F.onDestroy(() => d(u && rn(u, "destroy", F)));
        }
      }
      function rn(F, a, u) {
        const M = Yn(
            F.element,
            F.triggerName,
            F.fromState,
            F.toState,
            a || F.phaseName,
            u.totalTime ?? F.totalTime,
            !!u.disabled
          ),
          H = F._data;
        return null != H && (M._data = H), M;
      }
      function Yn(F, a, u, d, g = "", M = 0, H) {
        return {
          element: F,
          triggerName: a,
          fromState: u,
          toState: d,
          phaseName: g,
          totalTime: M,
          disabled: !!H,
        };
      }
      function cr(F, a, u) {
        let d = F.get(a);
        return d || F.set(a, (d = u)), d;
      }
      function Cr(F) {
        const a = F.indexOf(":");
        return [F.substring(1, a), F.slice(a + 1)];
      }
      const Tr = (() =>
        typeof document > "u" ? null : document.documentElement)();
      function ur(F) {
        const a = F.parentNode || F.host || null;
        return a === Tr ? null : a;
      }
      let le = null,
        be = !1;
      function ee(F, a) {
        for (; a; ) {
          if (a === F) return !0;
          a = ur(a);
        }
        return !1;
      }
      function Ee(F, a, u) {
        if (u) return Array.from(F.querySelectorAll(a));
        const d = F.querySelector(a);
        return d ? [d] : [];
      }
      let vt = (() => {
          class F {
            validateStyleProperty(u) {
              return (function Q(F) {
                le ||
                  ((le =
                    (function W() {
                      return typeof document < "u" ? document.body : null;
                    })() || {}),
                  (be = !!le.style && "WebkitAppearance" in le.style));
                let a = !0;
                return (
                  le.style &&
                    !(function z(F) {
                      return "ebkit" == F.substring(1, 6);
                    })(F) &&
                    ((a = F in le.style),
                    !a &&
                      be &&
                      (a =
                        "Webkit" + F.charAt(0).toUpperCase() + F.slice(1) in
                        le.style)),
                  a
                );
              })(u);
            }
            matchesElement(u, d) {
              return !1;
            }
            containsElement(u, d) {
              return ee(u, d);
            }
            getParentElement(u) {
              return ur(u);
            }
            query(u, d, g) {
              return Ee(u, d, g);
            }
            computeStyle(u, d, g) {
              return g || "";
            }
            animate(u, d, g, M, H, q = [], pe) {
              return new qt.ZN(g, M);
            }
            static #e = (this.ɵfac = function (d) {
              return new (d || F)();
            });
            static #t = (this.ɵprov = B.Yz7({ token: F, factory: F.ɵfac }));
          }
          return F;
        })(),
        Nt = (() => {
          class F {
            static #e = (this.NOOP = new vt());
          }
          return F;
        })();
      const nn = 1e3,
        Dn = "ng-enter",
        Ce = "ng-leave",
        se = "ng-trigger",
        he = ".ng-trigger",
        je = "ng-animating",
        Et = ".ng-animating";
      function Dt(F) {
        if ("number" == typeof F) return F;
        const a = F.match(/^(-?[\.\d]+)(m?s)/);
        return !a || a.length < 2 ? 0 : St(parseFloat(a[1]), a[2]);
      }
      function St(F, a) {
        return "s" === a ? F * nn : F;
      }
      function On(F, a, u) {
        return F.hasOwnProperty("duration")
          ? F
          : (function en(F, a, u) {
              let g,
                M = 0,
                H = "";
              if ("string" == typeof F) {
                const q = F.match(
                  /^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i
                );
                if (null === q)
                  return a.push(qe()), { duration: 0, delay: 0, easing: "" };
                g = St(parseFloat(q[1]), q[2]);
                const pe = q[3];
                null != pe && (M = St(parseFloat(pe), q[4]));
                const ze = q[5];
                ze && (H = ze);
              } else g = F;
              if (!u) {
                let q = !1,
                  pe = a.length;
                g < 0 &&
                  (a.push(
                    (function re() {
                      return new B.vHH(3100, !1);
                    })()
                  ),
                  (q = !0)),
                  M < 0 &&
                    (a.push(
                      (function ue() {
                        return new B.vHH(3101, !1);
                      })()
                    ),
                    (q = !0)),
                  q && a.splice(pe, 0, qe());
              }
              return { duration: g, delay: M, easing: H };
            })(F, a, u);
      }
      function sr(F, a = {}) {
        return (
          Object.keys(F).forEach((u) => {
            a[u] = F[u];
          }),
          a
        );
      }
      function Ln(F) {
        const a = new Map();
        return (
          Object.keys(F).forEach((u) => {
            a.set(u, F[u]);
          }),
          a
        );
      }
      function jn(F, a = new Map(), u) {
        if (u) for (let [d, g] of u) a.set(d, g);
        for (let [d, g] of F) a.set(d, g);
        return a;
      }
      function Xt(F, a, u) {
        a.forEach((d, g) => {
          const M = Br(g);
          u && !u.has(g) && u.set(g, F.style[M]), (F.style[M] = d);
        });
      }
      function pn(F, a) {
        a.forEach((u, d) => {
          const g = Br(d);
          F.style[g] = "";
        });
      }
      function Mn(F) {
        return Array.isArray(F) ? (1 == F.length ? F[0] : (0, qt.vP)(F)) : F;
      }
      const qr = new RegExp("{{\\s*(.+?)\\s*}}", "g");
      function zn(F) {
        let a = [];
        if ("string" == typeof F) {
          let u;
          for (; (u = qr.exec(F)); ) a.push(u[1]);
          qr.lastIndex = 0;
        }
        return a;
      }
      function qn(F, a, u) {
        const d = F.toString(),
          g = d.replace(qr, (M, H) => {
            let q = a[H];
            return (
              null == q &&
                (u.push(
                  (function Pe(F) {
                    return new B.vHH(3003, !1);
                  })()
                ),
                (q = "")),
              q.toString()
            );
          });
        return g == d ? F : g;
      }
      function fi(F) {
        const a = [];
        let u = F.next();
        for (; !u.done; ) a.push(u.value), (u = F.next());
        return a;
      }
      const mi = /-+([a-z0-9])/g;
      function Br(F) {
        return F.replace(mi, (...a) => a[1].toUpperCase());
      }
      function tr(F, a, u) {
        switch (a.type) {
          case 7:
            return F.visitTrigger(a, u);
          case 0:
            return F.visitState(a, u);
          case 1:
            return F.visitTransition(a, u);
          case 2:
            return F.visitSequence(a, u);
          case 3:
            return F.visitGroup(a, u);
          case 4:
            return F.visitAnimate(a, u);
          case 5:
            return F.visitKeyframes(a, u);
          case 6:
            return F.visitStyle(a, u);
          case 8:
            return F.visitReference(a, u);
          case 9:
            return F.visitAnimateChild(a, u);
          case 10:
            return F.visitAnimateRef(a, u);
          case 11:
            return F.visitQuery(a, u);
          case 12:
            return F.visitStagger(a, u);
          default:
            throw (function tt(F) {
              return new B.vHH(3004, !1);
            })();
        }
      }
      function ni(F, a) {
        return window.getComputedStyle(F)[a];
      }
      const hi = "*";
      function Ar(F, a) {
        const u = [];
        return (
          "string" == typeof F
            ? F.split(/\s*,\s*/).forEach((d) =>
                (function ds(F, a, u) {
                  if (":" == F[0]) {
                    const pe = (function fs(F, a) {
                      switch (F) {
                        case ":enter":
                          return "void => *";
                        case ":leave":
                          return "* => void";
                        case ":increment":
                          return (u, d) => parseFloat(d) > parseFloat(u);
                        case ":decrement":
                          return (u, d) => parseFloat(d) < parseFloat(u);
                        default:
                          return (
                            a.push(
                              (function $t(F) {
                                return new B.vHH(3016, !1);
                              })()
                            ),
                            "* => *"
                          );
                      }
                    })(F, u);
                    if ("function" == typeof pe) return void a.push(pe);
                    F = pe;
                  }
                  const d = F.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == d || d.length < 4)
                    return (
                      u.push(
                        (function cn(F) {
                          return new B.vHH(3015, !1);
                        })()
                      ),
                      a
                    );
                  const g = d[1],
                    M = d[2],
                    H = d[3];
                  a.push(Ss(g, H));
                  "<" == M[0] && !(g == hi && H == hi) && a.push(Ss(H, g));
                })(d, u, a)
              )
            : u.push(F),
          u
        );
      }
      const Ki = new Set(["true", "1"]),
        bi = new Set(["false", "0"]);
      function Ss(F, a) {
        const u = Ki.has(F) || bi.has(F),
          d = Ki.has(a) || bi.has(a);
        return (g, M) => {
          let H = F == hi || F == g,
            q = a == hi || a == M;
          return (
            !H && u && "boolean" == typeof g && (H = g ? Ki.has(F) : bi.has(F)),
            !q && d && "boolean" == typeof M && (q = M ? Ki.has(a) : bi.has(a)),
            H && q
          );
        };
      }
      const Xi = new RegExp("s*:selfs*,?", "g");
      function $i(F, a, u, d) {
        return new Ts(F).build(a, u, d);
      }
      class Ts {
        constructor(a) {
          this._driver = a;
        }
        build(a, u, d) {
          const g = new _i(u);
          return this._resetContextStyleTimingState(g), tr(this, Mn(a), g);
        }
        _resetContextStyleTimingState(a) {
          (a.currentQuerySelector = ""),
            (a.collectedStyles = new Map()),
            a.collectedStyles.set("", new Map()),
            (a.currentTime = 0);
        }
        visitTrigger(a, u) {
          let d = (u.queryCount = 0),
            g = (u.depCount = 0);
          const M = [],
            H = [];
          return (
            "@" == a.name.charAt(0) &&
              u.errors.push(
                (function Bt() {
                  return new B.vHH(3006, !1);
                })()
              ),
            a.definitions.forEach((q) => {
              if ((this._resetContextStyleTimingState(u), 0 == q.type)) {
                const pe = q,
                  ze = pe.name;
                ze
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((yt) => {
                    (pe.name = yt), M.push(this.visitState(pe, u));
                  }),
                  (pe.name = ze);
              } else if (1 == q.type) {
                const pe = this.visitTransition(q, u);
                (d += pe.queryCount), (g += pe.depCount), H.push(pe);
              } else
                u.errors.push(
                  (function an() {
                    return new B.vHH(3007, !1);
                  })()
                );
            }),
            {
              type: 7,
              name: a.name,
              states: M,
              transitions: H,
              queryCount: d,
              depCount: g,
              options: null,
            }
          );
        }
        visitState(a, u) {
          const d = this.visitStyle(a.styles, u),
            g = (a.options && a.options.params) || null;
          if (d.containsDynamicStyles) {
            const M = new Set(),
              H = g || {};
            d.styles.forEach((q) => {
              q instanceof Map &&
                q.forEach((pe) => {
                  zn(pe).forEach((ze) => {
                    H.hasOwnProperty(ze) || M.add(ze);
                  });
                });
            }),
              M.size &&
                (fi(M.values()),
                u.errors.push(
                  (function Tn(F, a) {
                    return new B.vHH(3008, !1);
                  })()
                ));
          }
          return {
            type: 0,
            name: a.name,
            style: d,
            options: g ? { params: g } : null,
          };
        }
        visitTransition(a, u) {
          (u.queryCount = 0), (u.depCount = 0);
          const d = tr(this, Mn(a.animation), u);
          return {
            type: 1,
            matchers: Ar(a.expr, u.errors),
            animation: d,
            queryCount: u.queryCount,
            depCount: u.depCount,
            options: Di(a.options),
          };
        }
        visitSequence(a, u) {
          return {
            type: 2,
            steps: a.steps.map((d) => tr(this, d, u)),
            options: Di(a.options),
          };
        }
        visitGroup(a, u) {
          const d = u.currentTime;
          let g = 0;
          const M = a.steps.map((H) => {
            u.currentTime = d;
            const q = tr(this, H, u);
            return (g = Math.max(g, u.currentTime)), q;
          });
          return (
            (u.currentTime = g), { type: 3, steps: M, options: Di(a.options) }
          );
        }
        visitAnimate(a, u) {
          const d = (function Ei(F, a) {
            if (F.hasOwnProperty("duration")) return F;
            if ("number" == typeof F) return gn(On(F, a).duration, 0, "");
            const u = F;
            if (
              u
                .split(/\s+/)
                .some((M) => "{" == M.charAt(0) && "{" == M.charAt(1))
            ) {
              const M = gn(0, 0, "");
              return (M.dynamic = !0), (M.strValue = u), M;
            }
            const g = On(u, a);
            return gn(g.duration, g.delay, g.easing);
          })(a.timings, u.errors);
          u.currentAnimateTimings = d;
          let g,
            M = a.styles ? a.styles : (0, qt.oB)({});
          if (5 == M.type) g = this.visitKeyframes(M, u);
          else {
            let H = a.styles,
              q = !1;
            if (!H) {
              q = !0;
              const ze = {};
              d.easing && (ze.easing = d.easing), (H = (0, qt.oB)(ze));
            }
            u.currentTime += d.duration + d.delay;
            const pe = this.visitStyle(H, u);
            (pe.isEmptyStep = q), (g = pe);
          }
          return (
            (u.currentAnimateTimings = null),
            { type: 4, timings: d, style: g, options: null }
          );
        }
        visitStyle(a, u) {
          const d = this._makeStyleAst(a, u);
          return this._validateStyleAst(d, u), d;
        }
        _makeStyleAst(a, u) {
          const d = [],
            g = Array.isArray(a.styles) ? a.styles : [a.styles];
          for (let q of g)
            "string" == typeof q
              ? q === qt.l3
                ? d.push(q)
                : u.errors.push(new B.vHH(3002, !1))
              : d.push(Ln(q));
          let M = !1,
            H = null;
          return (
            d.forEach((q) => {
              if (
                q instanceof Map &&
                (q.has("easing") && ((H = q.get("easing")), q.delete("easing")),
                !M)
              )
                for (let pe of q.values())
                  if (pe.toString().indexOf("{{") >= 0) {
                    M = !0;
                    break;
                  }
            }),
            {
              type: 6,
              styles: d,
              easing: H,
              offset: a.offset,
              containsDynamicStyles: M,
              options: null,
            }
          );
        }
        _validateStyleAst(a, u) {
          const d = u.currentAnimateTimings;
          let g = u.currentTime,
            M = u.currentTime;
          d && M > 0 && (M -= d.duration + d.delay),
            a.styles.forEach((H) => {
              "string" != typeof H &&
                H.forEach((q, pe) => {
                  const ze = u.collectedStyles.get(u.currentQuerySelector),
                    yt = ze.get(pe);
                  let wt = !0;
                  yt &&
                    (M != g &&
                      M >= yt.startTime &&
                      g <= yt.endTime &&
                      (u.errors.push(
                        (function Kt(F, a, u, d, g) {
                          return new B.vHH(3010, !1);
                        })()
                      ),
                      (wt = !1)),
                    (M = yt.startTime)),
                    wt && ze.set(pe, { startTime: M, endTime: g }),
                    u.options &&
                      (function Lr(F, a, u) {
                        const d = a.params || {},
                          g = zn(F);
                        g.length &&
                          g.forEach((M) => {
                            d.hasOwnProperty(M) ||
                              u.push(
                                (function Oe(F) {
                                  return new B.vHH(3001, !1);
                                })()
                              );
                          });
                      })(q, u.options, u.errors);
                });
            });
        }
        visitKeyframes(a, u) {
          const d = { type: 5, styles: [], options: null };
          if (!u.currentAnimateTimings)
            return (
              u.errors.push(
                (function Ge() {
                  return new B.vHH(3011, !1);
                })()
              ),
              d
            );
          let M = 0;
          const H = [];
          let q = !1,
            pe = !1,
            ze = 0;
          const yt = a.steps.map((Zn) => {
            const Hn = this._makeStyleAst(Zn, u);
            let Qn =
                null != Hn.offset
                  ? Hn.offset
                  : (function ri(F) {
                      if ("string" == typeof F) return null;
                      let a = null;
                      if (Array.isArray(F))
                        F.forEach((u) => {
                          if (u instanceof Map && u.has("offset")) {
                            const d = u;
                            (a = parseFloat(d.get("offset"))),
                              d.delete("offset");
                          }
                        });
                      else if (F instanceof Map && F.has("offset")) {
                        const u = F;
                        (a = parseFloat(u.get("offset"))), u.delete("offset");
                      }
                      return a;
                    })(Hn.styles),
              rr = 0;
            return (
              null != Qn && (M++, (rr = Hn.offset = Qn)),
              (pe = pe || rr < 0 || rr > 1),
              (q = q || rr < ze),
              (ze = rr),
              H.push(rr),
              Hn
            );
          });
          pe &&
            u.errors.push(
              (function Qe() {
                return new B.vHH(3012, !1);
              })()
            ),
            q &&
              u.errors.push(
                (function ce() {
                  return new B.vHH(3200, !1);
                })()
              );
          const wt = a.steps.length;
          let Ft = 0;
          M > 0 && M < wt
            ? u.errors.push(
                (function He() {
                  return new B.vHH(3202, !1);
                })()
              )
            : 0 == M && (Ft = 1 / (wt - 1));
          const Ut = wt - 1,
            xt = u.currentTime,
            jt = u.currentAnimateTimings,
            $n = jt.duration;
          return (
            yt.forEach((Zn, Hn) => {
              const Qn = Ft > 0 ? (Hn == Ut ? 1 : Ft * Hn) : H[Hn],
                rr = Qn * $n;
              (u.currentTime = xt + jt.delay + rr),
                (jt.duration = rr),
                this._validateStyleAst(Zn, u),
                (Zn.offset = Qn),
                d.styles.push(Zn);
            }),
            d
          );
        }
        visitReference(a, u) {
          return {
            type: 8,
            animation: tr(this, Mn(a.animation), u),
            options: Di(a.options),
          };
        }
        visitAnimateChild(a, u) {
          return u.depCount++, { type: 9, options: Di(a.options) };
        }
        visitAnimateRef(a, u) {
          return {
            type: 10,
            animation: this.visitReference(a.animation, u),
            options: Di(a.options),
          };
        }
        visitQuery(a, u) {
          const d = u.currentQuerySelector,
            g = a.options || {};
          u.queryCount++, (u.currentQuery = a);
          const [M, H] = (function Fs(F) {
            const a = !!F.split(/\s*,\s*/).find((u) => ":self" == u);
            return (
              a && (F = F.replace(Xi, "")),
              (F = F.replace(/@\*/g, he)
                .replace(/@\w+/g, (u) => he + "-" + u.slice(1))
                .replace(/:animating/g, Et)),
              [F, a]
            );
          })(a.selector);
          (u.currentQuerySelector = d.length ? d + " " + M : M),
            cr(u.collectedStyles, u.currentQuerySelector, new Map());
          const q = tr(this, Mn(a.animation), u);
          return (
            (u.currentQuery = null),
            (u.currentQuerySelector = d),
            {
              type: 11,
              selector: M,
              limit: g.limit || 0,
              optional: !!g.optional,
              includeSelf: H,
              animation: q,
              originalSelector: a.selector,
              options: Di(a.options),
            }
          );
        }
        visitStagger(a, u) {
          u.currentQuery ||
            u.errors.push(
              (function Ct() {
                return new B.vHH(3013, !1);
              })()
            );
          const d =
            "full" === a.timings
              ? { duration: 0, delay: 0, easing: "full" }
              : On(a.timings, u.errors, !0);
          return {
            type: 12,
            animation: tr(this, Mn(a.animation), u),
            timings: d,
            options: null,
          };
        }
      }
      class _i {
        constructor(a) {
          (this.errors = a),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = new Map()),
            (this.options = null),
            (this.unsupportedCSSPropertiesFound = new Set());
        }
      }
      function Di(F) {
        return (
          F
            ? (F = sr(F)).params &&
              (F.params = (function Ji(F) {
                return F ? sr(F) : null;
              })(F.params))
            : (F = {}),
          F
        );
      }
      function gn(F, a, u) {
        return { duration: F, delay: a, easing: u };
      }
      function xn(F, a, u, d, g, M, H = null, q = !1) {
        return {
          type: 1,
          element: F,
          keyframes: a,
          preStyleProps: u,
          postStyleProps: d,
          duration: g,
          delay: M,
          totalTime: g + M,
          easing: H,
          subTimeline: q,
        };
      }
      class or {
        constructor() {
          this._map = new Map();
        }
        get(a) {
          return this._map.get(a) || [];
        }
        append(a, u) {
          let d = this._map.get(a);
          d || this._map.set(a, (d = [])), d.push(...u);
        }
        has(a) {
          return this._map.has(a);
        }
        clear() {
          this._map.clear();
        }
      }
      const Or = new RegExp(":enter", "g"),
        Fr = new RegExp(":leave", "g");
      function Zr(F, a, u, d, g, M = new Map(), H = new Map(), q, pe, ze = []) {
        return new es().buildKeyframes(F, a, u, d, g, M, H, q, pe, ze);
      }
      class es {
        buildKeyframes(a, u, d, g, M, H, q, pe, ze, yt = []) {
          ze = ze || new or();
          const wt = new Rt(a, u, ze, g, M, yt, []);
          wt.options = pe;
          const Ft = pe.delay ? Dt(pe.delay) : 0;
          wt.currentTimeline.delayNextStep(Ft),
            wt.currentTimeline.setStyles([H], null, wt.errors, pe),
            tr(this, d, wt);
          const Ut = wt.timelines.filter((xt) => xt.containsAnimation());
          if (Ut.length && q.size) {
            let xt;
            for (let jt = Ut.length - 1; jt >= 0; jt--) {
              const $n = Ut[jt];
              if ($n.element === u) {
                xt = $n;
                break;
              }
            }
            xt &&
              !xt.allowOnlyTimelineStyles() &&
              xt.setStyles([q], null, wt.errors, pe);
          }
          return Ut.length
            ? Ut.map((xt) => xt.buildKeyframes())
            : [xn(u, [], [], [], 0, Ft, "", !1)];
        }
        visitTrigger(a, u) {}
        visitState(a, u) {}
        visitTransition(a, u) {}
        visitAnimateChild(a, u) {
          const d = u.subInstructions.get(u.element);
          if (d) {
            const g = u.createSubContext(a.options),
              M = u.currentTimeline.currentTime,
              H = this._visitSubInstructions(d, g, g.options);
            M != H && u.transformIntoNewTimeline(H);
          }
          u.previousNode = a;
        }
        visitAnimateRef(a, u) {
          const d = u.createSubContext(a.options);
          d.transformIntoNewTimeline(),
            this._applyAnimationRefDelays(
              [a.options, a.animation.options],
              u,
              d
            ),
            this.visitReference(a.animation, d),
            u.transformIntoNewTimeline(d.currentTimeline.currentTime),
            (u.previousNode = a);
        }
        _applyAnimationRefDelays(a, u, d) {
          for (const g of a) {
            const M = g?.delay;
            if (M) {
              const H =
                "number" == typeof M ? M : Dt(qn(M, g?.params ?? {}, u.errors));
              d.delayNextStep(H);
            }
          }
        }
        _visitSubInstructions(a, u, d) {
          let M = u.currentTimeline.currentTime;
          const H = null != d.duration ? Dt(d.duration) : null,
            q = null != d.delay ? Dt(d.delay) : null;
          return (
            0 !== H &&
              a.forEach((pe) => {
                const ze = u.appendInstructionToTimeline(pe, H, q);
                M = Math.max(M, ze.duration + ze.delay);
              }),
            M
          );
        }
        visitReference(a, u) {
          u.updateOptions(a.options, !0),
            tr(this, a.animation, u),
            (u.previousNode = a);
        }
        visitSequence(a, u) {
          const d = u.subContextCount;
          let g = u;
          const M = a.options;
          if (
            M &&
            (M.params || M.delay) &&
            ((g = u.createSubContext(M)),
            g.transformIntoNewTimeline(),
            null != M.delay)
          ) {
            6 == g.previousNode.type &&
              (g.currentTimeline.snapshotCurrentStyles(),
              (g.previousNode = Cn));
            const H = Dt(M.delay);
            g.delayNextStep(H);
          }
          a.steps.length &&
            (a.steps.forEach((H) => tr(this, H, g)),
            g.currentTimeline.applyStylesToKeyframe(),
            g.subContextCount > d && g.transformIntoNewTimeline()),
            (u.previousNode = a);
        }
        visitGroup(a, u) {
          const d = [];
          let g = u.currentTimeline.currentTime;
          const M = a.options && a.options.delay ? Dt(a.options.delay) : 0;
          a.steps.forEach((H) => {
            const q = u.createSubContext(a.options);
            M && q.delayNextStep(M),
              tr(this, H, q),
              (g = Math.max(g, q.currentTimeline.currentTime)),
              d.push(q.currentTimeline);
          }),
            d.forEach((H) => u.currentTimeline.mergeTimelineCollectedStyles(H)),
            u.transformIntoNewTimeline(g),
            (u.previousNode = a);
        }
        _visitTiming(a, u) {
          if (a.dynamic) {
            const d = a.strValue;
            return On(u.params ? qn(d, u.params, u.errors) : d, u.errors);
          }
          return { duration: a.duration, delay: a.delay, easing: a.easing };
        }
        visitAnimate(a, u) {
          const d = (u.currentAnimateTimings = this._visitTiming(a.timings, u)),
            g = u.currentTimeline;
          d.delay && (u.incrementTime(d.delay), g.snapshotCurrentStyles());
          const M = a.style;
          5 == M.type
            ? this.visitKeyframes(M, u)
            : (u.incrementTime(d.duration),
              this.visitStyle(M, u),
              g.applyStylesToKeyframe()),
            (u.currentAnimateTimings = null),
            (u.previousNode = a);
        }
        visitStyle(a, u) {
          const d = u.currentTimeline,
            g = u.currentAnimateTimings;
          !g && d.hasCurrentStyleProperties() && d.forwardFrame();
          const M = (g && g.easing) || a.easing;
          a.isEmptyStep
            ? d.applyEmptyStep(M)
            : d.setStyles(a.styles, M, u.errors, u.options),
            (u.previousNode = a);
        }
        visitKeyframes(a, u) {
          const d = u.currentAnimateTimings,
            g = u.currentTimeline.duration,
            M = d.duration,
            q = u.createSubContext().currentTimeline;
          (q.easing = d.easing),
            a.styles.forEach((pe) => {
              q.forwardTime((pe.offset || 0) * M),
                q.setStyles(pe.styles, pe.easing, u.errors, u.options),
                q.applyStylesToKeyframe();
            }),
            u.currentTimeline.mergeTimelineCollectedStyles(q),
            u.transformIntoNewTimeline(g + M),
            (u.previousNode = a);
        }
        visitQuery(a, u) {
          const d = u.currentTimeline.currentTime,
            g = a.options || {},
            M = g.delay ? Dt(g.delay) : 0;
          M &&
            (6 === u.previousNode.type ||
              (0 == d && u.currentTimeline.hasCurrentStyleProperties())) &&
            (u.currentTimeline.snapshotCurrentStyles(), (u.previousNode = Cn));
          let H = d;
          const q = u.invokeQuery(
            a.selector,
            a.originalSelector,
            a.limit,
            a.includeSelf,
            !!g.optional,
            u.errors
          );
          u.currentQueryTotal = q.length;
          let pe = null;
          q.forEach((ze, yt) => {
            u.currentQueryIndex = yt;
            const wt = u.createSubContext(a.options, ze);
            M && wt.delayNextStep(M),
              ze === u.element && (pe = wt.currentTimeline),
              tr(this, a.animation, wt),
              wt.currentTimeline.applyStylesToKeyframe(),
              (H = Math.max(H, wt.currentTimeline.currentTime));
          }),
            (u.currentQueryIndex = 0),
            (u.currentQueryTotal = 0),
            u.transformIntoNewTimeline(H),
            pe &&
              (u.currentTimeline.mergeTimelineCollectedStyles(pe),
              u.currentTimeline.snapshotCurrentStyles()),
            (u.previousNode = a);
        }
        visitStagger(a, u) {
          const d = u.parentContext,
            g = u.currentTimeline,
            M = a.timings,
            H = Math.abs(M.duration),
            q = H * (u.currentQueryTotal - 1);
          let pe = H * u.currentQueryIndex;
          switch (M.duration < 0 ? "reverse" : M.easing) {
            case "reverse":
              pe = q - pe;
              break;
            case "full":
              pe = d.currentStaggerTime;
          }
          const yt = u.currentTimeline;
          pe && yt.delayNextStep(pe);
          const wt = yt.currentTime;
          tr(this, a.animation, u),
            (u.previousNode = a),
            (d.currentStaggerTime =
              g.currentTime - wt + (g.startTime - d.currentTimeline.startTime));
        }
      }
      const Cn = {};
      class Rt {
        constructor(a, u, d, g, M, H, q, pe) {
          (this._driver = a),
            (this.element = u),
            (this.subInstructions = d),
            (this._enterClassName = g),
            (this._leaveClassName = M),
            (this.errors = H),
            (this.timelines = q),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = Cn),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = pe || new Qt(this._driver, u, 0)),
            q.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(a, u) {
          if (!a) return;
          const d = a;
          let g = this.options;
          null != d.duration && (g.duration = Dt(d.duration)),
            null != d.delay && (g.delay = Dt(d.delay));
          const M = d.params;
          if (M) {
            let H = g.params;
            H || (H = this.options.params = {}),
              Object.keys(M).forEach((q) => {
                (!u || !H.hasOwnProperty(q)) &&
                  (H[q] = qn(M[q], H, this.errors));
              });
          }
        }
        _copyOptions() {
          const a = {};
          if (this.options) {
            const u = this.options.params;
            if (u) {
              const d = (a.params = {});
              Object.keys(u).forEach((g) => {
                d[g] = u[g];
              });
            }
          }
          return a;
        }
        createSubContext(a = null, u, d) {
          const g = u || this.element,
            M = new Rt(
              this._driver,
              g,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(g, d || 0)
            );
          return (
            (M.previousNode = this.previousNode),
            (M.currentAnimateTimings = this.currentAnimateTimings),
            (M.options = this._copyOptions()),
            M.updateOptions(a),
            (M.currentQueryIndex = this.currentQueryIndex),
            (M.currentQueryTotal = this.currentQueryTotal),
            (M.parentContext = this),
            this.subContextCount++,
            M
          );
        }
        transformIntoNewTimeline(a) {
          return (
            (this.previousNode = Cn),
            (this.currentTimeline = this.currentTimeline.fork(this.element, a)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(a, u, d) {
          const g = {
              duration: u ?? a.duration,
              delay: this.currentTimeline.currentTime + (d ?? 0) + a.delay,
              easing: "",
            },
            M = new Un(
              this._driver,
              a.element,
              a.keyframes,
              a.preStyleProps,
              a.postStyleProps,
              g,
              a.stretchStartingKeyframe
            );
          return this.timelines.push(M), g;
        }
        incrementTime(a) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + a);
        }
        delayNextStep(a) {
          a > 0 && this.currentTimeline.delayNextStep(a);
        }
        invokeQuery(a, u, d, g, M, H) {
          let q = [];
          if ((g && q.push(this.element), a.length > 0)) {
            a = (a = a.replace(Or, "." + this._enterClassName)).replace(
              Fr,
              "." + this._leaveClassName
            );
            let ze = this._driver.query(this.element, a, 1 != d);
            0 !== d &&
              (ze =
                d < 0 ? ze.slice(ze.length + d, ze.length) : ze.slice(0, d)),
              q.push(...ze);
          }
          return (
            !M &&
              0 == q.length &&
              H.push(
                (function mn(F) {
                  return new B.vHH(3014, !1);
                })()
              ),
            q
          );
        }
      }
      class Qt {
        constructor(a, u, d, g) {
          (this._driver = a),
            (this.element = u),
            (this.startTime = d),
            (this._elementTimelineStylesLookup = g),
            (this.duration = 0),
            (this.easing = null),
            (this._previousKeyframe = new Map()),
            (this._currentKeyframe = new Map()),
            (this._keyframes = new Map()),
            (this._styleSummary = new Map()),
            (this._localTimelineStyles = new Map()),
            (this._pendingStyles = new Map()),
            (this._backFill = new Map()),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup ||
              (this._elementTimelineStylesLookup = new Map()),
            (this._globalTimelineStyles =
              this._elementTimelineStylesLookup.get(u)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(
                u,
                this._localTimelineStyles
              )),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.hasCurrentStyleProperties();
            default:
              return !0;
          }
        }
        hasCurrentStyleProperties() {
          return this._currentKeyframe.size > 0;
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(a) {
          const u = 1 === this._keyframes.size && this._pendingStyles.size;
          this.duration || u
            ? (this.forwardTime(this.currentTime + a),
              u && this.snapshotCurrentStyles())
            : (this.startTime += a);
        }
        fork(a, u) {
          return (
            this.applyStylesToKeyframe(),
            new Qt(
              this._driver,
              a,
              u || this.currentTime,
              this._elementTimelineStylesLookup
            )
          );
        }
        _loadKeyframe() {
          this._currentKeyframe &&
            (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = new Map()),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(a) {
          this.applyStylesToKeyframe(),
            (this.duration = a),
            this._loadKeyframe();
        }
        _updateStyle(a, u) {
          this._localTimelineStyles.set(a, u),
            this._globalTimelineStyles.set(a, u),
            this._styleSummary.set(a, { time: this.currentTime, value: u });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(a) {
          a && this._previousKeyframe.set("easing", a);
          for (let [u, d] of this._globalTimelineStyles)
            this._backFill.set(u, d || qt.l3),
              this._currentKeyframe.set(u, qt.l3);
          this._currentEmptyStepKeyframe = this._currentKeyframe;
        }
        setStyles(a, u, d, g) {
          u && this._previousKeyframe.set("easing", u);
          const M = (g && g.params) || {},
            H = (function Ci(F, a) {
              const u = new Map();
              let d;
              return (
                F.forEach((g) => {
                  if ("*" === g) {
                    d = d || a.keys();
                    for (let M of d) u.set(M, qt.l3);
                  } else jn(g, u);
                }),
                u
              );
            })(a, this._globalTimelineStyles);
          for (let [q, pe] of H) {
            const ze = qn(pe, M, d);
            this._pendingStyles.set(q, ze),
              this._localTimelineStyles.has(q) ||
                this._backFill.set(
                  q,
                  this._globalTimelineStyles.get(q) ?? qt.l3
                ),
              this._updateStyle(q, ze);
          }
        }
        applyStylesToKeyframe() {
          0 != this._pendingStyles.size &&
            (this._pendingStyles.forEach((a, u) => {
              this._currentKeyframe.set(u, a);
            }),
            this._pendingStyles.clear(),
            this._localTimelineStyles.forEach((a, u) => {
              this._currentKeyframe.has(u) || this._currentKeyframe.set(u, a);
            }));
        }
        snapshotCurrentStyles() {
          for (let [a, u] of this._localTimelineStyles)
            this._pendingStyles.set(a, u), this._updateStyle(a, u);
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const a = [];
          for (let u in this._currentKeyframe) a.push(u);
          return a;
        }
        mergeTimelineCollectedStyles(a) {
          a._styleSummary.forEach((u, d) => {
            const g = this._styleSummary.get(d);
            (!g || u.time > g.time) && this._updateStyle(d, u.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const a = new Set(),
            u = new Set(),
            d = 1 === this._keyframes.size && 0 === this.duration;
          let g = [];
          this._keyframes.forEach((q, pe) => {
            const ze = jn(q, new Map(), this._backFill);
            ze.forEach((yt, wt) => {
              yt === qt.k1 ? a.add(wt) : yt === qt.l3 && u.add(wt);
            }),
              d || ze.set("offset", pe / this.duration),
              g.push(ze);
          });
          const M = a.size ? fi(a.values()) : [],
            H = u.size ? fi(u.values()) : [];
          if (d) {
            const q = g[0],
              pe = new Map(q);
            q.set("offset", 0), pe.set("offset", 1), (g = [q, pe]);
          }
          return xn(
            this.element,
            g,
            M,
            H,
            this.duration,
            this.startTime,
            this.easing,
            !1
          );
        }
      }
      class Un extends Qt {
        constructor(a, u, d, g, M, H, q = !1) {
          super(a, u, H.delay),
            (this.keyframes = d),
            (this.preStyleProps = g),
            (this.postStyleProps = M),
            (this._stretchStartingKeyframe = q),
            (this.timings = {
              duration: H.duration,
              delay: H.delay,
              easing: H.easing,
            });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let a = this.keyframes,
            { delay: u, duration: d, easing: g } = this.timings;
          if (this._stretchStartingKeyframe && u) {
            const M = [],
              H = d + u,
              q = u / H,
              pe = jn(a[0]);
            pe.set("offset", 0), M.push(pe);
            const ze = jn(a[0]);
            ze.set("offset", br(q)), M.push(ze);
            const yt = a.length - 1;
            for (let wt = 1; wt <= yt; wt++) {
              let Ft = jn(a[wt]);
              const Ut = Ft.get("offset");
              Ft.set("offset", br((u + Ut * d) / H)), M.push(Ft);
            }
            (d = H), (u = 0), (g = ""), (a = M);
          }
          return xn(
            this.element,
            a,
            this.preStyleProps,
            this.postStyleProps,
            d,
            u,
            g,
            !0
          );
        }
      }
      function br(F, a = 3) {
        const u = Math.pow(10, a - 1);
        return Math.round(F * u) / u;
      }
      class Vr {}
      const Kr = new Set([
        "width",
        "height",
        "minWidth",
        "minHeight",
        "maxWidth",
        "maxHeight",
        "left",
        "top",
        "bottom",
        "right",
        "fontSize",
        "outlineWidth",
        "outlineOffset",
        "paddingTop",
        "paddingLeft",
        "paddingBottom",
        "paddingRight",
        "marginTop",
        "marginLeft",
        "marginBottom",
        "marginRight",
        "borderRadius",
        "borderWidth",
        "borderTopWidth",
        "borderLeftWidth",
        "borderRightWidth",
        "borderBottomWidth",
        "textIndent",
        "perspective",
      ]);
      class xi extends Vr {
        normalizePropertyName(a, u) {
          return Br(a);
        }
        normalizeStyleValue(a, u, d, g) {
          let M = "";
          const H = d.toString().trim();
          if (Kr.has(u) && 0 !== d && "0" !== d)
            if ("number" == typeof d) M = "px";
            else {
              const q = d.match(/^[+-]?[\d\.]+([a-z]*)$/);
              q &&
                0 == q[1].length &&
                g.push(
                  (function lt(F, a) {
                    return new B.vHH(3005, !1);
                  })()
                );
            }
          return H + M;
        }
      }
      function sn(F, a, u, d, g, M, H, q, pe, ze, yt, wt, Ft) {
        return {
          type: 0,
          element: F,
          triggerName: a,
          isRemovalTransition: g,
          fromState: u,
          fromStyles: M,
          toState: d,
          toStyles: H,
          timelines: q,
          queriedElements: pe,
          preStyleProps: ze,
          postStyleProps: yt,
          totalTime: wt,
          errors: Ft,
        };
      }
      const $r = {};
      class ts {
        constructor(a, u, d) {
          (this._triggerName = a), (this.ast = u), (this._stateStyles = d);
        }
        match(a, u, d, g) {
          return (function Gn(F, a, u, d, g) {
            return F.some((M) => M(a, u, d, g));
          })(this.ast.matchers, a, u, d, g);
        }
        buildStyles(a, u, d) {
          let g = this._stateStyles.get("*");
          return (
            void 0 !== a && (g = this._stateStyles.get(a?.toString()) || g),
            g ? g.buildStyles(u, d) : new Map()
          );
        }
        build(a, u, d, g, M, H, q, pe, ze, yt) {
          const wt = [],
            Ft = (this.ast.options && this.ast.options.params) || $r,
            xt = this.buildStyles(d, (q && q.params) || $r, wt),
            jt = (pe && pe.params) || $r,
            $n = this.buildStyles(g, jt, wt),
            Zn = new Set(),
            Hn = new Map(),
            Qn = new Map(),
            rr = "void" === g,
            Ti = { params: Xr(jt, Ft), delay: this.ast.options?.delay },
            jr = yt
              ? []
              : Zr(a, u, this.ast.animation, M, H, xt, $n, Ti, ze, wt);
          let zr = 0;
          if (
            (jr.forEach((li) => {
              zr = Math.max(li.duration + li.delay, zr);
            }),
            wt.length)
          )
            return sn(
              u,
              this._triggerName,
              d,
              g,
              rr,
              xt,
              $n,
              [],
              [],
              Hn,
              Qn,
              zr,
              wt
            );
          jr.forEach((li) => {
            const ms = li.element,
              Wi = cr(Hn, ms, new Set());
            li.preStyleProps.forEach((ys) => Wi.add(ys));
            const Vi = cr(Qn, ms, new Set());
            li.postStyleProps.forEach((ys) => Vi.add(ys)),
              ms !== u && Zn.add(ms);
          });
          const gs = fi(Zn.values());
          return sn(u, this._triggerName, d, g, rr, xt, $n, jr, gs, Hn, Qn, zr);
        }
      }
      function Xr(F, a) {
        const u = sr(a);
        for (const d in F) F.hasOwnProperty(d) && null != F[d] && (u[d] = F[d]);
        return u;
      }
      class Hr {
        constructor(a, u, d) {
          (this.styles = a), (this.defaultParams = u), (this.normalizer = d);
        }
        buildStyles(a, u) {
          const d = new Map(),
            g = sr(this.defaultParams);
          return (
            Object.keys(a).forEach((M) => {
              const H = a[M];
              null !== H && (g[M] = H);
            }),
            this.styles.styles.forEach((M) => {
              "string" != typeof M &&
                M.forEach((H, q) => {
                  H && (H = qn(H, g, u));
                  const pe = this.normalizer.normalizePropertyName(q, u);
                  (H = this.normalizer.normalizeStyleValue(q, pe, H, u)),
                    d.set(q, H);
                });
            }),
            d
          );
        }
      }
      class Fi {
        constructor(a, u, d) {
          (this.name = a),
            (this.ast = u),
            (this._normalizer = d),
            (this.transitionFactories = []),
            (this.states = new Map()),
            u.states.forEach((g) => {
              this.states.set(
                g.name,
                new Hr(g.style, (g.options && g.options.params) || {}, d)
              );
            }),
            Nn(this.states, "true", "1"),
            Nn(this.states, "false", "0"),
            u.transitions.forEach((g) => {
              this.transitionFactories.push(new ts(a, g, this.states));
            }),
            (this.fallbackTransition = (function Hi(F, a, u) {
              return new ts(
                F,
                {
                  type: 1,
                  animation: { type: 2, steps: [], options: null },
                  matchers: [(H, q) => !0],
                  options: null,
                  queryCount: 0,
                  depCount: 0,
                },
                a
              );
            })(a, this.states));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(a, u, d, g) {
          return (
            this.transitionFactories.find((H) => H.match(a, u, d, g)) || null
          );
        }
        matchStyles(a, u, d) {
          return this.fallbackTransition.buildStyles(a, u, d);
        }
      }
      function Nn(F, a, u) {
        F.has(a)
          ? F.has(u) || F.set(u, F.get(a))
          : F.has(u) && F.set(a, F.get(u));
      }
      const xr = new or();
      class Si {
        constructor(a, u, d) {
          (this.bodyNode = a),
            (this._driver = u),
            (this._normalizer = d),
            (this._animations = new Map()),
            (this._playersById = new Map()),
            (this.players = []);
        }
        register(a, u) {
          const d = [],
            M = $i(this._driver, u, d, []);
          if (d.length)
            throw (function dn(F) {
              return new B.vHH(3503, !1);
            })();
          this._animations.set(a, M);
        }
        _buildPlayer(a, u, d) {
          const g = a.element,
            M = Yr(this._normalizer, a.keyframes, u, d);
          return this._driver.animate(
            g,
            M,
            a.duration,
            a.delay,
            a.easing,
            [],
            !0
          );
        }
        create(a, u, d = {}) {
          const g = [],
            M = this._animations.get(a);
          let H;
          const q = new Map();
          if (
            (M
              ? ((H = Zr(
                  this._driver,
                  u,
                  M,
                  Dn,
                  Ce,
                  new Map(),
                  new Map(),
                  d,
                  xr,
                  g
                )),
                H.forEach((yt) => {
                  const wt = cr(q, yt.element, new Map());
                  yt.postStyleProps.forEach((Ft) => wt.set(Ft, null));
                }))
              : (g.push(
                  (function zt() {
                    return new B.vHH(3300, !1);
                  })()
                ),
                (H = [])),
            g.length)
          )
            throw (function Rr(F) {
              return new B.vHH(3504, !1);
            })();
          q.forEach((yt, wt) => {
            yt.forEach((Ft, Ut) => {
              yt.set(Ut, this._driver.computeStyle(wt, Ut, qt.l3));
            });
          });
          const ze = wn(
            H.map((yt) => {
              const wt = q.get(yt.element);
              return this._buildPlayer(yt, new Map(), wt);
            })
          );
          return (
            this._playersById.set(a, ze),
            ze.onDestroy(() => this.destroy(a)),
            this.players.push(ze),
            ze
          );
        }
        destroy(a) {
          const u = this._getPlayer(a);
          u.destroy(), this._playersById.delete(a);
          const d = this.players.indexOf(u);
          d >= 0 && this.players.splice(d, 1);
        }
        _getPlayer(a) {
          const u = this._playersById.get(a);
          if (!u)
            throw (function Dr(F) {
              return new B.vHH(3301, !1);
            })();
          return u;
        }
        listen(a, u, d, g) {
          const M = Yn(u, "", "", "");
          return wr(this._getPlayer(a), d, M, g), () => {};
        }
        command(a, u, d, g) {
          if ("register" == d) return void this.register(a, g[0]);
          if ("create" == d) return void this.create(a, u, g[0] || {});
          const M = this._getPlayer(a);
          switch (d) {
            case "play":
              M.play();
              break;
            case "pause":
              M.pause();
              break;
            case "reset":
              M.reset();
              break;
            case "restart":
              M.restart();
              break;
            case "finish":
              M.finish();
              break;
            case "init":
              M.init();
              break;
            case "setPosition":
              M.setPosition(parseFloat(g[0]));
              break;
            case "destroy":
              this.destroy(a);
          }
        }
      }
      const ki = "ng-animate-queued",
        Ms = "ng-animate-disabled",
        Pi = [],
        Ni = {
          namespaceId: "",
          setForRemoval: !1,
          setForMove: !1,
          hasAnimation: !1,
          removedBeforeQueried: !1,
        },
        oi = {
          namespaceId: "",
          setForMove: !1,
          setForRemoval: !1,
          hasAnimation: !1,
          removedBeforeQueried: !0,
        },
        bn = "__ng_removed";
      class ks {
        get params() {
          return this.options.params;
        }
        constructor(a, u = "") {
          this.namespaceId = u;
          const d = a && a.hasOwnProperty("value");
          if (
            ((this.value = (function I(F) {
              return F ?? null;
            })(d ? a.value : a)),
            d)
          ) {
            const M = sr(a);
            delete M.value, (this.options = M);
          } else this.options = {};
          this.options.params || (this.options.params = {});
        }
        absorbOptions(a) {
          const u = a.params;
          if (u) {
            const d = this.options.params;
            Object.keys(u).forEach((g) => {
              null == d[g] && (d[g] = u[g]);
            });
          }
        }
      }
      const Xn = "void",
        w = new ks(Xn);
      class i {
        constructor(a, u, d) {
          (this.id = a),
            (this.hostElement = u),
            (this._engine = d),
            (this.players = []),
            (this._triggers = new Map()),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = "ng-tns-" + a),
            h(u, this._hostClassName);
        }
        listen(a, u, d, g) {
          if (!this._triggers.has(u))
            throw (function Bn(F, a) {
              return new B.vHH(3302, !1);
            })();
          if (null == d || 0 == d.length)
            throw (function kr(F) {
              return new B.vHH(3303, !1);
            })();
          if (
            !(function j(F) {
              return "start" == F || "done" == F;
            })(d)
          )
            throw (function Wt(F, a) {
              return new B.vHH(3400, !1);
            })();
          const M = cr(this._elementListeners, a, []),
            H = { name: u, phase: d, callback: g };
          M.push(H);
          const q = cr(this._engine.statesByElement, a, new Map());
          return (
            q.has(u) || (h(a, se), h(a, se + "-" + u), q.set(u, w)),
            () => {
              this._engine.afterFlush(() => {
                const pe = M.indexOf(H);
                pe >= 0 && M.splice(pe, 1),
                  this._triggers.has(u) || q.delete(u);
              });
            }
          );
        }
        register(a, u) {
          return !this._triggers.has(a) && (this._triggers.set(a, u), !0);
        }
        _getTrigger(a) {
          const u = this._triggers.get(a);
          if (!u)
            throw (function Wr(F) {
              return new B.vHH(3401, !1);
            })();
          return u;
        }
        trigger(a, u, d, g = !0) {
          const M = this._getTrigger(u),
            H = new E(this.id, u, a);
          let q = this._engine.statesByElement.get(a);
          q ||
            (h(a, se),
            h(a, se + "-" + u),
            this._engine.statesByElement.set(a, (q = new Map())));
          let pe = q.get(u);
          const ze = new ks(d, this.id);
          if (
            (!(d && d.hasOwnProperty("value")) &&
              pe &&
              ze.absorbOptions(pe.options),
            q.set(u, ze),
            pe || (pe = w),
            ze.value !== Xn && pe.value === ze.value)
          ) {
            if (
              !(function Y(F, a) {
                const u = Object.keys(F),
                  d = Object.keys(a);
                if (u.length != d.length) return !1;
                for (let g = 0; g < u.length; g++) {
                  const M = u[g];
                  if (!a.hasOwnProperty(M) || F[M] !== a[M]) return !1;
                }
                return !0;
              })(pe.params, ze.params)
            ) {
              const jt = [],
                $n = M.matchStyles(pe.value, pe.params, jt),
                Zn = M.matchStyles(ze.value, ze.params, jt);
              jt.length
                ? this._engine.reportError(jt)
                : this._engine.afterFlush(() => {
                    pn(a, $n), Xt(a, Zn);
                  });
            }
            return;
          }
          const Ft = cr(this._engine.playersByElement, a, []);
          Ft.forEach((jt) => {
            jt.namespaceId == this.id &&
              jt.triggerName == u &&
              jt.queued &&
              jt.destroy();
          });
          let Ut = M.matchTransition(pe.value, ze.value, a, ze.params),
            xt = !1;
          if (!Ut) {
            if (!g) return;
            (Ut = M.fallbackTransition), (xt = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: a,
              triggerName: u,
              transition: Ut,
              fromState: pe,
              toState: ze,
              player: H,
              isFallbackTransition: xt,
            }),
            xt ||
              (h(a, ki),
              H.onStart(() => {
                b(a, ki);
              })),
            H.onDone(() => {
              let jt = this.players.indexOf(H);
              jt >= 0 && this.players.splice(jt, 1);
              const $n = this._engine.playersByElement.get(a);
              if ($n) {
                let Zn = $n.indexOf(H);
                Zn >= 0 && $n.splice(Zn, 1);
              }
            }),
            this.players.push(H),
            Ft.push(H),
            H
          );
        }
        deregister(a) {
          this._triggers.delete(a),
            this._engine.statesByElement.forEach((u) => u.delete(a)),
            this._elementListeners.forEach((u, d) => {
              this._elementListeners.set(
                d,
                u.filter((g) => g.name != a)
              );
            });
        }
        clearElementCache(a) {
          this._engine.statesByElement.delete(a),
            this._elementListeners.delete(a);
          const u = this._engine.playersByElement.get(a);
          u &&
            (u.forEach((d) => d.destroy()),
            this._engine.playersByElement.delete(a));
        }
        _signalRemovalForInnerTriggers(a, u) {
          const d = this._engine.driver.query(a, he, !0);
          d.forEach((g) => {
            if (g[bn]) return;
            const M = this._engine.fetchNamespacesByElement(g);
            M.size
              ? M.forEach((H) => H.triggerLeaveAnimation(g, u, !1, !0))
              : this.clearElementCache(g);
          }),
            this._engine.afterFlushAnimationsDone(() =>
              d.forEach((g) => this.clearElementCache(g))
            );
        }
        triggerLeaveAnimation(a, u, d, g) {
          const M = this._engine.statesByElement.get(a),
            H = new Map();
          if (M) {
            const q = [];
            if (
              (M.forEach((pe, ze) => {
                if ((H.set(ze, pe.value), this._triggers.has(ze))) {
                  const yt = this.trigger(a, ze, Xn, g);
                  yt && q.push(yt);
                }
              }),
              q.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, a, !0, u, H),
                d && wn(q).onDone(() => this._engine.processLeaveNode(a)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(a) {
          const u = this._elementListeners.get(a),
            d = this._engine.statesByElement.get(a);
          if (u && d) {
            const g = new Set();
            u.forEach((M) => {
              const H = M.name;
              if (g.has(H)) return;
              g.add(H);
              const pe = this._triggers.get(H).fallbackTransition,
                ze = d.get(H) || w,
                yt = new ks(Xn),
                wt = new E(this.id, H, a);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: a,
                  triggerName: H,
                  transition: pe,
                  fromState: ze,
                  toState: yt,
                  player: wt,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(a, u) {
          const d = this._engine;
          if (
            (a.childElementCount && this._signalRemovalForInnerTriggers(a, u),
            this.triggerLeaveAnimation(a, u, !0))
          )
            return;
          let g = !1;
          if (d.totalAnimations) {
            const M = d.players.length ? d.playersByQueriedElement.get(a) : [];
            if (M && M.length) g = !0;
            else {
              let H = a;
              for (; (H = H.parentNode); )
                if (d.statesByElement.get(H)) {
                  g = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(a), g))
            d.markElementAsRemoved(this.id, a, !1, u);
          else {
            const M = a[bn];
            (!M || M === Ni) &&
              (d.afterFlush(() => this.clearElementCache(a)),
              d.destroyInnerAnimations(a),
              d._onRemovalComplete(a, u));
          }
        }
        insertNode(a, u) {
          h(a, this._hostClassName);
        }
        drainQueuedTransitions(a) {
          const u = [];
          return (
            this._queue.forEach((d) => {
              const g = d.player;
              if (g.destroyed) return;
              const M = d.element,
                H = this._elementListeners.get(M);
              H &&
                H.forEach((q) => {
                  if (q.name == d.triggerName) {
                    const pe = Yn(
                      M,
                      d.triggerName,
                      d.fromState.value,
                      d.toState.value
                    );
                    (pe._data = a), wr(d.player, q.phase, pe, q.callback);
                  }
                }),
                g.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      g.destroy();
                    })
                  : u.push(d);
            }),
            (this._queue = []),
            u.sort((d, g) => {
              const M = d.transition.ast.depCount,
                H = g.transition.ast.depCount;
              return 0 == M || 0 == H
                ? M - H
                : this._engine.driver.containsElement(d.element, g.element)
                ? 1
                : -1;
            })
          );
        }
        destroy(a) {
          this.players.forEach((u) => u.destroy()),
            this._signalRemovalForInnerTriggers(this.hostElement, a);
        }
      }
      class _ {
        _onRemovalComplete(a, u) {
          this.onRemovalComplete(a, u);
        }
        constructor(a, u, d) {
          (this.bodyNode = a),
            (this.driver = u),
            (this._normalizer = d),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (g, M) => {});
        }
        get queuedPlayers() {
          const a = [];
          return (
            this._namespaceList.forEach((u) => {
              u.players.forEach((d) => {
                d.queued && a.push(d);
              });
            }),
            a
          );
        }
        createNamespace(a, u) {
          const d = new i(a, u, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, u)
              ? this._balanceNamespaceList(d, u)
              : (this.newHostElements.set(u, d), this.collectEnterElement(u)),
            (this._namespaceLookup[a] = d)
          );
        }
        _balanceNamespaceList(a, u) {
          const d = this._namespaceList,
            g = this.namespacesByHostElement;
          if (d.length - 1 >= 0) {
            let H = !1,
              q = this.driver.getParentElement(u);
            for (; q; ) {
              const pe = g.get(q);
              if (pe) {
                const ze = d.indexOf(pe);
                d.splice(ze + 1, 0, a), (H = !0);
                break;
              }
              q = this.driver.getParentElement(q);
            }
            H || d.unshift(a);
          } else d.push(a);
          return g.set(u, a), a;
        }
        register(a, u) {
          let d = this._namespaceLookup[a];
          return d || (d = this.createNamespace(a, u)), d;
        }
        registerTrigger(a, u, d) {
          let g = this._namespaceLookup[a];
          g && g.register(u, d) && this.totalAnimations++;
        }
        destroy(a, u) {
          a &&
            (this.afterFlush(() => {}),
            this.afterFlushAnimationsDone(() => {
              const d = this._fetchNamespace(a);
              this.namespacesByHostElement.delete(d.hostElement);
              const g = this._namespaceList.indexOf(d);
              g >= 0 && this._namespaceList.splice(g, 1),
                d.destroy(u),
                delete this._namespaceLookup[a];
            }));
        }
        _fetchNamespace(a) {
          return this._namespaceLookup[a];
        }
        fetchNamespacesByElement(a) {
          const u = new Set(),
            d = this.statesByElement.get(a);
          if (d)
            for (let g of d.values())
              if (g.namespaceId) {
                const M = this._fetchNamespace(g.namespaceId);
                M && u.add(M);
              }
          return u;
        }
        trigger(a, u, d, g) {
          if (U(u)) {
            const M = this._fetchNamespace(a);
            if (M) return M.trigger(u, d, g), !0;
          }
          return !1;
        }
        insertNode(a, u, d, g) {
          if (!U(u)) return;
          const M = u[bn];
          if (M && M.setForRemoval) {
            (M.setForRemoval = !1), (M.setForMove = !0);
            const H = this.collectedLeaveElements.indexOf(u);
            H >= 0 && this.collectedLeaveElements.splice(H, 1);
          }
          if (a) {
            const H = this._fetchNamespace(a);
            H && H.insertNode(u, d);
          }
          g && this.collectEnterElement(u);
        }
        collectEnterElement(a) {
          this.collectedEnterElements.push(a);
        }
        markElementAsDisabled(a, u) {
          u
            ? this.disabledNodes.has(a) || (this.disabledNodes.add(a), h(a, Ms))
            : this.disabledNodes.has(a) &&
              (this.disabledNodes.delete(a), b(a, Ms));
        }
        removeNode(a, u, d) {
          if (U(u)) {
            const g = a ? this._fetchNamespace(a) : null;
            g ? g.removeNode(u, d) : this.markElementAsRemoved(a, u, !1, d);
            const M = this.namespacesByHostElement.get(u);
            M && M.id !== a && M.removeNode(u, d);
          } else this._onRemovalComplete(u, d);
        }
        markElementAsRemoved(a, u, d, g, M) {
          this.collectedLeaveElements.push(u),
            (u[bn] = {
              namespaceId: a,
              setForRemoval: g,
              hasAnimation: d,
              removedBeforeQueried: !1,
              previousTriggersValues: M,
            });
        }
        listen(a, u, d, g, M) {
          return U(u) ? this._fetchNamespace(a).listen(u, d, g, M) : () => {};
        }
        _buildInstruction(a, u, d, g, M) {
          return a.transition.build(
            this.driver,
            a.element,
            a.fromState.value,
            a.toState.value,
            d,
            g,
            a.fromState.options,
            a.toState.options,
            u,
            M
          );
        }
        destroyInnerAnimations(a) {
          let u = this.driver.query(a, he, !0);
          u.forEach((d) => this.destroyActiveAnimationsForElement(d)),
            0 != this.playersByQueriedElement.size &&
              ((u = this.driver.query(a, Et, !0)),
              u.forEach((d) => this.finishActiveQueriedAnimationOnElement(d)));
        }
        destroyActiveAnimationsForElement(a) {
          const u = this.playersByElement.get(a);
          u &&
            u.forEach((d) => {
              d.queued ? (d.markedForDestroy = !0) : d.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(a) {
          const u = this.playersByQueriedElement.get(a);
          u && u.forEach((d) => d.finish());
        }
        whenRenderingDone() {
          return new Promise((a) => {
            if (this.players.length) return wn(this.players).onDone(() => a());
            a();
          });
        }
        processLeaveNode(a) {
          const u = a[bn];
          if (u && u.setForRemoval) {
            if (((a[bn] = Ni), u.namespaceId)) {
              this.destroyInnerAnimations(a);
              const d = this._fetchNamespace(u.namespaceId);
              d && d.clearElementCache(a);
            }
            this._onRemovalComplete(a, u.setForRemoval);
          }
          a.classList?.contains(Ms) && this.markElementAsDisabled(a, !1),
            this.driver.query(a, ".ng-animate-disabled", !0).forEach((d) => {
              this.markElementAsDisabled(d, !1);
            });
        }
        flush(a = -1) {
          let u = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((d, g) =>
                this._balanceNamespaceList(d, g)
              ),
              this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let d = 0; d < this.collectedEnterElements.length; d++)
              h(this.collectedEnterElements[d], "ng-star-inserted");
          if (
            this._namespaceList.length &&
            (this.totalQueuedPlayers || this.collectedLeaveElements.length)
          ) {
            const d = [];
            try {
              u = this._flushAnimations(d, a);
            } finally {
              for (let g = 0; g < d.length; g++) d[g]();
            }
          } else
            for (let d = 0; d < this.collectedLeaveElements.length; d++)
              this.processLeaveNode(this.collectedLeaveElements[d]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((d) => d()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const d = this._whenQuietFns;
            (this._whenQuietFns = []),
              u.length
                ? wn(u).onDone(() => {
                    d.forEach((g) => g());
                  })
                : d.forEach((g) => g());
          }
        }
        reportError(a) {
          throw (function Vn(F) {
            return new B.vHH(3402, !1);
          })();
        }
        _flushAnimations(a, u) {
          const d = new or(),
            g = [],
            M = new Map(),
            H = [],
            q = new Map(),
            pe = new Map(),
            ze = new Map(),
            yt = new Set();
          this.disabledNodes.forEach((Gt) => {
            yt.add(Gt);
            const Ht = this.driver.query(Gt, ".ng-animate-queued", !0);
            for (let Yt = 0; Yt < Ht.length; Yt++) yt.add(Ht[Yt]);
          });
          const wt = this.bodyNode,
            Ft = Array.from(this.statesByElement.keys()),
            Ut = k(Ft, this.collectedEnterElements),
            xt = new Map();
          let jt = 0;
          Ut.forEach((Gt, Ht) => {
            const Yt = Dn + jt++;
            xt.set(Ht, Yt), Gt.forEach((Pn) => h(Pn, Yt));
          });
          const $n = [],
            Zn = new Set(),
            Hn = new Set();
          for (let Gt = 0; Gt < this.collectedLeaveElements.length; Gt++) {
            const Ht = this.collectedLeaveElements[Gt],
              Yt = Ht[bn];
            Yt &&
              Yt.setForRemoval &&
              ($n.push(Ht),
              Zn.add(Ht),
              Yt.hasAnimation
                ? this.driver
                    .query(Ht, ".ng-star-inserted", !0)
                    .forEach((Pn) => Zn.add(Pn))
                : Hn.add(Ht));
          }
          const Qn = new Map(),
            rr = k(Ft, Array.from(Zn));
          rr.forEach((Gt, Ht) => {
            const Yt = Ce + jt++;
            Qn.set(Ht, Yt), Gt.forEach((Pn) => h(Pn, Yt));
          }),
            a.push(() => {
              Ut.forEach((Gt, Ht) => {
                const Yt = xt.get(Ht);
                Gt.forEach((Pn) => b(Pn, Yt));
              }),
                rr.forEach((Gt, Ht) => {
                  const Yt = Qn.get(Ht);
                  Gt.forEach((Pn) => b(Pn, Yt));
                }),
                $n.forEach((Gt) => {
                  this.processLeaveNode(Gt);
                });
            });
          const Ti = [],
            jr = [];
          for (let Gt = this._namespaceList.length - 1; Gt >= 0; Gt--)
            this._namespaceList[Gt].drainQueuedTransitions(u).forEach((Yt) => {
              const Pn = Yt.player,
                yr = Yt.element;
              if ((Ti.push(Pn), this.collectedEnterElements.length)) {
                const Gr = yr[bn];
                if (Gr && Gr.setForMove) {
                  if (
                    Gr.previousTriggersValues &&
                    Gr.previousTriggersValues.has(Yt.triggerName)
                  ) {
                    const os = Gr.previousTriggersValues.get(Yt.triggerName),
                      ci = this.statesByElement.get(Yt.element);
                    if (ci && ci.has(Yt.triggerName)) {
                      const no = ci.get(Yt.triggerName);
                      (no.value = os), ci.set(Yt.triggerName, no);
                    }
                  }
                  return void Pn.destroy();
                }
              }
              const hr = !wt || !this.driver.containsElement(wt, yr),
                pi = Qn.get(yr),
                Os = xt.get(yr),
                dr = this._buildInstruction(Yt, d, Os, pi, hr);
              if (dr.errors && dr.errors.length) return void jr.push(dr);
              if (hr)
                return (
                  Pn.onStart(() => pn(yr, dr.fromStyles)),
                  Pn.onDestroy(() => Xt(yr, dr.toStyles)),
                  void g.push(Pn)
                );
              if (Yt.isFallbackTransition)
                return (
                  Pn.onStart(() => pn(yr, dr.fromStyles)),
                  Pn.onDestroy(() => Xt(yr, dr.toStyles)),
                  void g.push(Pn)
                );
              const xs = [];
              dr.timelines.forEach((Gr) => {
                (Gr.stretchStartingKeyframe = !0),
                  this.disabledNodes.has(Gr.element) || xs.push(Gr);
              }),
                (dr.timelines = xs),
                d.append(yr, dr.timelines),
                H.push({ instruction: dr, player: Pn, element: yr }),
                dr.queriedElements.forEach((Gr) => cr(q, Gr, []).push(Pn)),
                dr.preStyleProps.forEach((Gr, os) => {
                  if (Gr.size) {
                    let ci = pe.get(os);
                    ci || pe.set(os, (ci = new Set())),
                      Gr.forEach((no, ro) => ci.add(ro));
                  }
                }),
                dr.postStyleProps.forEach((Gr, os) => {
                  let ci = ze.get(os);
                  ci || ze.set(os, (ci = new Set())),
                    Gr.forEach((no, ro) => ci.add(ro));
                });
            });
          if (jr.length) {
            const Gt = [];
            jr.forEach((Ht) => {
              Gt.push(
                (function _n(F, a) {
                  return new B.vHH(3505, !1);
                })()
              );
            }),
              Ti.forEach((Ht) => Ht.destroy()),
              this.reportError(Gt);
          }
          const zr = new Map(),
            gs = new Map();
          H.forEach((Gt) => {
            const Ht = Gt.element;
            d.has(Ht) &&
              (gs.set(Ht, Ht),
              this._beforeAnimationBuild(
                Gt.player.namespaceId,
                Gt.instruction,
                zr
              ));
          }),
            g.forEach((Gt) => {
              const Ht = Gt.element;
              this._getPreviousPlayers(
                Ht,
                !1,
                Gt.namespaceId,
                Gt.triggerName,
                null
              ).forEach((Pn) => {
                cr(zr, Ht, []).push(Pn), Pn.destroy();
              });
            });
          const li = $n.filter((Gt) => te(Gt, pe, ze)),
            ms = new Map();
          G(ms, this.driver, Hn, ze, qt.l3).forEach((Gt) => {
            te(Gt, pe, ze) && li.push(Gt);
          });
          const Vi = new Map();
          Ut.forEach((Gt, Ht) => {
            G(Vi, this.driver, new Set(Gt), pe, qt.k1);
          }),
            li.forEach((Gt) => {
              const Ht = ms.get(Gt),
                Yt = Vi.get(Gt);
              ms.set(
                Gt,
                new Map([...(Ht?.entries() ?? []), ...(Yt?.entries() ?? [])])
              );
            });
          const ys = [],
            Jn = [],
            to = {};
          H.forEach((Gt) => {
            const { element: Ht, player: Yt, instruction: Pn } = Gt;
            if (d.has(Ht)) {
              if (yt.has(Ht))
                return (
                  Yt.onDestroy(() => Xt(Ht, Pn.toStyles)),
                  (Yt.disabled = !0),
                  Yt.overrideTotalTime(Pn.totalTime),
                  void g.push(Yt)
                );
              let yr = to;
              if (gs.size > 1) {
                let pi = Ht;
                const Os = [];
                for (; (pi = pi.parentNode); ) {
                  const dr = gs.get(pi);
                  if (dr) {
                    yr = dr;
                    break;
                  }
                  Os.push(pi);
                }
                Os.forEach((dr) => gs.set(dr, yr));
              }
              const hr = this._buildAnimation(
                Yt.namespaceId,
                Pn,
                zr,
                M,
                Vi,
                ms
              );
              if ((Yt.setRealPlayer(hr), yr === to)) ys.push(Yt);
              else {
                const pi = this.playersByElement.get(yr);
                pi && pi.length && (Yt.parentPlayer = wn(pi)), g.push(Yt);
              }
            } else
              pn(Ht, Pn.fromStyles),
                Yt.onDestroy(() => Xt(Ht, Pn.toStyles)),
                Jn.push(Yt),
                yt.has(Ht) && g.push(Yt);
          }),
            Jn.forEach((Gt) => {
              const Ht = M.get(Gt.element);
              if (Ht && Ht.length) {
                const Yt = wn(Ht);
                Gt.setRealPlayer(Yt);
              }
            }),
            g.forEach((Gt) => {
              Gt.parentPlayer
                ? Gt.syncPlayerEvents(Gt.parentPlayer)
                : Gt.destroy();
            });
          for (let Gt = 0; Gt < $n.length; Gt++) {
            const Ht = $n[Gt],
              Yt = Ht[bn];
            if ((b(Ht, Ce), Yt && Yt.hasAnimation)) continue;
            let Pn = [];
            if (q.size) {
              let hr = q.get(Ht);
              hr && hr.length && Pn.push(...hr);
              let pi = this.driver.query(Ht, Et, !0);
              for (let Os = 0; Os < pi.length; Os++) {
                let dr = q.get(pi[Os]);
                dr && dr.length && Pn.push(...dr);
              }
            }
            const yr = Pn.filter((hr) => !hr.destroyed);
            yr.length ? p(this, Ht, yr) : this.processLeaveNode(Ht);
          }
          return (
            ($n.length = 0),
            ys.forEach((Gt) => {
              this.players.push(Gt),
                Gt.onDone(() => {
                  Gt.destroy();
                  const Ht = this.players.indexOf(Gt);
                  this.players.splice(Ht, 1);
                }),
                Gt.play();
            }),
            ys
          );
        }
        afterFlush(a) {
          this._flushFns.push(a);
        }
        afterFlushAnimationsDone(a) {
          this._whenQuietFns.push(a);
        }
        _getPreviousPlayers(a, u, d, g, M) {
          let H = [];
          if (u) {
            const q = this.playersByQueriedElement.get(a);
            q && (H = q);
          } else {
            const q = this.playersByElement.get(a);
            if (q) {
              const pe = !M || M == Xn;
              q.forEach((ze) => {
                ze.queued || (!pe && ze.triggerName != g) || H.push(ze);
              });
            }
          }
          return (
            (d || g) &&
              (H = H.filter(
                (q) => !((d && d != q.namespaceId) || (g && g != q.triggerName))
              )),
            H
          );
        }
        _beforeAnimationBuild(a, u, d) {
          const M = u.element,
            H = u.isRemovalTransition ? void 0 : a,
            q = u.isRemovalTransition ? void 0 : u.triggerName;
          for (const pe of u.timelines) {
            const ze = pe.element,
              yt = ze !== M,
              wt = cr(d, ze, []);
            this._getPreviousPlayers(ze, yt, H, q, u.toState).forEach((Ut) => {
              const xt = Ut.getRealPlayer();
              xt.beforeDestroy && xt.beforeDestroy(), Ut.destroy(), wt.push(Ut);
            });
          }
          pn(M, u.fromStyles);
        }
        _buildAnimation(a, u, d, g, M, H) {
          const q = u.triggerName,
            pe = u.element,
            ze = [],
            yt = new Set(),
            wt = new Set(),
            Ft = u.timelines.map((xt) => {
              const jt = xt.element;
              yt.add(jt);
              const $n = jt[bn];
              if ($n && $n.removedBeforeQueried)
                return new qt.ZN(xt.duration, xt.delay);
              const Zn = jt !== pe,
                Hn = (function T(F) {
                  const a = [];
                  return R(F, a), a;
                })((d.get(jt) || Pi).map((zr) => zr.getRealPlayer())).filter(
                  (zr) => !!zr.element && zr.element === jt
                ),
                Qn = M.get(jt),
                rr = H.get(jt),
                Ti = Yr(this._normalizer, xt.keyframes, Qn, rr),
                jr = this._buildPlayer(xt, Ti, Hn);
              if ((xt.subTimeline && g && wt.add(jt), Zn)) {
                const zr = new E(a, q, jt);
                zr.setRealPlayer(jr), ze.push(zr);
              }
              return jr;
            });
          ze.forEach((xt) => {
            cr(this.playersByQueriedElement, xt.element, []).push(xt),
              xt.onDone(() =>
                (function A(F, a, u) {
                  let d = F.get(a);
                  if (d) {
                    if (d.length) {
                      const g = d.indexOf(u);
                      d.splice(g, 1);
                    }
                    0 == d.length && F.delete(a);
                  }
                  return d;
                })(this.playersByQueriedElement, xt.element, xt)
              );
          }),
            yt.forEach((xt) => h(xt, je));
          const Ut = wn(Ft);
          return (
            Ut.onDestroy(() => {
              yt.forEach((xt) => b(xt, je)), Xt(pe, u.toStyles);
            }),
            wt.forEach((xt) => {
              cr(g, xt, []).push(Ut);
            }),
            Ut
          );
        }
        _buildPlayer(a, u, d) {
          return u.length > 0
            ? this.driver.animate(
                a.element,
                u,
                a.duration,
                a.delay,
                a.easing,
                d
              )
            : new qt.ZN(a.duration, a.delay);
        }
      }
      class E {
        constructor(a, u, d) {
          (this.namespaceId = a),
            (this.triggerName = u),
            (this.element = d),
            (this._player = new qt.ZN()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = new Map()),
            (this.destroyed = !1),
            (this.parentPlayer = null),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(a) {
          this._containsRealPlayer ||
            ((this._player = a),
            this._queuedCallbacks.forEach((u, d) => {
              u.forEach((g) => wr(a, d, void 0, g));
            }),
            this._queuedCallbacks.clear(),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(a.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(a) {
          this.totalTime = a;
        }
        syncPlayerEvents(a) {
          const u = this._player;
          u.triggerCallback && a.onStart(() => u.triggerCallback("start")),
            a.onDone(() => this.finish()),
            a.onDestroy(() => this.destroy());
        }
        _queueEvent(a, u) {
          cr(this._queuedCallbacks, a, []).push(u);
        }
        onDone(a) {
          this.queued && this._queueEvent("done", a), this._player.onDone(a);
        }
        onStart(a) {
          this.queued && this._queueEvent("start", a), this._player.onStart(a);
        }
        onDestroy(a) {
          this.queued && this._queueEvent("destroy", a),
            this._player.onDestroy(a);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(a) {
          this.queued || this._player.setPosition(a);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(a) {
          const u = this._player;
          u.triggerCallback && u.triggerCallback(a);
        }
      }
      function U(F) {
        return F && 1 === F.nodeType;
      }
      function P(F, a) {
        const u = F.style.display;
        return (F.style.display = a ?? "none"), u;
      }
      function G(F, a, u, d, g) {
        const M = [];
        u.forEach((pe) => M.push(P(pe)));
        const H = [];
        d.forEach((pe, ze) => {
          const yt = new Map();
          pe.forEach((wt) => {
            const Ft = a.computeStyle(ze, wt, g);
            yt.set(wt, Ft),
              (!Ft || 0 == Ft.length) && ((ze[bn] = oi), H.push(ze));
          }),
            F.set(ze, yt);
        });
        let q = 0;
        return u.forEach((pe) => P(pe, M[q++])), H;
      }
      function k(F, a) {
        const u = new Map();
        if ((F.forEach((q) => u.set(q, [])), 0 == a.length)) return u;
        const g = new Set(a),
          M = new Map();
        function H(q) {
          if (!q) return 1;
          let pe = M.get(q);
          if (pe) return pe;
          const ze = q.parentNode;
          return (
            (pe = u.has(ze) ? ze : g.has(ze) ? 1 : H(ze)), M.set(q, pe), pe
          );
        }
        return (
          a.forEach((q) => {
            const pe = H(q);
            1 !== pe && u.get(pe).push(q);
          }),
          u
        );
      }
      function h(F, a) {
        F.classList?.add(a);
      }
      function b(F, a) {
        F.classList?.remove(a);
      }
      function p(F, a, u) {
        wn(u).onDone(() => F.processLeaveNode(a));
      }
      function R(F, a) {
        for (let u = 0; u < F.length; u++) {
          const d = F[u];
          d instanceof qt.ZE ? R(d.players, a) : a.push(d);
        }
      }
      function te(F, a, u) {
        const d = u.get(F);
        if (!d) return !1;
        let g = a.get(F);
        return g ? d.forEach((M) => g.add(M)) : a.set(F, d), u.delete(F), !0;
      }
      class X {
        constructor(a, u, d) {
          (this.bodyNode = a),
            (this._driver = u),
            (this._normalizer = d),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (g, M) => {}),
            (this._transitionEngine = new _(a, u, d)),
            (this._timelineEngine = new Si(a, u, d)),
            (this._transitionEngine.onRemovalComplete = (g, M) =>
              this.onRemovalComplete(g, M));
        }
        registerTrigger(a, u, d, g, M) {
          const H = a + "-" + g;
          let q = this._triggerCache[H];
          if (!q) {
            const pe = [],
              yt = $i(this._driver, M, pe, []);
            if (pe.length)
              throw (function pr(F, a) {
                return new B.vHH(3404, !1);
              })();
            (q = (function Qr(F, a, u) {
              return new Fi(F, a, u);
            })(g, yt, this._normalizer)),
              (this._triggerCache[H] = q);
          }
          this._transitionEngine.registerTrigger(u, g, q);
        }
        register(a, u) {
          this._transitionEngine.register(a, u);
        }
        destroy(a, u) {
          this._transitionEngine.destroy(a, u);
        }
        onInsert(a, u, d, g) {
          this._transitionEngine.insertNode(a, u, d, g);
        }
        onRemove(a, u, d) {
          this._transitionEngine.removeNode(a, u, d);
        }
        disableAnimations(a, u) {
          this._transitionEngine.markElementAsDisabled(a, u);
        }
        process(a, u, d, g) {
          if ("@" == d.charAt(0)) {
            const [M, H] = Cr(d);
            this._timelineEngine.command(M, u, H, g);
          } else this._transitionEngine.trigger(a, u, d, g);
        }
        listen(a, u, d, g, M) {
          if ("@" == d.charAt(0)) {
            const [H, q] = Cr(d);
            return this._timelineEngine.listen(H, u, q, M);
          }
          return this._transitionEngine.listen(a, u, d, g, M);
        }
        flush(a = -1) {
          this._transitionEngine.flush(a);
        }
        get players() {
          return [
            ...this._transitionEngine.players,
            ...this._timelineEngine.players,
          ];
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
        afterFlushAnimationsDone(a) {
          this._transitionEngine.afterFlushAnimationsDone(a);
        }
      }
      let fe = (() => {
        class F {
          static #e = (this.initialStylesByElement = new WeakMap());
          constructor(u, d, g) {
            (this._element = u),
              (this._startStyles = d),
              (this._endStyles = g),
              (this._state = 0);
            let M = F.initialStylesByElement.get(u);
            M || F.initialStylesByElement.set(u, (M = new Map())),
              (this._initialStyles = M);
          }
          start() {
            this._state < 1 &&
              (this._startStyles &&
                Xt(this._element, this._startStyles, this._initialStyles),
              (this._state = 1));
          }
          finish() {
            this.start(),
              this._state < 2 &&
                (Xt(this._element, this._initialStyles),
                this._endStyles &&
                  (Xt(this._element, this._endStyles),
                  (this._endStyles = null)),
                (this._state = 1));
          }
          destroy() {
            this.finish(),
              this._state < 3 &&
                (F.initialStylesByElement.delete(this._element),
                this._startStyles &&
                  (pn(this._element, this._startStyles),
                  (this._endStyles = null)),
                this._endStyles &&
                  (pn(this._element, this._endStyles),
                  (this._endStyles = null)),
                Xt(this._element, this._initialStyles),
                (this._state = 3));
          }
        }
        return F;
      })();
      function nt(F) {
        let a = null;
        return (
          F.forEach((u, d) => {
            (function Je(F) {
              return "display" === F || "position" === F;
            })(d) && ((a = a || new Map()), a.set(d, u));
          }),
          a
        );
      }
      class _t {
        constructor(a, u, d, g) {
          (this.element = a),
            (this.keyframes = u),
            (this.options = d),
            (this._specialStyles = g),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = new Map()),
            (this._duration = d.duration),
            (this._delay = d.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((a) => a()),
            (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const a = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(
            this.element,
            a,
            this.options
          )),
            (this._finalKeyframe = a.length ? a[a.length - 1] : new Map()),
            this.domPlayer.addEventListener("finish", () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _convertKeyframesToObject(a) {
          const u = [];
          return (
            a.forEach((d) => {
              u.push(Object.fromEntries(d));
            }),
            u
          );
        }
        _triggerWebAnimation(a, u, d) {
          return a.animate(this._convertKeyframesToObject(u), d);
        }
        onStart(a) {
          this._originalOnStartFns.push(a), this._onStartFns.push(a);
        }
        onDone(a) {
          this._originalOnDoneFns.push(a), this._onDoneFns.push(a);
        }
        onDestroy(a) {
          this._onDestroyFns.push(a);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((a) => a()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(),
            this._specialStyles && this._specialStyles.finish(),
            this._onFinish(),
            this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((a) => a()),
            (this._onDestroyFns = []));
        }
        setPosition(a) {
          void 0 === this.domPlayer && this.init(),
            (this.domPlayer.currentTime = a * this.time);
        }
        getPosition() {
          return +(this.domPlayer.currentTime ?? 0) / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const a = new Map();
          this.hasStarted() &&
            this._finalKeyframe.forEach((d, g) => {
              "offset" !== g &&
                a.set(g, this._finished ? d : ni(this.element, g));
            }),
            (this.currentSnapshot = a);
        }
        triggerCallback(a) {
          const u = "start" === a ? this._onStartFns : this._onDoneFns;
          u.forEach((d) => d()), (u.length = 0);
        }
      }
      class ct {
        validateStyleProperty(a) {
          return !0;
        }
        validateAnimatableStyleProperty(a) {
          return !0;
        }
        matchesElement(a, u) {
          return !1;
        }
        containsElement(a, u) {
          return ee(a, u);
        }
        getParentElement(a) {
          return ur(a);
        }
        query(a, u, d) {
          return Ee(a, u, d);
        }
        computeStyle(a, u, d) {
          return window.getComputedStyle(a)[u];
        }
        animate(a, u, d, g, M, H = []) {
          const pe = {
            duration: d,
            delay: g,
            fill: 0 == g ? "both" : "forwards",
          };
          M && (pe.easing = M);
          const ze = new Map(),
            yt = H.filter((Ut) => Ut instanceof _t);
          (function yi(F, a) {
            return 0 === F || 0 === a;
          })(d, g) &&
            yt.forEach((Ut) => {
              Ut.currentSnapshot.forEach((xt, jt) => ze.set(jt, xt));
            });
          let wt = (function gr(F) {
            return F.length
              ? F[0] instanceof Map
                ? F
                : F.map((a) => Ln(a))
              : [];
          })(u).map((Ut) => jn(Ut));
          wt = (function Ai(F, a, u) {
            if (u.size && a.length) {
              let d = a[0],
                g = [];
              if (
                (u.forEach((M, H) => {
                  d.has(H) || g.push(H), d.set(H, M);
                }),
                g.length)
              )
                for (let M = 1; M < a.length; M++) {
                  let H = a[M];
                  g.forEach((q) => H.set(q, ni(F, q)));
                }
            }
            return a;
          })(a, wt, ze);
          const Ft = (function Z(F, a) {
            let u = null,
              d = null;
            return (
              Array.isArray(a) && a.length
                ? ((u = nt(a[0])), a.length > 1 && (d = nt(a[a.length - 1])))
                : a instanceof Map && (u = nt(a)),
              u || d ? new fe(F, u, d) : null
            );
          })(a, wt);
          return new _t(a, wt, pe, Ft);
        }
      }
      let We = (() => {
        class F extends qt._j {
          constructor(u, d) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = u.createRenderer(d.body, {
                id: "0",
                encapsulation: B.ifc.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(u) {
            const d = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const g = Array.isArray(u) ? (0, qt.vP)(u) : u;
            return (
              Ke(this._renderer, null, d, "register", [g]),
              new Ze(d, this._renderer)
            );
          }
          static #e = (this.ɵfac = function (d) {
            return new (d || F)(B.LFG(B.FYo), B.LFG(Ye.K0));
          });
          static #t = (this.ɵprov = B.Yz7({ token: F, factory: F.ɵfac }));
        }
        return F;
      })();
      class Ze extends qt.LC {
        constructor(a, u) {
          super(), (this._id = a), (this._renderer = u);
        }
        create(a, u) {
          return new at(this._id, a, u || {}, this._renderer);
        }
      }
      class at {
        constructor(a, u, d, g) {
          (this.id = a),
            (this.element = u),
            (this._renderer = g),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command("create", d);
        }
        _listen(a, u) {
          return this._renderer.listen(this.element, `@@${this.id}:${a}`, u);
        }
        _command(a, ...u) {
          return Ke(this._renderer, this.element, this.id, a, u);
        }
        onDone(a) {
          this._listen("done", a);
        }
        onStart(a) {
          this._listen("start", a);
        }
        onDestroy(a) {
          this._listen("destroy", a);
        }
        init() {
          this._command("init");
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command("play"), (this._started = !0);
        }
        pause() {
          this._command("pause");
        }
        restart() {
          this._command("restart");
        }
        finish() {
          this._command("finish");
        }
        destroy() {
          this._command("destroy");
        }
        reset() {
          this._command("reset"), (this._started = !1);
        }
        setPosition(a) {
          this._command("setPosition", a);
        }
        getPosition() {
          return this._renderer.engine.players[+this.id]?.getPosition() ?? 0;
        }
      }
      function Ke(F, a, u, d, g) {
        return F.setProperty(a, `@@${u}:${d}`, g);
      }
      const de = "@.disabled";
      let ke = (() => {
        class F {
          constructor(u, d, g) {
            (this.delegate = u),
              (this.engine = d),
              (this._zone = g),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (d.onRemovalComplete = (M, H) => {
                const q = H?.parentNode(M);
                q && H.removeChild(q, M);
              });
          }
          createRenderer(u, d) {
            const M = this.delegate.createRenderer(u, d);
            if (!(u && d && d.data && d.data.animation)) {
              let yt = this._rendererCache.get(M);
              return (
                yt ||
                  ((yt = new ut("", M, this.engine, () =>
                    this._rendererCache.delete(M)
                  )),
                  this._rendererCache.set(M, yt)),
                yt
              );
            }
            const H = d.id,
              q = d.id + "-" + this._currentId;
            this._currentId++, this.engine.register(q, u);
            const pe = (yt) => {
              Array.isArray(yt)
                ? yt.forEach(pe)
                : this.engine.registerTrigger(H, q, u, yt.name, yt);
            };
            return (
              d.data.animation.forEach(pe), new ht(this, q, M, this.engine)
            );
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            queueMicrotask(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(u, d, g) {
            u >= 0 && u < this._microtaskId
              ? this._zone.run(() => d(g))
              : (0 == this._animationCallbacksBuffer.length &&
                  queueMicrotask(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((M) => {
                        const [H, q] = M;
                        H(q);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([d, g]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(),
                    this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
          static #e = (this.ɵfac = function (d) {
            return new (d || F)(B.LFG(B.FYo), B.LFG(X), B.LFG(B.R0b));
          });
          static #t = (this.ɵprov = B.Yz7({ token: F, factory: F.ɵfac }));
        }
        return F;
      })();
      class ut {
        constructor(a, u, d, g) {
          (this.namespaceId = a),
            (this.delegate = u),
            (this.engine = d),
            (this._onDestroy = g);
        }
        get data() {
          return this.delegate.data;
        }
        destroyNode(a) {
          this.delegate.destroyNode?.(a);
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate),
            this.engine.afterFlushAnimationsDone(() => {
              queueMicrotask(() => {
                this.delegate.destroy();
              });
            }),
            this._onDestroy?.();
        }
        createElement(a, u) {
          return this.delegate.createElement(a, u);
        }
        createComment(a) {
          return this.delegate.createComment(a);
        }
        createText(a) {
          return this.delegate.createText(a);
        }
        appendChild(a, u) {
          this.delegate.appendChild(a, u),
            this.engine.onInsert(this.namespaceId, u, a, !1);
        }
        insertBefore(a, u, d, g = !0) {
          this.delegate.insertBefore(a, u, d),
            this.engine.onInsert(this.namespaceId, u, a, g);
        }
        removeChild(a, u, d) {
          this.engine.onRemove(this.namespaceId, u, this.delegate);
        }
        selectRootElement(a, u) {
          return this.delegate.selectRootElement(a, u);
        }
        parentNode(a) {
          return this.delegate.parentNode(a);
        }
        nextSibling(a) {
          return this.delegate.nextSibling(a);
        }
        setAttribute(a, u, d, g) {
          this.delegate.setAttribute(a, u, d, g);
        }
        removeAttribute(a, u, d) {
          this.delegate.removeAttribute(a, u, d);
        }
        addClass(a, u) {
          this.delegate.addClass(a, u);
        }
        removeClass(a, u) {
          this.delegate.removeClass(a, u);
        }
        setStyle(a, u, d, g) {
          this.delegate.setStyle(a, u, d, g);
        }
        removeStyle(a, u, d) {
          this.delegate.removeStyle(a, u, d);
        }
        setProperty(a, u, d) {
          "@" == u.charAt(0) && u == de
            ? this.disableAnimations(a, !!d)
            : this.delegate.setProperty(a, u, d);
        }
        setValue(a, u) {
          this.delegate.setValue(a, u);
        }
        listen(a, u, d) {
          return this.delegate.listen(a, u, d);
        }
        disableAnimations(a, u) {
          this.engine.disableAnimations(a, u);
        }
      }
      class ht extends ut {
        constructor(a, u, d, g, M) {
          super(u, d, g, M), (this.factory = a), (this.namespaceId = u);
        }
        setProperty(a, u, d) {
          "@" == u.charAt(0)
            ? "." == u.charAt(1) && u == de
              ? this.disableAnimations(a, (d = void 0 === d || !!d))
              : this.engine.process(this.namespaceId, a, u.slice(1), d)
            : this.delegate.setProperty(a, u, d);
        }
        listen(a, u, d) {
          if ("@" == u.charAt(0)) {
            const g = (function rt(F) {
              switch (F) {
                case "body":
                  return document.body;
                case "document":
                  return document;
                case "window":
                  return window;
                default:
                  return F;
              }
            })(a);
            let M = u.slice(1),
              H = "";
            return (
              "@" != M.charAt(0) &&
                ([M, H] = (function ft(F) {
                  const a = F.indexOf(".");
                  return [F.substring(0, a), F.slice(a + 1)];
                })(M)),
              this.engine.listen(this.namespaceId, g, M, H, (q) => {
                this.factory.scheduleListenerCallback(q._data || -1, d, q);
              })
            );
          }
          return this.delegate.listen(a, u, d);
        }
      }
      const on = [
          { provide: qt._j, useClass: We },
          {
            provide: Vr,
            useFactory: function An() {
              return new xi();
            },
          },
          {
            provide: X,
            useClass: (() => {
              class F extends X {
                constructor(u, d, g, M) {
                  super(u.body, d, g);
                }
                ngOnDestroy() {
                  this.flush();
                }
                static #e = (this.ɵfac = function (d) {
                  return new (d || F)(
                    B.LFG(Ye.K0),
                    B.LFG(Nt),
                    B.LFG(Vr),
                    B.LFG(B.z2F)
                  );
                });
                static #t = (this.ɵprov = B.Yz7({ token: F, factory: F.ɵfac }));
              }
              return F;
            })(),
          },
          {
            provide: B.FYo,
            useFactory: function Pr(F, a, u) {
              return new ke(F, a, u);
            },
            deps: [l.se, X, B.R0b],
          },
        ],
        Fn = [
          { provide: Nt, useFactory: () => new ct() },
          { provide: B.QbO, useValue: "BrowserAnimations" },
          ...on,
        ],
        Nr = [
          { provide: Nt, useClass: vt },
          { provide: B.QbO, useValue: "NoopAnimations" },
          ...on,
        ];
      let ai = (() => {
        class F {
          static withConfig(u) {
            return { ngModule: F, providers: u.disableAnimations ? Nr : Fn };
          }
          static #e = (this.ɵfac = function (d) {
            return new (d || F)();
          });
          static #t = (this.ɵmod = B.oAB({ type: F }));
          static #n = (this.ɵinj = B.cJS({ providers: Fn, imports: [l.b2] }));
        }
        return F;
      })();
      function Bi() {
        return [...Fn];
      }
      var ji = N(4763);
      let rs = (() => {
        class F {
          static #e = (this.ɵfac = function (d) {
            return new (d || F)();
          });
          static #t = (this.ɵmod = B.oAB({ type: F }));
          static #n = (this.ɵinj = B.cJS({ imports: [ji.m] }));
        }
        return F;
      })();
      var is = N(9862),
        Bs = N(4716),
        qs = N(6306),
        Hs = N(8504);
      let ss = (() => {
          class F {
            constructor(u, d, g) {
              (this.router = u),
                (this._securityService = d),
                (this.spinner = g),
                (this.token = "");
            }
            intercept(u, d) {
              return (
                (this.token = this._securityService.getLocalStorage("token")),
                this.spinner.show(),
                this.token &&
                  (u = u.clone({
                    headers: new is.WM({ "access-token": this.token }),
                  })),
                d
                  .handle(u)
                  .pipe(
                    (0, Bs.x)(() => {
                      this.spinner.hide();
                    })
                  )
                  .pipe(
                    (0, qs.K)((g) => {
                      throw (
                        (this.spinner.hide(),
                        this.handleerrors(g),
                        (0, Hs._)(g))
                      );
                    })
                  )
              );
            }
            handleerrors(u) {
              let d = "";
              if (u) {
                switch (u.status) {
                  case 0:
                    d = "Connection Error";
                    break;
                  case 500:
                    d = "Internal Server Error";
                    break;
                  case 403:
                    d = "Authentication Error";
                    break;
                  case 401:
                    d = "Unauthorized User";
                    break;
                  case 403:
                    d = "Forbidden";
                    break;
                  case 404:
                    d = "Not Found";
                    break;
                  case 405:
                    d = "Method Not Allowed";
                    break;
                  case 409:
                    d = "Conflict";
                }
                this.router.navigate(["error"], {
                  queryParams: { errorMessage: d },
                });
              }
            }
            static #e = (this.ɵfac = function (d) {
              return new (d || F)(B.LFG(L.F0), B.LFG(Ie.I), B.LFG(Mt.t2));
            });
            static #t = (this.ɵprov = B.Yz7({ token: F, factory: F.ɵfac }));
          }
          return F;
        })(),
        Gi = (() => {
          class F {
            static #e = (this.ɵfac = function (d) {
              return new (d || F)();
            });
            static #t = (this.ɵmod = B.oAB({ type: F, bootstrap: [In] }));
            static #n = (this.ɵinj = B.cJS({
              providers: [Bi(), { provide: is.TP, useClass: ss, multi: !0 }],
              imports: [l.b2, ai, Be, rs, is.JF, ji.m],
            }));
          }
          return F;
        })();
      l.q6()
        .bootstrapModule(Gi)
        .catch((F) => console.error(F));
    },
    557: (Lt, Fe, N) => {
      N.d(Fe, { e: () => l });
      const l = (L) => {
        let B = document.querySelector(`#${L}`);
        if (B) return B.scrollIntoView({ behavior: "smooth", block: "start" });
      };
    },
    5619: (Lt, Fe, N) => {
      N.d(Fe, { X: () => L });
      var l = N(8645);
      class L extends l.x {
        constructor(Me) {
          super(), (this._value = Me);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(Me) {
          const _e = super._subscribe(Me);
          return !_e.closed && Me.next(this._value), _e;
        }
        getValue() {
          const { hasError: Me, thrownError: _e, _value: we } = this;
          if (Me) throw _e;
          return this._throwIfClosed(), we;
        }
        next(Me) {
          super.next((this._value = Me));
        }
      }
    },
    5592: (Lt, Fe, N) => {
      N.d(Fe, { y: () => Re });
      var l = N(305),
        L = N(7394),
        B = N(4850),
        Me = N(8407),
        _e = N(2653),
        we = N(4674),
        Ie = N(1441);
      let Re = (() => {
        class Be {
          constructor(Ye) {
            Ye && (this._subscribe = Ye);
          }
          lift(Ye) {
            const ot = new Be();
            return (ot.source = this), (ot.operator = Ye), ot;
          }
          subscribe(Ye, ot, pt) {
            const Ue = (function ge(Be) {
              return (
                (Be && Be instanceof l.Lv) ||
                ((function oe(Be) {
                  return (
                    Be &&
                    (0, we.m)(Be.next) &&
                    (0, we.m)(Be.error) &&
                    (0, we.m)(Be.complete)
                  );
                })(Be) &&
                  (0, L.Nn)(Be))
              );
            })(Ye)
              ? Ye
              : new l.Hp(Ye, ot, pt);
            return (
              (0, Ie.x)(() => {
                const { operator: st, source: It } = this;
                Ue.add(
                  st
                    ? st.call(Ue, It)
                    : It
                    ? this._subscribe(Ue)
                    : this._trySubscribe(Ue)
                );
              }),
              Ue
            );
          }
          _trySubscribe(Ye) {
            try {
              return this._subscribe(Ye);
            } catch (ot) {
              Ye.error(ot);
            }
          }
          forEach(Ye, ot) {
            return new (ot = xe(ot))((pt, Ue) => {
              const st = new l.Hp({
                next: (It) => {
                  try {
                    Ye(It);
                  } catch ($e) {
                    Ue($e), st.unsubscribe();
                  }
                },
                error: Ue,
                complete: pt,
              });
              this.subscribe(st);
            });
          }
          _subscribe(Ye) {
            var ot;
            return null === (ot = this.source) || void 0 === ot
              ? void 0
              : ot.subscribe(Ye);
          }
          [B.L]() {
            return this;
          }
          pipe(...Ye) {
            return (0, Me.U)(Ye)(this);
          }
          toPromise(Ye) {
            return new (Ye = xe(Ye))((ot, pt) => {
              let Ue;
              this.subscribe(
                (st) => (Ue = st),
                (st) => pt(st),
                () => ot(Ue)
              );
            });
          }
        }
        return (Be.create = (et) => new Be(et)), Be;
      })();
      function xe(Be) {
        var et;
        return null !== (et = Be ?? _e.config.Promise) && void 0 !== et
          ? et
          : Promise;
      }
    },
    8645: (Lt, Fe, N) => {
      N.d(Fe, { x: () => Ie });
      var l = N(5592),
        L = N(7394);
      const Me = (0, N(2306).d)(
        (xe) =>
          function () {
            xe(this),
              (this.name = "ObjectUnsubscribedError"),
              (this.message = "object unsubscribed");
          }
      );
      var _e = N(9039),
        we = N(1441);
      let Ie = (() => {
        class xe extends l.y {
          constructor() {
            super(),
              (this.closed = !1),
              (this.currentObservers = null),
              (this.observers = []),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          lift(ge) {
            const Be = new Re(this, this);
            return (Be.operator = ge), Be;
          }
          _throwIfClosed() {
            if (this.closed) throw new Me();
          }
          next(ge) {
            (0, we.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.currentObservers ||
                  (this.currentObservers = Array.from(this.observers));
                for (const Be of this.currentObservers) Be.next(ge);
              }
            });
          }
          error(ge) {
            (0, we.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                (this.hasError = this.isStopped = !0), (this.thrownError = ge);
                const { observers: Be } = this;
                for (; Be.length; ) Be.shift().error(ge);
              }
            });
          }
          complete() {
            (0, we.x)(() => {
              if ((this._throwIfClosed(), !this.isStopped)) {
                this.isStopped = !0;
                const { observers: ge } = this;
                for (; ge.length; ) ge.shift().complete();
              }
            });
          }
          unsubscribe() {
            (this.isStopped = this.closed = !0),
              (this.observers = this.currentObservers = null);
          }
          get observed() {
            var ge;
            return (
              (null === (ge = this.observers) || void 0 === ge
                ? void 0
                : ge.length) > 0
            );
          }
          _trySubscribe(ge) {
            return this._throwIfClosed(), super._trySubscribe(ge);
          }
          _subscribe(ge) {
            return (
              this._throwIfClosed(),
              this._checkFinalizedStatuses(ge),
              this._innerSubscribe(ge)
            );
          }
          _innerSubscribe(ge) {
            const { hasError: Be, isStopped: et, observers: Ye } = this;
            return Be || et
              ? L.Lc
              : ((this.currentObservers = null),
                Ye.push(ge),
                new L.w0(() => {
                  (this.currentObservers = null), (0, _e.P)(Ye, ge);
                }));
          }
          _checkFinalizedStatuses(ge) {
            const { hasError: Be, thrownError: et, isStopped: Ye } = this;
            Be ? ge.error(et) : Ye && ge.complete();
          }
          asObservable() {
            const ge = new l.y();
            return (ge.source = this), ge;
          }
        }
        return (xe.create = (oe, ge) => new Re(oe, ge)), xe;
      })();
      class Re extends Ie {
        constructor(oe, ge) {
          super(), (this.destination = oe), (this.source = ge);
        }
        next(oe) {
          var ge, Be;
          null ===
            (Be =
              null === (ge = this.destination) || void 0 === ge
                ? void 0
                : ge.next) ||
            void 0 === Be ||
            Be.call(ge, oe);
        }
        error(oe) {
          var ge, Be;
          null ===
            (Be =
              null === (ge = this.destination) || void 0 === ge
                ? void 0
                : ge.error) ||
            void 0 === Be ||
            Be.call(ge, oe);
        }
        complete() {
          var oe, ge;
          null ===
            (ge =
              null === (oe = this.destination) || void 0 === oe
                ? void 0
                : oe.complete) ||
            void 0 === ge ||
            ge.call(oe);
        }
        _subscribe(oe) {
          var ge, Be;
          return null !==
            (Be =
              null === (ge = this.source) || void 0 === ge
                ? void 0
                : ge.subscribe(oe)) && void 0 !== Be
            ? Be
            : L.Lc;
        }
      }
    },
    305: (Lt, Fe, N) => {
      N.d(Fe, { Hp: () => pt, Lv: () => Be });
      var l = N(4674),
        L = N(7394),
        B = N(2653),
        Me = N(3894),
        _e = N(2420);
      const we = xe("C", void 0, void 0);
      function xe(K, Se, J) {
        return { kind: K, value: Se, error: J };
      }
      var oe = N(7599),
        ge = N(1441);
      class Be extends L.w0 {
        constructor(Se) {
          super(),
            (this.isStopped = !1),
            Se
              ? ((this.destination = Se), (0, L.Nn)(Se) && Se.add(this))
              : (this.destination = $e);
        }
        static create(Se, J, De) {
          return new pt(Se, J, De);
        }
        next(Se) {
          this.isStopped
            ? It(
                (function Re(K) {
                  return xe("N", K, void 0);
                })(Se),
                this
              )
            : this._next(Se);
        }
        error(Se) {
          this.isStopped
            ? It(
                (function Ie(K) {
                  return xe("E", void 0, K);
                })(Se),
                this
              )
            : ((this.isStopped = !0), this._error(Se));
        }
        complete() {
          this.isStopped
            ? It(we, this)
            : ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed ||
            ((this.isStopped = !0),
            super.unsubscribe(),
            (this.destination = null));
        }
        _next(Se) {
          this.destination.next(Se);
        }
        _error(Se) {
          try {
            this.destination.error(Se);
          } finally {
            this.unsubscribe();
          }
        }
        _complete() {
          try {
            this.destination.complete();
          } finally {
            this.unsubscribe();
          }
        }
      }
      const et = Function.prototype.bind;
      function Ye(K, Se) {
        return et.call(K, Se);
      }
      class ot {
        constructor(Se) {
          this.partialObserver = Se;
        }
        next(Se) {
          const { partialObserver: J } = this;
          if (J.next)
            try {
              J.next(Se);
            } catch (De) {
              Ue(De);
            }
        }
        error(Se) {
          const { partialObserver: J } = this;
          if (J.error)
            try {
              J.error(Se);
            } catch (De) {
              Ue(De);
            }
          else Ue(Se);
        }
        complete() {
          const { partialObserver: Se } = this;
          if (Se.complete)
            try {
              Se.complete();
            } catch (J) {
              Ue(J);
            }
        }
      }
      class pt extends Be {
        constructor(Se, J, De) {
          let ye;
          if ((super(), (0, l.m)(Se) || !Se))
            ye = {
              next: Se ?? void 0,
              error: J ?? void 0,
              complete: De ?? void 0,
            };
          else {
            let me;
            this && B.config.useDeprecatedNextContext
              ? ((me = Object.create(Se)),
                (me.unsubscribe = () => this.unsubscribe()),
                (ye = {
                  next: Se.next && Ye(Se.next, me),
                  error: Se.error && Ye(Se.error, me),
                  complete: Se.complete && Ye(Se.complete, me),
                }))
              : (ye = Se);
          }
          this.destination = new ot(ye);
        }
      }
      function Ue(K) {
        B.config.useDeprecatedSynchronousErrorHandling
          ? (0, ge.O)(K)
          : (0, Me.h)(K);
      }
      function It(K, Se) {
        const { onStoppedNotification: J } = B.config;
        J && oe.z.setTimeout(() => J(K, Se));
      }
      const $e = {
        closed: !0,
        next: _e.Z,
        error: function st(K) {
          throw K;
        },
        complete: _e.Z,
      };
    },
    7394: (Lt, Fe, N) => {
      N.d(Fe, { Lc: () => we, w0: () => _e, Nn: () => Ie });
      var l = N(4674);
      const B = (0, N(2306).d)(
        (xe) =>
          function (ge) {
            xe(this),
              (this.message = ge
                ? `${ge.length} errors occurred during unsubscription:\n${ge
                    .map((Be, et) => `${et + 1}) ${Be.toString()}`)
                    .join("\n  ")}`
                : ""),
              (this.name = "UnsubscriptionError"),
              (this.errors = ge);
          }
      );
      var Me = N(9039);
      class _e {
        constructor(oe) {
          (this.initialTeardown = oe),
            (this.closed = !1),
            (this._parentage = null),
            (this._finalizers = null);
        }
        unsubscribe() {
          let oe;
          if (!this.closed) {
            this.closed = !0;
            const { _parentage: ge } = this;
            if (ge)
              if (((this._parentage = null), Array.isArray(ge)))
                for (const Ye of ge) Ye.remove(this);
              else ge.remove(this);
            const { initialTeardown: Be } = this;
            if ((0, l.m)(Be))
              try {
                Be();
              } catch (Ye) {
                oe = Ye instanceof B ? Ye.errors : [Ye];
              }
            const { _finalizers: et } = this;
            if (et) {
              this._finalizers = null;
              for (const Ye of et)
                try {
                  Re(Ye);
                } catch (ot) {
                  (oe = oe ?? []),
                    ot instanceof B
                      ? (oe = [...oe, ...ot.errors])
                      : oe.push(ot);
                }
            }
            if (oe) throw new B(oe);
          }
        }
        add(oe) {
          var ge;
          if (oe && oe !== this)
            if (this.closed) Re(oe);
            else {
              if (oe instanceof _e) {
                if (oe.closed || oe._hasParent(this)) return;
                oe._addParent(this);
              }
              (this._finalizers =
                null !== (ge = this._finalizers) && void 0 !== ge
                  ? ge
                  : []).push(oe);
            }
        }
        _hasParent(oe) {
          const { _parentage: ge } = this;
          return ge === oe || (Array.isArray(ge) && ge.includes(oe));
        }
        _addParent(oe) {
          const { _parentage: ge } = this;
          this._parentage = Array.isArray(ge)
            ? (ge.push(oe), ge)
            : ge
            ? [ge, oe]
            : oe;
        }
        _removeParent(oe) {
          const { _parentage: ge } = this;
          ge === oe
            ? (this._parentage = null)
            : Array.isArray(ge) && (0, Me.P)(ge, oe);
        }
        remove(oe) {
          const { _finalizers: ge } = this;
          ge && (0, Me.P)(ge, oe), oe instanceof _e && oe._removeParent(this);
        }
      }
      _e.EMPTY = (() => {
        const xe = new _e();
        return (xe.closed = !0), xe;
      })();
      const we = _e.EMPTY;
      function Ie(xe) {
        return (
          xe instanceof _e ||
          (xe &&
            "closed" in xe &&
            (0, l.m)(xe.remove) &&
            (0, l.m)(xe.add) &&
            (0, l.m)(xe.unsubscribe))
        );
      }
      function Re(xe) {
        (0, l.m)(xe) ? xe() : xe.unsubscribe();
      }
    },
    2653: (Lt, Fe, N) => {
      N.d(Fe, { config: () => l });
      const l = {
        onUnhandledError: null,
        onStoppedNotification: null,
        Promise: void 0,
        useDeprecatedSynchronousErrorHandling: !1,
        useDeprecatedNextContext: !1,
      };
    },
    6232: (Lt, Fe, N) => {
      N.d(Fe, { E: () => L });
      const L = new (N(5592).y)((_e) => _e.complete());
    },
    7715: (Lt, Fe, N) => {
      N.d(Fe, { D: () => De });
      var l = N(4829),
        L = N(7103),
        B = N(9360),
        Me = N(8251);
      function _e(ye, me = 0) {
        return (0, B.e)((dt, Ne) => {
          dt.subscribe(
            (0, Me.x)(
              Ne,
              (Mt) => (0, L.f)(Ne, ye, () => Ne.next(Mt), me),
              () => (0, L.f)(Ne, ye, () => Ne.complete(), me),
              (Mt) => (0, L.f)(Ne, ye, () => Ne.error(Mt), me)
            )
          );
        });
      }
      function we(ye, me = 0) {
        return (0, B.e)((dt, Ne) => {
          Ne.add(ye.schedule(() => dt.subscribe(Ne), me));
        });
      }
      var xe = N(5592),
        ge = N(4971),
        Be = N(4674);
      function Ye(ye, me) {
        if (!ye) throw new Error("Iterable cannot be null");
        return new xe.y((dt) => {
          (0, L.f)(dt, me, () => {
            const Ne = ye[Symbol.asyncIterator]();
            (0, L.f)(
              dt,
              me,
              () => {
                Ne.next().then((Mt) => {
                  Mt.done ? dt.complete() : dt.next(Mt.value);
                });
              },
              0,
              !0
            );
          });
        });
      }
      var ot = N(8382),
        pt = N(4026),
        Ue = N(4266),
        st = N(3664),
        It = N(5726),
        $e = N(9853),
        K = N(541);
      function De(ye, me) {
        return me
          ? (function J(ye, me) {
              if (null != ye) {
                if ((0, ot.c)(ye))
                  return (function Ie(ye, me) {
                    return (0, l.Xf)(ye).pipe(we(me), _e(me));
                  })(ye, me);
                if ((0, Ue.z)(ye))
                  return (function oe(ye, me) {
                    return new xe.y((dt) => {
                      let Ne = 0;
                      return me.schedule(function () {
                        Ne === ye.length
                          ? dt.complete()
                          : (dt.next(ye[Ne++]), dt.closed || this.schedule());
                      });
                    });
                  })(ye, me);
                if ((0, pt.t)(ye))
                  return (function Re(ye, me) {
                    return (0, l.Xf)(ye).pipe(we(me), _e(me));
                  })(ye, me);
                if ((0, It.D)(ye)) return Ye(ye, me);
                if ((0, st.T)(ye))
                  return (function et(ye, me) {
                    return new xe.y((dt) => {
                      let Ne;
                      return (
                        (0, L.f)(dt, me, () => {
                          (Ne = ye[ge.h]()),
                            (0, L.f)(
                              dt,
                              me,
                              () => {
                                let Mt, At;
                                try {
                                  ({ value: Mt, done: At } = Ne.next());
                                } catch (Vt) {
                                  return void dt.error(Vt);
                                }
                                At ? dt.complete() : dt.next(Mt);
                              },
                              0,
                              !0
                            );
                        }),
                        () => (0, Be.m)(Ne?.return) && Ne.return()
                      );
                    });
                  })(ye, me);
                if ((0, K.L)(ye))
                  return (function Se(ye, me) {
                    return Ye((0, K.Q)(ye), me);
                  })(ye, me);
              }
              throw (0, $e.z)(ye);
            })(ye, me)
          : (0, l.Xf)(ye);
      }
    },
    4829: (Lt, Fe, N) => {
      N.d(Fe, { Xf: () => et });
      var l = N(7582),
        L = N(4266),
        B = N(4026),
        Me = N(5592),
        _e = N(8382),
        we = N(5726),
        Ie = N(9853),
        Re = N(3664),
        xe = N(541),
        oe = N(4674),
        ge = N(3894),
        Be = N(4850);
      function et(K) {
        if (K instanceof Me.y) return K;
        if (null != K) {
          if ((0, _e.c)(K))
            return (function Ye(K) {
              return new Me.y((Se) => {
                const J = K[Be.L]();
                if ((0, oe.m)(J.subscribe)) return J.subscribe(Se);
                throw new TypeError(
                  "Provided object does not correctly implement Symbol.observable"
                );
              });
            })(K);
          if ((0, L.z)(K))
            return (function ot(K) {
              return new Me.y((Se) => {
                for (let J = 0; J < K.length && !Se.closed; J++) Se.next(K[J]);
                Se.complete();
              });
            })(K);
          if ((0, B.t)(K))
            return (function pt(K) {
              return new Me.y((Se) => {
                K.then(
                  (J) => {
                    Se.closed || (Se.next(J), Se.complete());
                  },
                  (J) => Se.error(J)
                ).then(null, ge.h);
              });
            })(K);
          if ((0, we.D)(K)) return st(K);
          if ((0, Re.T)(K))
            return (function Ue(K) {
              return new Me.y((Se) => {
                for (const J of K) if ((Se.next(J), Se.closed)) return;
                Se.complete();
              });
            })(K);
          if ((0, xe.L)(K))
            return (function It(K) {
              return st((0, xe.Q)(K));
            })(K);
        }
        throw (0, Ie.z)(K);
      }
      function st(K) {
        return new Me.y((Se) => {
          (function $e(K, Se) {
            var J, De, ye, me;
            return (0, l.mG)(this, void 0, void 0, function* () {
              try {
                for (J = (0, l.KL)(K); !(De = yield J.next()).done; )
                  if ((Se.next(De.value), Se.closed)) return;
              } catch (dt) {
                ye = { error: dt };
              } finally {
                try {
                  De && !De.done && (me = J.return) && (yield me.call(J));
                } finally {
                  if (ye) throw ye.error;
                }
              }
              Se.complete();
            });
          })(K, Se).catch((J) => Se.error(J));
        });
      }
    },
    3019: (Lt, Fe, N) => {
      N.d(Fe, { T: () => we });
      var l = N(7537),
        L = N(4829),
        B = N(6232),
        Me = N(4564),
        _e = N(7715);
      function we(...Ie) {
        const Re = (0, Me.yG)(Ie),
          xe = (0, Me._6)(Ie, 1 / 0),
          oe = Ie;
        return oe.length
          ? 1 === oe.length
            ? (0, L.Xf)(oe[0])
            : (0, l.J)(xe)((0, _e.D)(oe, Re))
          : B.E;
      }
    },
    2096: (Lt, Fe, N) => {
      N.d(Fe, { of: () => B });
      var l = N(4564),
        L = N(7715);
      function B(...Me) {
        const _e = (0, l.yG)(Me);
        return (0, L.D)(Me, _e);
      }
    },
    8504: (Lt, Fe, N) => {
      N.d(Fe, { _: () => B });
      var l = N(5592),
        L = N(4674);
      function B(Me, _e) {
        const we = (0, L.m)(Me) ? Me : () => Me,
          Ie = (Re) => Re.error(we());
        return new l.y(_e ? (Re) => _e.schedule(Ie, 0, Re) : Ie);
      }
    },
    8251: (Lt, Fe, N) => {
      N.d(Fe, { x: () => L });
      var l = N(305);
      function L(Me, _e, we, Ie, Re) {
        return new B(Me, _e, we, Ie, Re);
      }
      class B extends l.Lv {
        constructor(_e, we, Ie, Re, xe, oe) {
          super(_e),
            (this.onFinalize = xe),
            (this.shouldUnsubscribe = oe),
            (this._next = we
              ? function (ge) {
                  try {
                    we(ge);
                  } catch (Be) {
                    _e.error(Be);
                  }
                }
              : super._next),
            (this._error = Re
              ? function (ge) {
                  try {
                    Re(ge);
                  } catch (Be) {
                    _e.error(Be);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._error),
            (this._complete = Ie
              ? function () {
                  try {
                    Ie();
                  } catch (ge) {
                    _e.error(ge);
                  } finally {
                    this.unsubscribe();
                  }
                }
              : super._complete);
        }
        unsubscribe() {
          var _e;
          if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
            const { closed: we } = this;
            super.unsubscribe(),
              !we &&
                (null === (_e = this.onFinalize) ||
                  void 0 === _e ||
                  _e.call(this));
          }
        }
      }
    },
    6306: (Lt, Fe, N) => {
      N.d(Fe, { K: () => Me });
      var l = N(4829),
        L = N(8251),
        B = N(9360);
      function Me(_e) {
        return (0, B.e)((we, Ie) => {
          let oe,
            Re = null,
            xe = !1;
          (Re = we.subscribe(
            (0, L.x)(Ie, void 0, void 0, (ge) => {
              (oe = (0, l.Xf)(_e(ge, Me(_e)(we)))),
                Re
                  ? (Re.unsubscribe(), (Re = null), oe.subscribe(Ie))
                  : (xe = !0);
            })
          )),
            xe && (Re.unsubscribe(), (Re = null), oe.subscribe(Ie));
        });
      }
    },
    6328: (Lt, Fe, N) => {
      N.d(Fe, { b: () => B });
      var l = N(1631),
        L = N(4674);
      function B(Me, _e) {
        return (0, L.m)(_e) ? (0, l.z)(Me, _e, 1) : (0, l.z)(Me, 1);
      }
    },
    2181: (Lt, Fe, N) => {
      N.d(Fe, { h: () => B });
      var l = N(9360),
        L = N(8251);
      function B(Me, _e) {
        return (0, l.e)((we, Ie) => {
          let Re = 0;
          we.subscribe(
            (0, L.x)(Ie, (xe) => Me.call(_e, xe, Re++) && Ie.next(xe))
          );
        });
      }
    },
    4716: (Lt, Fe, N) => {
      N.d(Fe, { x: () => L });
      var l = N(9360);
      function L(B) {
        return (0, l.e)((Me, _e) => {
          try {
            Me.subscribe(_e);
          } finally {
            _e.add(B);
          }
        });
      }
    },
    7398: (Lt, Fe, N) => {
      N.d(Fe, { U: () => B });
      var l = N(9360),
        L = N(8251);
      function B(Me, _e) {
        return (0, l.e)((we, Ie) => {
          let Re = 0;
          we.subscribe(
            (0, L.x)(Ie, (xe) => {
              Ie.next(Me.call(_e, xe, Re++));
            })
          );
        });
      }
    },
    7537: (Lt, Fe, N) => {
      N.d(Fe, { J: () => B });
      var l = N(1631),
        L = N(2737);
      function B(Me = 1 / 0) {
        return (0, l.z)(L.y, Me);
      }
    },
    1631: (Lt, Fe, N) => {
      N.d(Fe, { z: () => Re });
      var l = N(7398),
        L = N(4829),
        B = N(9360),
        Me = N(7103),
        _e = N(8251),
        Ie = N(4674);
      function Re(xe, oe, ge = 1 / 0) {
        return (0, Ie.m)(oe)
          ? Re(
              (Be, et) =>
                (0, l.U)((Ye, ot) => oe(Be, Ye, et, ot))((0, L.Xf)(xe(Be, et))),
              ge
            )
          : ("number" == typeof oe && (ge = oe),
            (0, B.e)((Be, et) =>
              (function we(xe, oe, ge, Be, et, Ye, ot, pt) {
                const Ue = [];
                let st = 0,
                  It = 0,
                  $e = !1;
                const K = () => {
                    $e && !Ue.length && !st && oe.complete();
                  },
                  Se = (De) => (st < Be ? J(De) : Ue.push(De)),
                  J = (De) => {
                    Ye && oe.next(De), st++;
                    let ye = !1;
                    (0, L.Xf)(ge(De, It++)).subscribe(
                      (0, _e.x)(
                        oe,
                        (me) => {
                          et?.(me), Ye ? Se(me) : oe.next(me);
                        },
                        () => {
                          ye = !0;
                        },
                        void 0,
                        () => {
                          if (ye)
                            try {
                              for (st--; Ue.length && st < Be; ) {
                                const me = Ue.shift();
                                ot ? (0, Me.f)(oe, ot, () => J(me)) : J(me);
                              }
                              K();
                            } catch (me) {
                              oe.error(me);
                            }
                        }
                      )
                    );
                  };
                return (
                  xe.subscribe(
                    (0, _e.x)(oe, Se, () => {
                      ($e = !0), K();
                    })
                  ),
                  () => {
                    pt?.();
                  }
                );
              })(Be, et, xe, ge)
            ));
      }
    },
    4664: (Lt, Fe, N) => {
      N.d(Fe, { w: () => Me });
      var l = N(4829),
        L = N(9360),
        B = N(8251);
      function Me(_e, we) {
        return (0, L.e)((Ie, Re) => {
          let xe = null,
            oe = 0,
            ge = !1;
          const Be = () => ge && !xe && Re.complete();
          Ie.subscribe(
            (0, B.x)(
              Re,
              (et) => {
                xe?.unsubscribe();
                let Ye = 0;
                const ot = oe++;
                (0, l.Xf)(_e(et, ot)).subscribe(
                  (xe = (0, B.x)(
                    Re,
                    (pt) => Re.next(we ? we(et, pt, ot, Ye++) : pt),
                    () => {
                      (xe = null), Be();
                    }
                  ))
                );
              },
              () => {
                (ge = !0), Be();
              }
            )
          );
        });
      }
    },
    8180: (Lt, Fe, N) => {
      N.d(Fe, { q: () => Me });
      var l = N(6232),
        L = N(9360),
        B = N(8251);
      function Me(_e) {
        return _e <= 0
          ? () => l.E
          : (0, L.e)((we, Ie) => {
              let Re = 0;
              we.subscribe(
                (0, B.x)(Ie, (xe) => {
                  ++Re <= _e && (Ie.next(xe), _e <= Re && Ie.complete());
                })
              );
            });
      }
    },
    9773: (Lt, Fe, N) => {
      N.d(Fe, { R: () => _e });
      var l = N(9360),
        L = N(8251),
        B = N(4829),
        Me = N(2420);
      function _e(we) {
        return (0, l.e)((Ie, Re) => {
          (0, B.Xf)(we).subscribe((0, L.x)(Re, () => Re.complete(), Me.Z)),
            !Re.closed && Ie.subscribe(Re);
        });
      }
    },
    7599: (Lt, Fe, N) => {
      N.d(Fe, { z: () => l });
      const l = {
        setTimeout(L, B, ...Me) {
          const { delegate: _e } = l;
          return _e?.setTimeout
            ? _e.setTimeout(L, B, ...Me)
            : setTimeout(L, B, ...Me);
        },
        clearTimeout(L) {
          const { delegate: B } = l;
          return (B?.clearTimeout || clearTimeout)(L);
        },
        delegate: void 0,
      };
    },
    4971: (Lt, Fe, N) => {
      N.d(Fe, { h: () => L });
      const L = (function l() {
        return "function" == typeof Symbol && Symbol.iterator
          ? Symbol.iterator
          : "@@iterator";
      })();
    },
    4850: (Lt, Fe, N) => {
      N.d(Fe, { L: () => l });
      const l =
        ("function" == typeof Symbol && Symbol.observable) || "@@observable";
    },
    4564: (Lt, Fe, N) => {
      N.d(Fe, { _6: () => we, jO: () => Me, yG: () => _e });
      var l = N(4674);
      function B(Ie) {
        return Ie[Ie.length - 1];
      }
      function Me(Ie) {
        return (0, l.m)(B(Ie)) ? Ie.pop() : void 0;
      }
      function _e(Ie) {
        return (function L(Ie) {
          return Ie && (0, l.m)(Ie.schedule);
        })(B(Ie))
          ? Ie.pop()
          : void 0;
      }
      function we(Ie, Re) {
        return "number" == typeof B(Ie) ? Ie.pop() : Re;
      }
    },
    7453: (Lt, Fe, N) => {
      N.d(Fe, { D: () => _e });
      const { isArray: l } = Array,
        { getPrototypeOf: L, prototype: B, keys: Me } = Object;
      function _e(Ie) {
        if (1 === Ie.length) {
          const Re = Ie[0];
          if (l(Re)) return { args: Re, keys: null };
          if (
            (function we(Ie) {
              return Ie && "object" == typeof Ie && L(Ie) === B;
            })(Re)
          ) {
            const xe = Me(Re);
            return { args: xe.map((oe) => Re[oe]), keys: xe };
          }
        }
        return { args: Ie, keys: null };
      }
    },
    9039: (Lt, Fe, N) => {
      function l(L, B) {
        if (L) {
          const Me = L.indexOf(B);
          0 <= Me && L.splice(Me, 1);
        }
      }
      N.d(Fe, { P: () => l });
    },
    2306: (Lt, Fe, N) => {
      function l(L) {
        const Me = L((_e) => {
          Error.call(_e), (_e.stack = new Error().stack);
        });
        return (
          (Me.prototype = Object.create(Error.prototype)),
          (Me.prototype.constructor = Me),
          Me
        );
      }
      N.d(Fe, { d: () => l });
    },
    2714: (Lt, Fe, N) => {
      function l(L, B) {
        return L.reduce((Me, _e, we) => ((Me[_e] = B[we]), Me), {});
      }
      N.d(Fe, { n: () => l });
    },
    1441: (Lt, Fe, N) => {
      N.d(Fe, { O: () => Me, x: () => B });
      var l = N(2653);
      let L = null;
      function B(_e) {
        if (l.config.useDeprecatedSynchronousErrorHandling) {
          const we = !L;
          if ((we && (L = { errorThrown: !1, error: null }), _e(), we)) {
            const { errorThrown: Ie, error: Re } = L;
            if (((L = null), Ie)) throw Re;
          }
        } else _e();
      }
      function Me(_e) {
        l.config.useDeprecatedSynchronousErrorHandling &&
          L &&
          ((L.errorThrown = !0), (L.error = _e));
      }
    },
    7103: (Lt, Fe, N) => {
      function l(L, B, Me, _e = 0, we = !1) {
        const Ie = B.schedule(function () {
          Me(), we ? L.add(this.schedule(null, _e)) : this.unsubscribe();
        }, _e);
        if ((L.add(Ie), !we)) return Ie;
      }
      N.d(Fe, { f: () => l });
    },
    2737: (Lt, Fe, N) => {
      function l(L) {
        return L;
      }
      N.d(Fe, { y: () => l });
    },
    4266: (Lt, Fe, N) => {
      N.d(Fe, { z: () => l });
      const l = (L) =>
        L && "number" == typeof L.length && "function" != typeof L;
    },
    5726: (Lt, Fe, N) => {
      N.d(Fe, { D: () => L });
      var l = N(4674);
      function L(B) {
        return Symbol.asyncIterator && (0, l.m)(B?.[Symbol.asyncIterator]);
      }
    },
    4674: (Lt, Fe, N) => {
      function l(L) {
        return "function" == typeof L;
      }
      N.d(Fe, { m: () => l });
    },
    8382: (Lt, Fe, N) => {
      N.d(Fe, { c: () => B });
      var l = N(4850),
        L = N(4674);
      function B(Me) {
        return (0, L.m)(Me[l.L]);
      }
    },
    3664: (Lt, Fe, N) => {
      N.d(Fe, { T: () => B });
      var l = N(4971),
        L = N(4674);
      function B(Me) {
        return (0, L.m)(Me?.[l.h]);
      }
    },
    4026: (Lt, Fe, N) => {
      N.d(Fe, { t: () => L });
      var l = N(4674);
      function L(B) {
        return (0, l.m)(B?.then);
      }
    },
    541: (Lt, Fe, N) => {
      N.d(Fe, { L: () => Me, Q: () => B });
      var l = N(7582),
        L = N(4674);
      function B(_e) {
        return (0, l.FC)(this, arguments, function* () {
          const Ie = _e.getReader();
          try {
            for (;;) {
              const { value: Re, done: xe } = yield (0, l.qq)(Ie.read());
              if (xe) return yield (0, l.qq)(void 0);
              yield yield (0, l.qq)(Re);
            }
          } finally {
            Ie.releaseLock();
          }
        });
      }
      function Me(_e) {
        return (0, L.m)(_e?.getReader);
      }
    },
    9360: (Lt, Fe, N) => {
      N.d(Fe, { A: () => L, e: () => B });
      var l = N(4674);
      function L(Me) {
        return (0, l.m)(Me?.lift);
      }
      function B(Me) {
        return (_e) => {
          if (L(_e))
            return _e.lift(function (we) {
              try {
                return Me(we, this);
              } catch (Ie) {
                this.error(Ie);
              }
            });
          throw new TypeError("Unable to lift unknown Observable type");
        };
      }
    },
    7400: (Lt, Fe, N) => {
      N.d(Fe, { Z: () => Me });
      var l = N(7398);
      const { isArray: L } = Array;
      function Me(_e) {
        return (0, l.U)((we) =>
          (function B(_e, we) {
            return L(we) ? _e(...we) : _e(we);
          })(_e, we)
        );
      }
    },
    2420: (Lt, Fe, N) => {
      function l() {}
      N.d(Fe, { Z: () => l });
    },
    8407: (Lt, Fe, N) => {
      N.d(Fe, { U: () => B, z: () => L });
      var l = N(2737);
      function L(...Me) {
        return B(Me);
      }
      function B(Me) {
        return 0 === Me.length
          ? l.y
          : 1 === Me.length
          ? Me[0]
          : function (we) {
              return Me.reduce((Ie, Re) => Re(Ie), we);
            };
      }
    },
    3894: (Lt, Fe, N) => {
      N.d(Fe, { h: () => B });
      var l = N(2653),
        L = N(7599);
      function B(Me) {
        L.z.setTimeout(() => {
          const { onUnhandledError: _e } = l.config;
          if (!_e) throw Me;
          _e(Me);
        });
      }
    },
    9853: (Lt, Fe, N) => {
      function l(L) {
        return new TypeError(
          `You provided ${
            null !== L && "object" == typeof L ? "an invalid object" : `'${L}'`
          } where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.`
        );
      }
      N.d(Fe, { z: () => l });
    },
    6825: (Lt, Fe, N) => {
      N.d(Fe, {
        F4: () => oe,
        IO: () => ot,
        LC: () => L,
        SB: () => xe,
        X$: () => Me,
        ZE: () => st,
        ZN: () => Ue,
        _7: () => Ye,
        _j: () => l,
        eR: () => ge,
        jt: () => _e,
        k1: () => It,
        l3: () => B,
        oB: () => Re,
        oQ: () => Be,
        pV: () => et,
        ru: () => we,
        vP: () => Ie,
      });
      class l {}
      class L {}
      const B = "*";
      function Me($e, K) {
        return { type: 7, name: $e, definitions: K, options: {} };
      }
      function _e($e, K = null) {
        return { type: 4, styles: K, timings: $e };
      }
      function we($e, K = null) {
        return { type: 3, steps: $e, options: K };
      }
      function Ie($e, K = null) {
        return { type: 2, steps: $e, options: K };
      }
      function Re($e) {
        return { type: 6, styles: $e, offset: null };
      }
      function xe($e, K, Se) {
        return { type: 0, name: $e, styles: K, options: Se };
      }
      function oe($e) {
        return { type: 5, steps: $e };
      }
      function ge($e, K, Se = null) {
        return { type: 1, expr: $e, animation: K, options: Se };
      }
      function Be($e, K = null) {
        return { type: 8, animation: $e, options: K };
      }
      function et($e = null) {
        return { type: 9, options: $e };
      }
      function Ye($e, K = null) {
        return { type: 10, animation: $e, options: K };
      }
      function ot($e, K, Se = null) {
        return { type: 11, selector: $e, animation: K, options: Se };
      }
      class Ue {
        constructor(K = 0, Se = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._originalOnDoneFns = []),
            (this._originalOnStartFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = K + Se);
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((K) => K()),
            (this._onDoneFns = []));
        }
        onStart(K) {
          this._originalOnStartFns.push(K), this._onStartFns.push(K);
        }
        onDone(K) {
          this._originalOnDoneFns.push(K), this._onDoneFns.push(K);
        }
        onDestroy(K) {
          this._onDestroyFns.push(K);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()),
            (this._started = !0);
        }
        triggerMicrotask() {
          queueMicrotask(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((K) => K()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((K) => K()),
            (this._onDestroyFns = []));
        }
        reset() {
          (this._started = !1),
            (this._finished = !1),
            (this._onStartFns = this._originalOnStartFns),
            (this._onDoneFns = this._originalOnDoneFns);
        }
        setPosition(K) {
          this._position = this.totalTime ? K * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(K) {
          const Se = "start" == K ? this._onStartFns : this._onDoneFns;
          Se.forEach((J) => J()), (Se.length = 0);
        }
      }
      class st {
        constructor(K) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = K);
          let Se = 0,
            J = 0,
            De = 0;
          const ye = this.players.length;
          0 == ye
            ? queueMicrotask(() => this._onFinish())
            : this.players.forEach((me) => {
                me.onDone(() => {
                  ++Se == ye && this._onFinish();
                }),
                  me.onDestroy(() => {
                    ++J == ye && this._onDestroy();
                  }),
                  me.onStart(() => {
                    ++De == ye && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce(
              (me, dt) => Math.max(me, dt.totalTime),
              0
            ));
        }
        _onFinish() {
          this._finished ||
            ((this._finished = !0),
            this._onDoneFns.forEach((K) => K()),
            (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((K) => K.init());
        }
        onStart(K) {
          this._onStartFns.push(K);
        }
        _onStart() {
          this.hasStarted() ||
            ((this._started = !0),
            this._onStartFns.forEach((K) => K()),
            (this._onStartFns = []));
        }
        onDone(K) {
          this._onDoneFns.push(K);
        }
        onDestroy(K) {
          this._onDestroyFns.push(K);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(),
            this._onStart(),
            this.players.forEach((K) => K.play());
        }
        pause() {
          this.players.forEach((K) => K.pause());
        }
        restart() {
          this.players.forEach((K) => K.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((K) => K.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((K) => K.destroy()),
            this._onDestroyFns.forEach((K) => K()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((K) => K.reset()),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._started = !1);
        }
        setPosition(K) {
          const Se = K * this.totalTime;
          this.players.forEach((J) => {
            const De = J.totalTime ? Math.min(1, Se / J.totalTime) : 1;
            J.setPosition(De);
          });
        }
        getPosition() {
          const K = this.players.reduce(
            (Se, J) => (null === Se || J.totalTime > Se.totalTime ? J : Se),
            null
          );
          return null != K ? K.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((K) => {
            K.beforeDestroy && K.beforeDestroy();
          });
        }
        triggerCallback(K) {
          const Se = "start" == K ? this._onStartFns : this._onDoneFns;
          Se.forEach((J) => J()), (Se.length = 0);
        }
      }
      const It = "!";
    },
    6814: (Lt, Fe, N) => {
      N.d(Fe, {
        Do: () => pt,
        EM: () => sn,
        HT: () => Me,
        JF: () => Gn,
        K0: () => we,
        Mx: () => jn,
        NF: () => mr,
        O5: () => Br,
        PC: () => Sr,
        PM: () => Vr,
        S$: () => et,
        V_: () => Re,
        Ye: () => Ue,
        b0: () => ot,
        bD: () => Qt,
        ez: () => Rt,
        mk: () => Mn,
        q: () => B,
        sg: () => qn,
        w_: () => _e,
      });
      var l = N(4769);
      let L = null;
      function B() {
        return L;
      }
      function Me(a) {
        L || (L = a);
      }
      class _e {}
      const we = new l.OlP("DocumentToken");
      let Ie = (() => {
        class a {
          historyGo(d) {
            throw new Error("Not implemented");
          }
          static #e = (this.ɵfac = function (g) {
            return new (g || a)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: a,
            factory: function () {
              return (0, l.f3M)(xe);
            },
            providedIn: "platform",
          }));
        }
        return a;
      })();
      const Re = new l.OlP("Location Initialized");
      let xe = (() => {
        class a extends Ie {
          constructor() {
            super(),
              (this._doc = (0, l.f3M)(we)),
              (this._location = window.location),
              (this._history = window.history);
          }
          getBaseHrefFromDOM() {
            return B().getBaseHref(this._doc);
          }
          onPopState(d) {
            const g = B().getGlobalEventTarget(this._doc, "window");
            return (
              g.addEventListener("popstate", d, !1),
              () => g.removeEventListener("popstate", d)
            );
          }
          onHashChange(d) {
            const g = B().getGlobalEventTarget(this._doc, "window");
            return (
              g.addEventListener("hashchange", d, !1),
              () => g.removeEventListener("hashchange", d)
            );
          }
          get href() {
            return this._location.href;
          }
          get protocol() {
            return this._location.protocol;
          }
          get hostname() {
            return this._location.hostname;
          }
          get port() {
            return this._location.port;
          }
          get pathname() {
            return this._location.pathname;
          }
          get search() {
            return this._location.search;
          }
          get hash() {
            return this._location.hash;
          }
          set pathname(d) {
            this._location.pathname = d;
          }
          pushState(d, g, M) {
            this._history.pushState(d, g, M);
          }
          replaceState(d, g, M) {
            this._history.replaceState(d, g, M);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          historyGo(d = 0) {
            this._history.go(d);
          }
          getState() {
            return this._history.state;
          }
          static #e = (this.ɵfac = function (g) {
            return new (g || a)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: a,
            factory: function () {
              return new a();
            },
            providedIn: "platform",
          }));
        }
        return a;
      })();
      function oe(a, u) {
        if (0 == a.length) return u;
        if (0 == u.length) return a;
        let d = 0;
        return (
          a.endsWith("/") && d++,
          u.startsWith("/") && d++,
          2 == d ? a + u.substring(1) : 1 == d ? a + u : a + "/" + u
        );
      }
      function ge(a) {
        const u = a.match(/#|\?|$/),
          d = (u && u.index) || a.length;
        return a.slice(0, d - ("/" === a[d - 1] ? 1 : 0)) + a.slice(d);
      }
      function Be(a) {
        return a && "?" !== a[0] ? "?" + a : a;
      }
      let et = (() => {
        class a {
          historyGo(d) {
            throw new Error("Not implemented");
          }
          static #e = (this.ɵfac = function (g) {
            return new (g || a)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: a,
            factory: function () {
              return (0, l.f3M)(ot);
            },
            providedIn: "root",
          }));
        }
        return a;
      })();
      const Ye = new l.OlP("appBaseHref");
      let ot = (() => {
          class a extends et {
            constructor(d, g) {
              super(),
                (this._platformLocation = d),
                (this._removeListenerFns = []),
                (this._baseHref =
                  g ??
                  this._platformLocation.getBaseHrefFromDOM() ??
                  (0, l.f3M)(we).location?.origin ??
                  "");
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(d) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(d),
                this._platformLocation.onHashChange(d)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(d) {
              return oe(this._baseHref, d);
            }
            path(d = !1) {
              const g =
                  this._platformLocation.pathname +
                  Be(this._platformLocation.search),
                M = this._platformLocation.hash;
              return M && d ? `${g}${M}` : g;
            }
            pushState(d, g, M, H) {
              const q = this.prepareExternalUrl(M + Be(H));
              this._platformLocation.pushState(d, g, q);
            }
            replaceState(d, g, M, H) {
              const q = this.prepareExternalUrl(M + Be(H));
              this._platformLocation.replaceState(d, g, q);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(d = 0) {
              this._platformLocation.historyGo?.(d);
            }
            static #e = (this.ɵfac = function (g) {
              return new (g || a)(l.LFG(Ie), l.LFG(Ye, 8));
            });
            static #t = (this.ɵprov = l.Yz7({
              token: a,
              factory: a.ɵfac,
              providedIn: "root",
            }));
          }
          return a;
        })(),
        pt = (() => {
          class a extends et {
            constructor(d, g) {
              super(),
                (this._platformLocation = d),
                (this._baseHref = ""),
                (this._removeListenerFns = []),
                null != g && (this._baseHref = g);
            }
            ngOnDestroy() {
              for (; this._removeListenerFns.length; )
                this._removeListenerFns.pop()();
            }
            onPopState(d) {
              this._removeListenerFns.push(
                this._platformLocation.onPopState(d),
                this._platformLocation.onHashChange(d)
              );
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(d = !1) {
              let g = this._platformLocation.hash;
              return null == g && (g = "#"), g.length > 0 ? g.substring(1) : g;
            }
            prepareExternalUrl(d) {
              const g = oe(this._baseHref, d);
              return g.length > 0 ? "#" + g : g;
            }
            pushState(d, g, M, H) {
              let q = this.prepareExternalUrl(M + Be(H));
              0 == q.length && (q = this._platformLocation.pathname),
                this._platformLocation.pushState(d, g, q);
            }
            replaceState(d, g, M, H) {
              let q = this.prepareExternalUrl(M + Be(H));
              0 == q.length && (q = this._platformLocation.pathname),
                this._platformLocation.replaceState(d, g, q);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
            getState() {
              return this._platformLocation.getState();
            }
            historyGo(d = 0) {
              this._platformLocation.historyGo?.(d);
            }
            static #e = (this.ɵfac = function (g) {
              return new (g || a)(l.LFG(Ie), l.LFG(Ye, 8));
            });
            static #t = (this.ɵprov = l.Yz7({ token: a, factory: a.ɵfac }));
          }
          return a;
        })(),
        Ue = (() => {
          class a {
            constructor(d) {
              (this._subject = new l.vpe()),
                (this._urlChangeListeners = []),
                (this._urlChangeSubscription = null),
                (this._locationStrategy = d);
              const g = this._locationStrategy.getBaseHref();
              (this._basePath = (function K(a) {
                if (new RegExp("^(https?:)?//").test(a)) {
                  const [, d] = a.split(/\/\/[^\/]+/);
                  return d;
                }
                return a;
              })(ge($e(g)))),
                this._locationStrategy.onPopState((M) => {
                  this._subject.emit({
                    url: this.path(!0),
                    pop: !0,
                    state: M.state,
                    type: M.type,
                  });
                });
            }
            ngOnDestroy() {
              this._urlChangeSubscription?.unsubscribe(),
                (this._urlChangeListeners = []);
            }
            path(d = !1) {
              return this.normalize(this._locationStrategy.path(d));
            }
            getState() {
              return this._locationStrategy.getState();
            }
            isCurrentPathEqualTo(d, g = "") {
              return this.path() == this.normalize(d + Be(g));
            }
            normalize(d) {
              return a.stripTrailingSlash(
                (function It(a, u) {
                  if (!a || !u.startsWith(a)) return u;
                  const d = u.substring(a.length);
                  return "" === d || ["/", ";", "?", "#"].includes(d[0])
                    ? d
                    : u;
                })(this._basePath, $e(d))
              );
            }
            prepareExternalUrl(d) {
              return (
                d && "/" !== d[0] && (d = "/" + d),
                this._locationStrategy.prepareExternalUrl(d)
              );
            }
            go(d, g = "", M = null) {
              this._locationStrategy.pushState(M, "", d, g),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(d + Be(g)),
                  M
                );
            }
            replaceState(d, g = "", M = null) {
              this._locationStrategy.replaceState(M, "", d, g),
                this._notifyUrlChangeListeners(
                  this.prepareExternalUrl(d + Be(g)),
                  M
                );
            }
            forward() {
              this._locationStrategy.forward();
            }
            back() {
              this._locationStrategy.back();
            }
            historyGo(d = 0) {
              this._locationStrategy.historyGo?.(d);
            }
            onUrlChange(d) {
              return (
                this._urlChangeListeners.push(d),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((g) => {
                    this._notifyUrlChangeListeners(g.url, g.state);
                  })),
                () => {
                  const g = this._urlChangeListeners.indexOf(d);
                  this._urlChangeListeners.splice(g, 1),
                    0 === this._urlChangeListeners.length &&
                      (this._urlChangeSubscription?.unsubscribe(),
                      (this._urlChangeSubscription = null));
                }
              );
            }
            _notifyUrlChangeListeners(d = "", g) {
              this._urlChangeListeners.forEach((M) => M(d, g));
            }
            subscribe(d, g, M) {
              return this._subject.subscribe({
                next: d,
                error: g,
                complete: M,
              });
            }
            static #e = (this.normalizeQueryParams = Be);
            static #t = (this.joinWithSlash = oe);
            static #n = (this.stripTrailingSlash = ge);
            static #r = (this.ɵfac = function (g) {
              return new (g || a)(l.LFG(et));
            });
            static #i = (this.ɵprov = l.Yz7({
              token: a,
              factory: function () {
                return (function st() {
                  return new Ue((0, l.LFG)(et));
                })();
              },
              providedIn: "root",
            }));
          }
          return a;
        })();
      function $e(a) {
        return a.replace(/\/index.html$/, "");
      }
      function jn(a, u) {
        u = encodeURIComponent(u);
        for (const d of a.split(";")) {
          const g = d.indexOf("="),
            [M, H] = -1 == g ? [d, ""] : [d.slice(0, g), d.slice(g + 1)];
          if (M.trim() === u) return decodeURIComponent(H);
        }
        return null;
      }
      const Xt = /\s+/,
        pn = [];
      let Mn = (() => {
        class a {
          constructor(d, g, M, H) {
            (this._iterableDiffers = d),
              (this._keyValueDiffers = g),
              (this._ngEl = M),
              (this._renderer = H),
              (this.initialClasses = pn),
              (this.stateMap = new Map());
          }
          set klass(d) {
            this.initialClasses = null != d ? d.trim().split(Xt) : pn;
          }
          set ngClass(d) {
            this.rawClass = "string" == typeof d ? d.trim().split(Xt) : d;
          }
          ngDoCheck() {
            for (const g of this.initialClasses) this._updateState(g, !0);
            const d = this.rawClass;
            if (Array.isArray(d) || d instanceof Set)
              for (const g of d) this._updateState(g, !0);
            else if (null != d)
              for (const g of Object.keys(d)) this._updateState(g, !!d[g]);
            this._applyStateDiff();
          }
          _updateState(d, g) {
            const M = this.stateMap.get(d);
            void 0 !== M
              ? (M.enabled !== g && ((M.changed = !0), (M.enabled = g)),
                (M.touched = !0))
              : this.stateMap.set(d, { enabled: g, changed: !0, touched: !0 });
          }
          _applyStateDiff() {
            for (const d of this.stateMap) {
              const g = d[0],
                M = d[1];
              M.changed
                ? (this._toggleClass(g, M.enabled), (M.changed = !1))
                : M.touched ||
                  (M.enabled && this._toggleClass(g, !1),
                  this.stateMap.delete(g)),
                (M.touched = !1);
            }
          }
          _toggleClass(d, g) {
            (d = d.trim()).length > 0 &&
              d.split(Xt).forEach((M) => {
                g
                  ? this._renderer.addClass(this._ngEl.nativeElement, M)
                  : this._renderer.removeClass(this._ngEl.nativeElement, M);
              });
          }
          static #e = (this.ɵfac = function (g) {
            return new (g || a)(
              l.Y36(l.ZZ4),
              l.Y36(l.aQg),
              l.Y36(l.SBq),
              l.Y36(l.Qsj)
            );
          });
          static #t = (this.ɵdir = l.lG2({
            type: a,
            selectors: [["", "ngClass", ""]],
            inputs: { klass: ["class", "klass"], ngClass: "ngClass" },
            standalone: !0,
          }));
        }
        return a;
      })();
      class zn {
        constructor(u, d, g, M) {
          (this.$implicit = u),
            (this.ngForOf = d),
            (this.index = g),
            (this.count = M);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let qn = (() => {
        class a {
          set ngForOf(d) {
            (this._ngForOf = d), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(d) {
            this._trackByFn = d;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          constructor(d, g, M) {
            (this._viewContainer = d),
              (this._template = g),
              (this._differs = M),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForTemplate(d) {
            d && (this._template = d);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const d = this._ngForOf;
              !this._differ &&
                d &&
                (this._differ = this._differs
                  .find(d)
                  .create(this.ngForTrackBy));
            }
            if (this._differ) {
              const d = this._differ.diff(this._ngForOf);
              d && this._applyChanges(d);
            }
          }
          _applyChanges(d) {
            const g = this._viewContainer;
            d.forEachOperation((M, H, q) => {
              if (null == M.previousIndex)
                g.createEmbeddedView(
                  this._template,
                  new zn(M.item, this._ngForOf, -1, -1),
                  null === q ? void 0 : q
                );
              else if (null == q) g.remove(null === H ? void 0 : H);
              else if (null !== H) {
                const pe = g.get(H);
                g.move(pe, q), fi(pe, M);
              }
            });
            for (let M = 0, H = g.length; M < H; M++) {
              const pe = g.get(M).context;
              (pe.index = M), (pe.count = H), (pe.ngForOf = this._ngForOf);
            }
            d.forEachIdentityChange((M) => {
              fi(g.get(M.currentIndex), M);
            });
          }
          static ngTemplateContextGuard(d, g) {
            return !0;
          }
          static #e = (this.ɵfac = function (g) {
            return new (g || a)(l.Y36(l.s_b), l.Y36(l.Rgc), l.Y36(l.ZZ4));
          });
          static #t = (this.ɵdir = l.lG2({
            type: a,
            selectors: [["", "ngFor", "", "ngForOf", ""]],
            inputs: {
              ngForOf: "ngForOf",
              ngForTrackBy: "ngForTrackBy",
              ngForTemplate: "ngForTemplate",
            },
            standalone: !0,
          }));
        }
        return a;
      })();
      function fi(a, u) {
        a.context.$implicit = u.item;
      }
      let Br = (() => {
        class a {
          constructor(d, g) {
            (this._viewContainer = d),
              (this._context = new Mr()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = g);
          }
          set ngIf(d) {
            (this._context.$implicit = this._context.ngIf = d),
              this._updateView();
          }
          set ngIfThen(d) {
            yi("ngIfThen", d),
              (this._thenTemplateRef = d),
              (this._thenViewRef = null),
              this._updateView();
          }
          set ngIfElse(d) {
            yi("ngIfElse", d),
              (this._elseTemplateRef = d),
              (this._elseViewRef = null),
              this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(
                    this._thenTemplateRef,
                    this._context
                  )))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(
                    this._elseTemplateRef,
                    this._context
                  )));
          }
          static ngTemplateContextGuard(d, g) {
            return !0;
          }
          static #e = (this.ɵfac = function (g) {
            return new (g || a)(l.Y36(l.s_b), l.Y36(l.Rgc));
          });
          static #t = (this.ɵdir = l.lG2({
            type: a,
            selectors: [["", "ngIf", ""]],
            inputs: {
              ngIf: "ngIf",
              ngIfThen: "ngIfThen",
              ngIfElse: "ngIfElse",
            },
            standalone: !0,
          }));
        }
        return a;
      })();
      class Mr {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function yi(a, u) {
        if (u && !u.createEmbeddedView)
          throw new Error(
            `${a} must be a TemplateRef, but received '${(0, l.AaK)(u)}'.`
          );
      }
      let Sr = (() => {
          class a {
            constructor(d, g, M) {
              (this._ngEl = d),
                (this._differs = g),
                (this._renderer = M),
                (this._ngStyle = null),
                (this._differ = null);
            }
            set ngStyle(d) {
              (this._ngStyle = d),
                !this._differ &&
                  d &&
                  (this._differ = this._differs.find(d).create());
            }
            ngDoCheck() {
              if (this._differ) {
                const d = this._differ.diff(this._ngStyle);
                d && this._applyChanges(d);
              }
            }
            _setStyle(d, g) {
              const [M, H] = d.split("."),
                q = -1 === M.indexOf("-") ? void 0 : l.JOm.DashCase;
              null != g
                ? this._renderer.setStyle(
                    this._ngEl.nativeElement,
                    M,
                    H ? `${g}${H}` : g,
                    q
                  )
                : this._renderer.removeStyle(this._ngEl.nativeElement, M, q);
            }
            _applyChanges(d) {
              d.forEachRemovedItem((g) => this._setStyle(g.key, null)),
                d.forEachAddedItem((g) =>
                  this._setStyle(g.key, g.currentValue)
                ),
                d.forEachChangedItem((g) =>
                  this._setStyle(g.key, g.currentValue)
                );
            }
            static #e = (this.ɵfac = function (g) {
              return new (g || a)(l.Y36(l.SBq), l.Y36(l.aQg), l.Y36(l.Qsj));
            });
            static #t = (this.ɵdir = l.lG2({
              type: a,
              selectors: [["", "ngStyle", ""]],
              inputs: { ngStyle: "ngStyle" },
              standalone: !0,
            }));
          }
          return a;
        })(),
        Rt = (() => {
          class a {
            static #e = (this.ɵfac = function (g) {
              return new (g || a)();
            });
            static #t = (this.ɵmod = l.oAB({ type: a }));
            static #n = (this.ɵinj = l.cJS({}));
          }
          return a;
        })();
      const Qt = "browser",
        Un = "server";
      function mr(a) {
        return a === Qt;
      }
      function Vr(a) {
        return a === Un;
      }
      let sn = (() => {
        class a {
          static #e = (this.ɵprov = (0, l.Yz7)({
            token: a,
            providedIn: "root",
            factory: () => new $r((0, l.LFG)(we), window),
          }));
        }
        return a;
      })();
      class $r {
        constructor(u, d) {
          (this.document = u), (this.window = d), (this.offset = () => [0, 0]);
        }
        setOffset(u) {
          this.offset = Array.isArray(u) ? () => u : u;
        }
        getScrollPosition() {
          return this.supportsScrolling()
            ? [this.window.pageXOffset, this.window.pageYOffset]
            : [0, 0];
        }
        scrollToPosition(u) {
          this.supportsScrolling() && this.window.scrollTo(u[0], u[1]);
        }
        scrollToAnchor(u) {
          if (!this.supportsScrolling()) return;
          const d = (function ts(a, u) {
            const d = a.getElementById(u) || a.getElementsByName(u)[0];
            if (d) return d;
            if (
              "function" == typeof a.createTreeWalker &&
              a.body &&
              "function" == typeof a.body.attachShadow
            ) {
              const g = a.createTreeWalker(a.body, NodeFilter.SHOW_ELEMENT);
              let M = g.currentNode;
              for (; M; ) {
                const H = M.shadowRoot;
                if (H) {
                  const q =
                    H.getElementById(u) || H.querySelector(`[name="${u}"]`);
                  if (q) return q;
                }
                M = g.nextNode();
              }
            }
            return null;
          })(this.document, u);
          d && (this.scrollToElement(d), d.focus());
        }
        setHistoryScrollRestoration(u) {
          this.supportsScrolling() &&
            (this.window.history.scrollRestoration = u);
        }
        scrollToElement(u) {
          const d = u.getBoundingClientRect(),
            g = d.left + this.window.pageXOffset,
            M = d.top + this.window.pageYOffset,
            H = this.offset();
          this.window.scrollTo(g - H[0], M - H[1]);
        }
        supportsScrolling() {
          try {
            return (
              !!this.window &&
              !!this.window.scrollTo &&
              "pageXOffset" in this.window
            );
          } catch {
            return !1;
          }
        }
      }
      class Gn {}
    },
    9862: (Lt, Fe, N) => {
      N.d(Fe, { JF: () => ee, TP: () => Kt, WM: () => et, eN: () => re });
      var l = N(4769),
        L = N(2096),
        B = N(7715),
        Me = N(5592),
        _e = N(6328),
        we = N(2181),
        Ie = N(7398),
        Re = N(4716),
        xe = N(4664),
        oe = N(6814);
      class ge {}
      class Be {}
      class et {
        constructor(se) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            se
              ? "string" == typeof se
                ? (this.lazyInit = () => {
                    (this.headers = new Map()),
                      se.split("\n").forEach((he) => {
                        const je = he.indexOf(":");
                        if (je > 0) {
                          const Et = he.slice(0, je),
                            Dt = Et.toLowerCase(),
                            St = he.slice(je + 1).trim();
                          this.maybeSetNormalizedName(Et, Dt),
                            this.headers.has(Dt)
                              ? this.headers.get(Dt).push(St)
                              : this.headers.set(Dt, [St]);
                        }
                      });
                  })
                : typeof Headers < "u" && se instanceof Headers
                ? ((this.headers = new Map()),
                  se.forEach((he, je) => {
                    this.setHeaderEntries(je, he);
                  }))
                : (this.lazyInit = () => {
                    (this.headers = new Map()),
                      Object.entries(se).forEach(([he, je]) => {
                        this.setHeaderEntries(he, je);
                      });
                  })
              : (this.headers = new Map());
        }
        has(se) {
          return this.init(), this.headers.has(se.toLowerCase());
        }
        get(se) {
          this.init();
          const he = this.headers.get(se.toLowerCase());
          return he && he.length > 0 ? he[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(se) {
          return this.init(), this.headers.get(se.toLowerCase()) || null;
        }
        append(se, he) {
          return this.clone({ name: se, value: he, op: "a" });
        }
        set(se, he) {
          return this.clone({ name: se, value: he, op: "s" });
        }
        delete(se, he) {
          return this.clone({ name: se, value: he, op: "d" });
        }
        maybeSetNormalizedName(se, he) {
          this.normalizedNames.has(he) || this.normalizedNames.set(he, se);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof et
              ? this.copyFrom(this.lazyInit)
              : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate &&
              (this.lazyUpdate.forEach((se) => this.applyUpdate(se)),
              (this.lazyUpdate = null)));
        }
        copyFrom(se) {
          se.init(),
            Array.from(se.headers.keys()).forEach((he) => {
              this.headers.set(he, se.headers.get(he)),
                this.normalizedNames.set(he, se.normalizedNames.get(he));
            });
        }
        clone(se) {
          const he = new et();
          return (
            (he.lazyInit =
              this.lazyInit && this.lazyInit instanceof et
                ? this.lazyInit
                : this),
            (he.lazyUpdate = (this.lazyUpdate || []).concat([se])),
            he
          );
        }
        applyUpdate(se) {
          const he = se.name.toLowerCase();
          switch (se.op) {
            case "a":
            case "s":
              let je = se.value;
              if (("string" == typeof je && (je = [je]), 0 === je.length))
                return;
              this.maybeSetNormalizedName(se.name, he);
              const Et = ("a" === se.op ? this.headers.get(he) : void 0) || [];
              Et.push(...je), this.headers.set(he, Et);
              break;
            case "d":
              const Dt = se.value;
              if (Dt) {
                let St = this.headers.get(he);
                if (!St) return;
                (St = St.filter((On) => -1 === Dt.indexOf(On))),
                  0 === St.length
                    ? (this.headers.delete(he), this.normalizedNames.delete(he))
                    : this.headers.set(he, St);
              } else this.headers.delete(he), this.normalizedNames.delete(he);
          }
        }
        setHeaderEntries(se, he) {
          const je = (Array.isArray(he) ? he : [he]).map((Dt) => Dt.toString()),
            Et = se.toLowerCase();
          this.headers.set(Et, je), this.maybeSetNormalizedName(se, Et);
        }
        forEach(se) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((he) =>
              se(this.normalizedNames.get(he), this.headers.get(he))
            );
        }
      }
      class ot {
        encodeKey(se) {
          return It(se);
        }
        encodeValue(se) {
          return It(se);
        }
        decodeKey(se) {
          return decodeURIComponent(se);
        }
        decodeValue(se) {
          return decodeURIComponent(se);
        }
      }
      const Ue = /%(\d[a-f0-9])/gi,
        st = {
          40: "@",
          "3A": ":",
          24: "$",
          "2C": ",",
          "3B": ";",
          "3D": "=",
          "3F": "?",
          "2F": "/",
        };
      function It(Ce) {
        return encodeURIComponent(Ce).replace(Ue, (se, he) => st[he] ?? se);
      }
      function $e(Ce) {
        return `${Ce}`;
      }
      class K {
        constructor(se = {}) {
          if (
            ((this.updates = null),
            (this.cloneFrom = null),
            (this.encoder = se.encoder || new ot()),
            se.fromString)
          ) {
            if (se.fromObject)
              throw new Error("Cannot specify both fromString and fromObject.");
            this.map = (function pt(Ce, se) {
              const he = new Map();
              return (
                Ce.length > 0 &&
                  Ce.replace(/^\?/, "")
                    .split("&")
                    .forEach((Et) => {
                      const Dt = Et.indexOf("="),
                        [St, On] =
                          -1 == Dt
                            ? [se.decodeKey(Et), ""]
                            : [
                                se.decodeKey(Et.slice(0, Dt)),
                                se.decodeValue(Et.slice(Dt + 1)),
                              ],
                        en = he.get(St) || [];
                      en.push(On), he.set(St, en);
                    }),
                he
              );
            })(se.fromString, this.encoder);
          } else
            se.fromObject
              ? ((this.map = new Map()),
                Object.keys(se.fromObject).forEach((he) => {
                  const je = se.fromObject[he],
                    Et = Array.isArray(je) ? je.map($e) : [$e(je)];
                  this.map.set(he, Et);
                }))
              : (this.map = null);
        }
        has(se) {
          return this.init(), this.map.has(se);
        }
        get(se) {
          this.init();
          const he = this.map.get(se);
          return he ? he[0] : null;
        }
        getAll(se) {
          return this.init(), this.map.get(se) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(se, he) {
          return this.clone({ param: se, value: he, op: "a" });
        }
        appendAll(se) {
          const he = [];
          return (
            Object.keys(se).forEach((je) => {
              const Et = se[je];
              Array.isArray(Et)
                ? Et.forEach((Dt) => {
                    he.push({ param: je, value: Dt, op: "a" });
                  })
                : he.push({ param: je, value: Et, op: "a" });
            }),
            this.clone(he)
          );
        }
        set(se, he) {
          return this.clone({ param: se, value: he, op: "s" });
        }
        delete(se, he) {
          return this.clone({ param: se, value: he, op: "d" });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((se) => {
                const he = this.encoder.encodeKey(se);
                return this.map
                  .get(se)
                  .map((je) => he + "=" + this.encoder.encodeValue(je))
                  .join("&");
              })
              .filter((se) => "" !== se)
              .join("&")
          );
        }
        clone(se) {
          const he = new K({ encoder: this.encoder });
          return (
            (he.cloneFrom = this.cloneFrom || this),
            (he.updates = (this.updates || []).concat(se)),
            he
          );
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom
                .keys()
                .forEach((se) => this.map.set(se, this.cloneFrom.map.get(se))),
              this.updates.forEach((se) => {
                switch (se.op) {
                  case "a":
                  case "s":
                    const he =
                      ("a" === se.op ? this.map.get(se.param) : void 0) || [];
                    he.push($e(se.value)), this.map.set(se.param, he);
                    break;
                  case "d":
                    if (void 0 === se.value) {
                      this.map.delete(se.param);
                      break;
                    }
                    {
                      let je = this.map.get(se.param) || [];
                      const Et = je.indexOf($e(se.value));
                      -1 !== Et && je.splice(Et, 1),
                        je.length > 0
                          ? this.map.set(se.param, je)
                          : this.map.delete(se.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      class J {
        constructor() {
          this.map = new Map();
        }
        set(se, he) {
          return this.map.set(se, he), this;
        }
        get(se) {
          return (
            this.map.has(se) || this.map.set(se, se.defaultValue()),
            this.map.get(se)
          );
        }
        delete(se) {
          return this.map.delete(se), this;
        }
        has(se) {
          return this.map.has(se);
        }
        keys() {
          return this.map.keys();
        }
      }
      function ye(Ce) {
        return typeof ArrayBuffer < "u" && Ce instanceof ArrayBuffer;
      }
      function me(Ce) {
        return typeof Blob < "u" && Ce instanceof Blob;
      }
      function dt(Ce) {
        return typeof FormData < "u" && Ce instanceof FormData;
      }
      class Mt {
        constructor(se, he, je, Et) {
          let Dt;
          if (
            ((this.url = he),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = "json"),
            (this.method = se.toUpperCase()),
            (function De(Ce) {
              switch (Ce) {
                case "DELETE":
                case "GET":
                case "HEAD":
                case "OPTIONS":
                case "JSONP":
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || Et
              ? ((this.body = void 0 !== je ? je : null), (Dt = Et))
              : (Dt = je),
            Dt &&
              ((this.reportProgress = !!Dt.reportProgress),
              (this.withCredentials = !!Dt.withCredentials),
              Dt.responseType && (this.responseType = Dt.responseType),
              Dt.headers && (this.headers = Dt.headers),
              Dt.context && (this.context = Dt.context),
              Dt.params && (this.params = Dt.params)),
            this.headers || (this.headers = new et()),
            this.context || (this.context = new J()),
            this.params)
          ) {
            const St = this.params.toString();
            if (0 === St.length) this.urlWithParams = he;
            else {
              const On = he.indexOf("?");
              this.urlWithParams =
                he + (-1 === On ? "?" : On < he.length - 1 ? "&" : "") + St;
            }
          } else (this.params = new K()), (this.urlWithParams = he);
        }
        serializeBody() {
          return null === this.body
            ? null
            : ye(this.body) ||
              me(this.body) ||
              dt(this.body) ||
              (function Ne(Ce) {
                return (
                  typeof URLSearchParams < "u" && Ce instanceof URLSearchParams
                );
              })(this.body) ||
              "string" == typeof this.body
            ? this.body
            : this.body instanceof K
            ? this.body.toString()
            : "object" == typeof this.body ||
              "boolean" == typeof this.body ||
              Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || dt(this.body)
            ? null
            : me(this.body)
            ? this.body.type || null
            : ye(this.body)
            ? null
            : "string" == typeof this.body
            ? "text/plain"
            : this.body instanceof K
            ? "application/x-www-form-urlencoded;charset=UTF-8"
            : "object" == typeof this.body ||
              "number" == typeof this.body ||
              "boolean" == typeof this.body
            ? "application/json"
            : null;
        }
        clone(se = {}) {
          const he = se.method || this.method,
            je = se.url || this.url,
            Et = se.responseType || this.responseType,
            Dt = void 0 !== se.body ? se.body : this.body,
            St =
              void 0 !== se.withCredentials
                ? se.withCredentials
                : this.withCredentials,
            On =
              void 0 !== se.reportProgress
                ? se.reportProgress
                : this.reportProgress;
          let en = se.headers || this.headers,
            sr = se.params || this.params;
          const Ln = se.context ?? this.context;
          return (
            void 0 !== se.setHeaders &&
              (en = Object.keys(se.setHeaders).reduce(
                (gr, er) => gr.set(er, se.setHeaders[er]),
                en
              )),
            se.setParams &&
              (sr = Object.keys(se.setParams).reduce(
                (gr, er) => gr.set(er, se.setParams[er]),
                sr
              )),
            new Mt(he, je, Dt, {
              params: sr,
              headers: en,
              context: Ln,
              reportProgress: On,
              responseType: Et,
              withCredentials: St,
            })
          );
        }
      }
      var At = (function (Ce) {
        return (
          (Ce[(Ce.Sent = 0)] = "Sent"),
          (Ce[(Ce.UploadProgress = 1)] = "UploadProgress"),
          (Ce[(Ce.ResponseHeader = 2)] = "ResponseHeader"),
          (Ce[(Ce.DownloadProgress = 3)] = "DownloadProgress"),
          (Ce[(Ce.Response = 4)] = "Response"),
          (Ce[(Ce.User = 5)] = "User"),
          Ce
        );
      })(At || {});
      class Vt {
        constructor(se, he = 200, je = "OK") {
          (this.headers = se.headers || new et()),
            (this.status = void 0 !== se.status ? se.status : he),
            (this.statusText = se.statusText || je),
            (this.url = se.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class In extends Vt {
        constructor(se = {}) {
          super(se), (this.type = At.ResponseHeader);
        }
        clone(se = {}) {
          return new In({
            headers: se.headers || this.headers,
            status: void 0 !== se.status ? se.status : this.status,
            statusText: se.statusText || this.statusText,
            url: se.url || this.url || void 0,
          });
        }
      }
      class qt extends Vt {
        constructor(se = {}) {
          super(se),
            (this.type = At.Response),
            (this.body = void 0 !== se.body ? se.body : null);
        }
        clone(se = {}) {
          return new qt({
            body: void 0 !== se.body ? se.body : this.body,
            headers: se.headers || this.headers,
            status: void 0 !== se.status ? se.status : this.status,
            statusText: se.statusText || this.statusText,
            url: se.url || this.url || void 0,
          });
        }
      }
      class Ot extends Vt {
        constructor(se) {
          super(se, 0, "Unknown Error"),
            (this.name = "HttpErrorResponse"),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${se.url || "(unknown url)"}`
                : `Http failure response for ${se.url || "(unknown url)"}: ${
                    se.status
                  } ${se.statusText}`),
            (this.error = se.error || null);
        }
      }
      function qe(Ce, se) {
        return {
          body: se,
          headers: Ce.headers,
          context: Ce.context,
          observe: Ce.observe,
          params: Ce.params,
          reportProgress: Ce.reportProgress,
          responseType: Ce.responseType,
          withCredentials: Ce.withCredentials,
        };
      }
      let re = (() => {
        class Ce {
          constructor(he) {
            this.handler = he;
          }
          request(he, je, Et = {}) {
            let Dt;
            if (he instanceof Mt) Dt = he;
            else {
              let en, sr;
              (en = Et.headers instanceof et ? Et.headers : new et(Et.headers)),
                Et.params &&
                  (sr =
                    Et.params instanceof K
                      ? Et.params
                      : new K({ fromObject: Et.params })),
                (Dt = new Mt(he, je, void 0 !== Et.body ? Et.body : null, {
                  headers: en,
                  context: Et.context,
                  params: sr,
                  reportProgress: Et.reportProgress,
                  responseType: Et.responseType || "json",
                  withCredentials: Et.withCredentials,
                }));
            }
            const St = (0, L.of)(Dt).pipe(
              (0, _e.b)((en) => this.handler.handle(en))
            );
            if (he instanceof Mt || "events" === Et.observe) return St;
            const On = St.pipe((0, we.h)((en) => en instanceof qt));
            switch (Et.observe || "body") {
              case "body":
                switch (Dt.responseType) {
                  case "arraybuffer":
                    return On.pipe(
                      (0, Ie.U)((en) => {
                        if (
                          null !== en.body &&
                          !(en.body instanceof ArrayBuffer)
                        )
                          throw new Error("Response is not an ArrayBuffer.");
                        return en.body;
                      })
                    );
                  case "blob":
                    return On.pipe(
                      (0, Ie.U)((en) => {
                        if (null !== en.body && !(en.body instanceof Blob))
                          throw new Error("Response is not a Blob.");
                        return en.body;
                      })
                    );
                  case "text":
                    return On.pipe(
                      (0, Ie.U)((en) => {
                        if (null !== en.body && "string" != typeof en.body)
                          throw new Error("Response is not a string.");
                        return en.body;
                      })
                    );
                  default:
                    return On.pipe((0, Ie.U)((en) => en.body));
                }
              case "response":
                return On;
              default:
                throw new Error(
                  `Unreachable: unhandled observe type ${Et.observe}}`
                );
            }
          }
          delete(he, je = {}) {
            return this.request("DELETE", he, je);
          }
          get(he, je = {}) {
            return this.request("GET", he, je);
          }
          head(he, je = {}) {
            return this.request("HEAD", he, je);
          }
          jsonp(he, je) {
            return this.request("JSONP", he, {
              params: new K().append(je, "JSONP_CALLBACK"),
              observe: "body",
              responseType: "json",
            });
          }
          options(he, je = {}) {
            return this.request("OPTIONS", he, je);
          }
          patch(he, je, Et = {}) {
            return this.request("PATCH", he, qe(Et, je));
          }
          post(he, je, Et = {}) {
            return this.request("POST", he, qe(Et, je));
          }
          put(he, je, Et = {}) {
            return this.request("PUT", he, qe(Et, je));
          }
          static #e = (this.ɵfac = function (je) {
            return new (je || Ce)(l.LFG(ge));
          });
          static #t = (this.ɵprov = l.Yz7({ token: Ce, factory: Ce.ɵfac }));
        }
        return Ce;
      })();
      function Tn(Ce, se) {
        return se(Ce);
      }
      function Pt(Ce, se) {
        return (he, je) => se.intercept(he, { handle: (Et) => Ce(Et, je) });
      }
      const Kt = new l.OlP(""),
        Ge = new l.OlP(""),
        Qe = new l.OlP("");
      function ce() {
        let Ce = null;
        return (se, he) => {
          null === Ce &&
            (Ce = ((0, l.f3M)(Kt, { optional: !0 }) ?? []).reduceRight(Pt, Tn));
          const je = (0, l.f3M)(l.HDt),
            Et = je.add();
          return Ce(se, he).pipe((0, Re.x)(() => je.remove(Et)));
        };
      }
      let He = (() => {
        class Ce extends ge {
          constructor(he, je) {
            super(),
              (this.backend = he),
              (this.injector = je),
              (this.chain = null),
              (this.pendingTasks = (0, l.f3M)(l.HDt));
          }
          handle(he) {
            if (null === this.chain) {
              const Et = Array.from(
                new Set([
                  ...this.injector.get(Ge),
                  ...this.injector.get(Qe, []),
                ])
              );
              this.chain = Et.reduceRight(
                (Dt, St) =>
                  (function ln(Ce, se, he) {
                    return (je, Et) =>
                      he.runInContext(() => se(je, (Dt) => Ce(Dt, Et)));
                  })(Dt, St, this.injector),
                Tn
              );
            }
            const je = this.pendingTasks.add();
            return this.chain(he, (Et) => this.backend.handle(Et)).pipe(
              (0, Re.x)(() => this.pendingTasks.remove(je))
            );
          }
          static #e = (this.ɵfac = function (je) {
            return new (je || Ce)(l.LFG(Be), l.LFG(l.lqb));
          });
          static #t = (this.ɵprov = l.Yz7({ token: Ce, factory: Ce.ɵfac }));
        }
        return Ce;
      })();
      const Dr = /^\)\]\}',?\n/;
      let kr = (() => {
        class Ce {
          constructor(he) {
            this.xhrFactory = he;
          }
          handle(he) {
            if ("JSONP" === he.method) throw new l.vHH(-2800, !1);
            const je = this.xhrFactory;
            return (
              je.ɵloadImpl ? (0, B.D)(je.ɵloadImpl()) : (0, L.of)(null)
            ).pipe(
              (0, xe.w)(
                () =>
                  new Me.y((Dt) => {
                    const St = je.build();
                    if (
                      (St.open(he.method, he.urlWithParams),
                      he.withCredentials && (St.withCredentials = !0),
                      he.headers.forEach((pn, Mn) =>
                        St.setRequestHeader(pn, Mn.join(","))
                      ),
                      he.headers.has("Accept") ||
                        St.setRequestHeader(
                          "Accept",
                          "application/json, text/plain, */*"
                        ),
                      !he.headers.has("Content-Type"))
                    ) {
                      const pn = he.detectContentTypeHeader();
                      null !== pn && St.setRequestHeader("Content-Type", pn);
                    }
                    if (he.responseType) {
                      const pn = he.responseType.toLowerCase();
                      St.responseType = "json" !== pn ? pn : "text";
                    }
                    const On = he.serializeBody();
                    let en = null;
                    const sr = () => {
                        if (null !== en) return en;
                        const pn = St.statusText || "OK",
                          Mn = new et(St.getAllResponseHeaders()),
                          Lr =
                            (function Bn(Ce) {
                              return "responseURL" in Ce && Ce.responseURL
                                ? Ce.responseURL
                                : /^X-Request-URL:/m.test(
                                    Ce.getAllResponseHeaders()
                                  )
                                ? Ce.getResponseHeader("X-Request-URL")
                                : null;
                            })(St) || he.url;
                        return (
                          (en = new In({
                            headers: Mn,
                            status: St.status,
                            statusText: pn,
                            url: Lr,
                          })),
                          en
                        );
                      },
                      Ln = () => {
                        let {
                            headers: pn,
                            status: Mn,
                            statusText: Lr,
                            url: qr,
                          } = sr(),
                          zn = null;
                        204 !== Mn &&
                          (zn =
                            typeof St.response > "u"
                              ? St.responseText
                              : St.response),
                          0 === Mn && (Mn = zn ? 200 : 0);
                        let qn = Mn >= 200 && Mn < 300;
                        if (
                          "json" === he.responseType &&
                          "string" == typeof zn
                        ) {
                          const fi = zn;
                          zn = zn.replace(Dr, "");
                          try {
                            zn = "" !== zn ? JSON.parse(zn) : null;
                          } catch (mi) {
                            (zn = fi),
                              qn && ((qn = !1), (zn = { error: mi, text: zn }));
                          }
                        }
                        qn
                          ? (Dt.next(
                              new qt({
                                body: zn,
                                headers: pn,
                                status: Mn,
                                statusText: Lr,
                                url: qr || void 0,
                              })
                            ),
                            Dt.complete())
                          : Dt.error(
                              new Ot({
                                error: zn,
                                headers: pn,
                                status: Mn,
                                statusText: Lr,
                                url: qr || void 0,
                              })
                            );
                      },
                      gr = (pn) => {
                        const { url: Mn } = sr(),
                          Lr = new Ot({
                            error: pn,
                            status: St.status || 0,
                            statusText: St.statusText || "Unknown Error",
                            url: Mn || void 0,
                          });
                        Dt.error(Lr);
                      };
                    let er = !1;
                    const jn = (pn) => {
                        er || (Dt.next(sr()), (er = !0));
                        let Mn = {
                          type: At.DownloadProgress,
                          loaded: pn.loaded,
                        };
                        pn.lengthComputable && (Mn.total = pn.total),
                          "text" === he.responseType &&
                            St.responseText &&
                            (Mn.partialText = St.responseText),
                          Dt.next(Mn);
                      },
                      Xt = (pn) => {
                        let Mn = { type: At.UploadProgress, loaded: pn.loaded };
                        pn.lengthComputable && (Mn.total = pn.total),
                          Dt.next(Mn);
                      };
                    return (
                      St.addEventListener("load", Ln),
                      St.addEventListener("error", gr),
                      St.addEventListener("timeout", gr),
                      St.addEventListener("abort", gr),
                      he.reportProgress &&
                        (St.addEventListener("progress", jn),
                        null !== On &&
                          St.upload &&
                          St.upload.addEventListener("progress", Xt)),
                      St.send(On),
                      Dt.next({ type: At.Sent }),
                      () => {
                        St.removeEventListener("error", gr),
                          St.removeEventListener("abort", gr),
                          St.removeEventListener("load", Ln),
                          St.removeEventListener("timeout", gr),
                          he.reportProgress &&
                            (St.removeEventListener("progress", jn),
                            null !== On &&
                              St.upload &&
                              St.upload.removeEventListener("progress", Xt)),
                          St.readyState !== St.DONE && St.abort();
                      }
                    );
                  })
              )
            );
          }
          static #e = (this.ɵfac = function (je) {
            return new (je || Ce)(l.LFG(oe.JF));
          });
          static #t = (this.ɵprov = l.Yz7({ token: Ce, factory: Ce.ɵfac }));
        }
        return Ce;
      })();
      const Wt = new l.OlP("XSRF_ENABLED"),
        Vn = new l.OlP("XSRF_COOKIE_NAME", {
          providedIn: "root",
          factory: () => "XSRF-TOKEN",
        }),
        _n = new l.OlP("XSRF_HEADER_NAME", {
          providedIn: "root",
          factory: () => "X-XSRF-TOKEN",
        });
      class gi {}
      let wn = (() => {
        class Ce {
          constructor(he, je, Et) {
            (this.doc = he),
              (this.platform = je),
              (this.cookieName = Et),
              (this.lastCookieString = ""),
              (this.lastToken = null),
              (this.parseCount = 0);
          }
          getToken() {
            if ("server" === this.platform) return null;
            const he = this.doc.cookie || "";
            return (
              he !== this.lastCookieString &&
                (this.parseCount++,
                (this.lastToken = (0, oe.Mx)(he, this.cookieName)),
                (this.lastCookieString = he)),
              this.lastToken
            );
          }
          static #e = (this.ɵfac = function (je) {
            return new (je || Ce)(l.LFG(oe.K0), l.LFG(l.Lbi), l.LFG(Vn));
          });
          static #t = (this.ɵprov = l.Yz7({ token: Ce, factory: Ce.ɵfac }));
        }
        return Ce;
      })();
      function Yr(Ce, se) {
        const he = Ce.url.toLowerCase();
        if (
          !(0, l.f3M)(Wt) ||
          "GET" === Ce.method ||
          "HEAD" === Ce.method ||
          he.startsWith("http://") ||
          he.startsWith("https://")
        )
          return se(Ce);
        const je = (0, l.f3M)(gi).getToken(),
          Et = (0, l.f3M)(_n);
        return (
          null != je &&
            !Ce.headers.has(Et) &&
            (Ce = Ce.clone({ headers: Ce.headers.set(Et, je) })),
          se(Ce)
        );
      }
      var rn = (function (Ce) {
        return (
          (Ce[(Ce.Interceptors = 0)] = "Interceptors"),
          (Ce[(Ce.LegacyInterceptors = 1)] = "LegacyInterceptors"),
          (Ce[(Ce.CustomXsrfConfiguration = 2)] = "CustomXsrfConfiguration"),
          (Ce[(Ce.NoXsrfProtection = 3)] = "NoXsrfProtection"),
          (Ce[(Ce.JsonpSupport = 4)] = "JsonpSupport"),
          (Ce[(Ce.RequestsMadeViaParent = 5)] = "RequestsMadeViaParent"),
          (Ce[(Ce.Fetch = 6)] = "Fetch"),
          Ce
        );
      })(rn || {});
      function cr(...Ce) {
        const se = [
          re,
          kr,
          He,
          { provide: ge, useExisting: He },
          { provide: Be, useExisting: kr },
          { provide: Ge, useValue: Yr, multi: !0 },
          { provide: Wt, useValue: !0 },
          { provide: gi, useClass: wn },
        ];
        for (const he of Ce) se.push(...he.ɵproviders);
        return (0, l.MR2)(se);
      }
      const Tr = new l.OlP("LEGACY_INTERCEPTOR_FN");
      function ur() {
        return (function Yn(Ce, se) {
          return { ɵkind: Ce, ɵproviders: se };
        })(rn.LegacyInterceptors, [
          { provide: Tr, useFactory: ce },
          { provide: Ge, useExisting: Tr, multi: !0 },
        ]);
      }
      let ee = (() => {
        class Ce {
          static #e = (this.ɵfac = function (je) {
            return new (je || Ce)();
          });
          static #t = (this.ɵmod = l.oAB({ type: Ce }));
          static #n = (this.ɵinj = l.cJS({ providers: [cr(ur())] }));
        }
        return Ce;
      })();
    },
    4769: (Lt, Fe, N) => {
      N.d(Fe, {
        QbO: () => Aw,
        tb: () => Of,
        AFp: () => Jh,
        ip1: () => ev,
        hGG: () => $S,
        z2F: () => Pa,
        Ojb: () => Iw,
        sBO: () => SS,
        Sil: () => YC,
        _Vd: () => al,
        EJc: () => zC,
        Xts: () => il,
        SBq: () => ll,
        lqb: () => Zs,
        qLn: () => vo,
        vpe: () => Ks,
        XFs: () => Wt,
        OlP: () => fr,
        zs3: () => Gs,
        ZZ4: () => Ff,
        aQg: () => kf,
        soG: () => Qc,
        YKP: () => Jm,
        h0i: () => $o,
        PXZ: () => yS,
        R0b: () => Li,
        FiY: () => Xl,
        Lbi: () => nd,
        g9A: () => ep,
        Qsj: () => zw,
        FYo: () => op,
        JOm: () => sc,
        q3G: () => Fo,
        tp0: () => Ql,
        Rgc: () => Tl,
        dDg: () => hS,
        eoX: () => lv,
        GfV: () => ap,
        s_b: () => Kc,
        ifc: () => er,
        VuI: () => QS,
        MMx: () => ty,
        Lck: () => PD,
        eFA: () => fv,
        Gpc: () => Se,
        f3M: () => je,
        $WT: () => ii,
        MR2: () => Zu,
        _c5: () => US,
        qFp: () => eT,
        rg0: () => Ft,
        c2e: () => tv,
        zSh: () => Qu,
        HDt: () => nv,
        wAp: () => Aa,
        vHH: () => Ne,
        lri: () => ov,
        rWj: () => av,
        JZr: () => dt,
        EiD: () => Hh,
        mCW: () => pc,
        qzn: () => la,
        JVY: () => J0,
        pB0: () => rw,
        eBb: () => tw,
        L6k: () => ew,
        LAX: () => nw,
        cg1: () => tf,
        kL8: () => Cm,
        dqk: () => wn,
        Z0I: () => pr,
        eJc: () => bf,
        QGY: () => jd,
        F4k: () => Ag,
        RDi: () => W0,
        AaK: () => It,
        z3N: () => ao,
        qOj: () => Pd,
        Xq5: () => ag,
        TTD: () => Hn,
        _Bn: () => Qm,
        jDz: () => ny,
        xp6: () => Pp,
        uIk: () => Rd,
        Tol: () => Xg,
        ekj: () => Xd,
        Suo: () => Py,
        Xpm: () => $i,
        lG2: () => Ei,
        Yz7: () => cn,
        cJS: () => Kn,
        oAB: () => Ji,
        Yjl: () => Di,
        Y36: () => ga,
        _UZ: () => Hd,
        BQk: () => Uc,
        ynx: () => Vc,
        qZA: () => Bc,
        TgZ: () => kc,
        EpF: () => Mg,
        n5z: () => Wl,
        LFG: () => se,
        $8M: () => Za,
        $Z: () => Rp,
        NdJ: () => zd,
        CRH: () => Ny,
        oxw: () => Ng,
        ALo: () => yy,
        lcZ: () => vy,
        Hsn: () => Lg,
        F$t: () => Rg,
        Q6J: () => Ud,
        s9C: () => Gd,
        DdM: () => cy,
        VKq: () => uy,
        WLB: () => dy,
        iGM: () => Oy,
        MAs: () => Dg,
        KtG: () => ka,
        Jf7: () => wp,
        CHM: () => Wo,
        oJD: () => jh,
        LSH: () => Yu,
        P3R: () => Gh,
        Udp: () => Kd,
        YNc: () => bg,
        W1O: () => ky,
        _uU: () => im,
        Oqu: () => Jd,
        hij: () => jc,
        AsE: () => ef,
        Gf: () => xy,
      });
      var l = N(8645),
        L = N(7394),
        B = N(5592),
        Me = N(3019),
        _e = N(5619),
        we = N(2096),
        Ie = N(4829),
        Re = N(305),
        xe = N(9360);
      function oe(e = {}) {
        const {
          connector: t = () => new l.x(),
          resetOnError: n = !0,
          resetOnComplete: r = !0,
          resetOnRefCountZero: s = !0,
        } = e;
        return (c) => {
          let f,
            y,
            C,
            O = 0,
            V = !1,
            ne = !1;
          const ve = () => {
              y?.unsubscribe(), (y = void 0);
            },
            Te = () => {
              ve(), (f = C = void 0), (V = ne = !1);
            },
            it = () => {
              const bt = f;
              Te(), bt?.unsubscribe();
            };
          return (0, xe.e)((bt, kt) => {
            O++, !ne && !V && ve();
            const Zt = (C = C ?? t());
            kt.add(() => {
              O--, 0 === O && !ne && !V && (y = ge(it, s));
            }),
              Zt.subscribe(kt),
              !f &&
                O > 0 &&
                ((f = new Re.Hp({
                  next: (gt) => Zt.next(gt),
                  error: (gt) => {
                    (ne = !0), ve(), (y = ge(Te, n, gt)), Zt.error(gt);
                  },
                  complete: () => {
                    (V = !0), ve(), (y = ge(Te, r)), Zt.complete();
                  },
                })),
                (0, Ie.Xf)(bt).subscribe(f));
          })(c);
        };
      }
      function ge(e, t, ...n) {
        if (!0 === t) return void e();
        if (!1 === t) return;
        const r = new Re.Hp({
          next: () => {
            r.unsubscribe(), e();
          },
        });
        return (0, Ie.Xf)(t(...n)).subscribe(r);
      }
      var Be = N(4664),
        et = N(2737),
        Ye = N(8251);
      function pt(e, t) {
        return e === t;
      }
      function Ue(e) {
        for (let t in e) if (e[t] === Ue) return t;
        throw Error("Could not find renamed property on target object.");
      }
      function st(e, t) {
        for (const n in t)
          t.hasOwnProperty(n) && !e.hasOwnProperty(n) && (e[n] = t[n]);
      }
      function It(e) {
        if ("string" == typeof e) return e;
        if (Array.isArray(e)) return "[" + e.map(It).join(", ") + "]";
        if (null == e) return "" + e;
        if (e.overriddenName) return `${e.overriddenName}`;
        if (e.name) return `${e.name}`;
        const t = e.toString();
        if (null == t) return "" + t;
        const n = t.indexOf("\n");
        return -1 === n ? t : t.substring(0, n);
      }
      function $e(e, t) {
        return null == e || "" === e
          ? null === t
            ? ""
            : t
          : null == t || "" === t
          ? e
          : e + " " + t;
      }
      const K = Ue({ __forward_ref__: Ue });
      function Se(e) {
        return (
          (e.__forward_ref__ = Se),
          (e.toString = function () {
            return It(this());
          }),
          e
        );
      }
      function J(e) {
        return De(e) ? e() : e;
      }
      function De(e) {
        return (
          "function" == typeof e &&
          e.hasOwnProperty(K) &&
          e.__forward_ref__ === Se
        );
      }
      function ye(e) {
        return e && !!e.ɵproviders;
      }
      const dt = "https://g.co/ng/security#xss";
      class Ne extends Error {
        constructor(t, n) {
          super(
            (function Mt(e, t) {
              return `NG0${Math.abs(e)}${t ? ": " + t : ""}`;
            })(t, n)
          ),
            (this.code = t);
        }
      }
      function At(e) {
        return "string" == typeof e ? e : null == e ? "" : String(e);
      }
      function qe(e, t) {
        throw new Ne(-201, !1);
      }
      function Qe(e, t) {
        null == e &&
          (function ce(e, t, n, r) {
            throw new Error(
              `ASSERTION ERROR: ${e}` +
                (null == r ? "" : ` [Expected=> ${n} ${r} ${t} <=Actual]`)
            );
          })(t, e, null, "!=");
      }
      function cn(e) {
        return {
          token: e.token,
          providedIn: e.providedIn || null,
          factory: e.factory,
          value: void 0,
        };
      }
      function Kn(e) {
        return { providers: e.providers || [], imports: e.imports || [] };
      }
      function Er(e) {
        return ar(e, Rr) || ar(e, Bn);
      }
      function pr(e) {
        return null !== Er(e);
      }
      function ar(e, t) {
        return e.hasOwnProperty(t) ? e[t] : null;
      }
      function zt(e) {
        return e && (e.hasOwnProperty(Dr) || e.hasOwnProperty(kr))
          ? e[Dr]
          : null;
      }
      const Rr = Ue({ ɵprov: Ue }),
        Dr = Ue({ ɵinj: Ue }),
        Bn = Ue({ ngInjectableDef: Ue }),
        kr = Ue({ ngInjectorDef: Ue });
      var Wt = (function (e) {
        return (
          (e[(e.Default = 0)] = "Default"),
          (e[(e.Host = 1)] = "Host"),
          (e[(e.Self = 2)] = "Self"),
          (e[(e.SkipSelf = 4)] = "SkipSelf"),
          (e[(e.Optional = 8)] = "Optional"),
          e
        );
      })(Wt || {});
      let Wr;
      function lr(e) {
        const t = Wr;
        return (Wr = e), t;
      }
      function _n(e, t, n) {
        const r = Er(e);
        return r && "root" == r.providedIn
          ? void 0 === r.value
            ? (r.value = r.factory())
            : r.value
          : n & Wt.Optional
          ? null
          : void 0 !== t
          ? t
          : void qe(It(e));
      }
      const wn = globalThis,
        W = {},
        ee = "__NG_DI_FLAG__",
        Ee = "ngTempTokenPath",
        vt = /\n/gm,
        nn = "__source";
      let fn;
      function Dn(e) {
        const t = fn;
        return (fn = e), t;
      }
      function Ce(e, t = Wt.Default) {
        if (void 0 === fn) throw new Ne(-203, !1);
        return null === fn
          ? _n(e, void 0, t)
          : fn.get(e, t & Wt.Optional ? null : void 0, t);
      }
      function se(e, t = Wt.Default) {
        return (
          (function Vn() {
            return Wr;
          })() || Ce
        )(J(e), t);
      }
      function je(e, t = Wt.Default) {
        return se(e, Et(t));
      }
      function Et(e) {
        return typeof e > "u" || "number" == typeof e
          ? e
          : 0 |
              (e.optional && 8) |
              (e.host && 1) |
              (e.self && 2) |
              (e.skipSelf && 4);
      }
      function Dt(e) {
        const t = [];
        for (let n = 0; n < e.length; n++) {
          const r = J(e[n]);
          if (Array.isArray(r)) {
            if (0 === r.length) throw new Ne(900, !1);
            let s,
              c = Wt.Default;
            for (let f = 0; f < r.length; f++) {
              const y = r[f],
                C = On(y);
              "number" == typeof C
                ? -1 === C
                  ? (s = y.token)
                  : (c |= C)
                : (s = y);
            }
            t.push(se(s, c));
          } else t.push(se(r));
        }
        return t;
      }
      function St(e, t) {
        return (e[ee] = t), (e.prototype[ee] = t), e;
      }
      function On(e) {
        return e[ee];
      }
      function Ln(e) {
        return { toString: e }.toString();
      }
      var gr = (function (e) {
          return (
            (e[(e.OnPush = 0)] = "OnPush"), (e[(e.Default = 1)] = "Default"), e
          );
        })(gr || {}),
        er = (function (e) {
          return (
            (e[(e.Emulated = 0)] = "Emulated"),
            (e[(e.None = 2)] = "None"),
            (e[(e.ShadowDom = 3)] = "ShadowDom"),
            e
          );
        })(er || {});
      const jn = {},
        Xt = [],
        pn = Ue({ ɵcmp: Ue }),
        Mn = Ue({ ɵdir: Ue }),
        Lr = Ue({ ɵpipe: Ue }),
        qr = Ue({ ɵmod: Ue }),
        zn = Ue({ ɵfac: Ue }),
        qn = Ue({ __NG_ELEMENT_ID__: Ue }),
        fi = Ue({ __NG_ENV_ID__: Ue });
      function mi(e, t, n) {
        let r = e.length;
        for (;;) {
          const s = e.indexOf(t, n);
          if (-1 === s) return s;
          if (0 === s || e.charCodeAt(s - 1) <= 32) {
            const c = t.length;
            if (s + c === r || e.charCodeAt(s + c) <= 32) return s;
          }
          n = s + 1;
        }
      }
      function Br(e, t, n) {
        let r = 0;
        for (; r < n.length; ) {
          const s = n[r];
          if ("number" == typeof s) {
            if (0 !== s) break;
            r++;
            const c = n[r++],
              f = n[r++],
              y = n[r++];
            e.setAttribute(t, f, y, c);
          } else {
            const c = s,
              f = n[++r];
            yi(c) ? e.setProperty(t, c, f) : e.setAttribute(t, c, f), r++;
          }
        }
        return r;
      }
      function Mr(e) {
        return 3 === e || 4 === e || 6 === e;
      }
      function yi(e) {
        return 64 === e.charCodeAt(0);
      }
      function Ai(e, t) {
        if (null !== t && 0 !== t.length)
          if (null === e || 0 === e.length) e = t.slice();
          else {
            let n = -1;
            for (let r = 0; r < t.length; r++) {
              const s = t[r];
              "number" == typeof s
                ? (n = s)
                : 0 === n ||
                  tr(e, n, s, null, -1 === n || 2 === n ? t[++r] : null);
            }
          }
        return e;
      }
      function tr(e, t, n, r, s) {
        let c = 0,
          f = e.length;
        if (-1 === t) f = -1;
        else
          for (; c < e.length; ) {
            const y = e[c++];
            if ("number" == typeof y) {
              if (y === t) {
                f = -1;
                break;
              }
              if (y > t) {
                f = c - 1;
                break;
              }
            }
          }
        for (; c < e.length; ) {
          const y = e[c];
          if ("number" == typeof y) break;
          if (y === n) {
            if (null === r) return void (null !== s && (e[c + 1] = s));
            if (r === e[c + 1]) return void (e[c + 2] = s);
          }
          c++, null !== r && c++, null !== s && c++;
        }
        -1 !== f && (e.splice(f, 0, t), (c = f + 1)),
          e.splice(c++, 0, n),
          null !== r && e.splice(c++, 0, r),
          null !== s && e.splice(c++, 0, s);
      }
      const ni = "ng-template";
      function Cs(e, t, n) {
        let r = 0,
          s = !0;
        for (; r < e.length; ) {
          let c = e[r++];
          if ("string" == typeof c && s) {
            const f = e[r++];
            if (n && "class" === c && -1 !== mi(f.toLowerCase(), t, 0))
              return !0;
          } else {
            if (1 === c) {
              for (; r < e.length && "string" == typeof (c = e[r++]); )
                if (c.toLowerCase() === t) return !0;
              return !1;
            }
            "number" == typeof c && (s = !1);
          }
        }
        return !1;
      }
      function Ur(e) {
        return 4 === e.type && e.value !== ni;
      }
      function Ii(e, t, n) {
        return t === (4 !== e.type || n ? e.value : ni);
      }
      function vi(e, t, n) {
        let r = 4;
        const s = e.attrs || [],
          c = (function ds(e) {
            for (let t = 0; t < e.length; t++) if (Mr(e[t])) return t;
            return e.length;
          })(s);
        let f = !1;
        for (let y = 0; y < t.length; y++) {
          const C = t[y];
          if ("number" != typeof C) {
            if (!f)
              if (4 & r) {
                if (
                  ((r = 2 | (1 & r)),
                  ("" !== C && !Ii(e, C, n)) || ("" === C && 1 === t.length))
                ) {
                  if (Sr(r)) return !1;
                  f = !0;
                }
              } else {
                const O = 8 & r ? C : t[++y];
                if (8 & r && null !== e.attrs) {
                  if (!Cs(e.attrs, O, n)) {
                    if (Sr(r)) return !1;
                    f = !0;
                  }
                  continue;
                }
                const ne = wi(8 & r ? "class" : C, s, Ur(e), n);
                if (-1 === ne) {
                  if (Sr(r)) return !1;
                  f = !0;
                  continue;
                }
                if ("" !== O) {
                  let ve;
                  ve = ne > c ? "" : s[ne + 1].toLowerCase();
                  const Te = 8 & r ? ve : null;
                  if ((Te && -1 !== mi(Te, O, 0)) || (2 & r && O !== ve)) {
                    if (Sr(r)) return !1;
                    f = !0;
                  }
                }
              }
          } else {
            if (!f && !Sr(r) && !Sr(C)) return !1;
            if (f && Sr(C)) continue;
            (f = !1), (r = C | (1 & r));
          }
        }
        return Sr(r) || f;
      }
      function Sr(e) {
        return 0 == (1 & e);
      }
      function wi(e, t, n, r) {
        if (null === t) return -1;
        let s = 0;
        if (r || !n) {
          let c = !1;
          for (; s < t.length; ) {
            const f = t[s];
            if (f === e) return s;
            if (3 === f || 6 === f) c = !0;
            else {
              if (1 === f || 2 === f) {
                let y = t[++s];
                for (; "string" == typeof y; ) y = t[++s];
                continue;
              }
              if (4 === f) break;
              if (0 === f) {
                s += 4;
                continue;
              }
            }
            s += c ? 1 : 2;
          }
          return -1;
        }
        return (function fs(e, t) {
          let n = e.indexOf(4);
          if (n > -1)
            for (n++; n < e.length; ) {
              const r = e[n];
              if ("number" == typeof r) return -1;
              if (r === t) return n;
              n++;
            }
          return -1;
        })(t, e);
      }
      function hi(e, t, n = !1) {
        for (let r = 0; r < t.length; r++) if (vi(e, t[r], n)) return !0;
        return !1;
      }
      function Ki(e, t) {
        e: for (let n = 0; n < t.length; n++) {
          const r = t[n];
          if (e.length === r.length) {
            for (let s = 0; s < e.length; s++) if (e[s] !== r[s]) continue e;
            return !0;
          }
        }
        return !1;
      }
      function bi(e, t) {
        return e ? ":not(" + t.trim() + ")" : t;
      }
      function Ss(e) {
        let t = e[0],
          n = 1,
          r = 2,
          s = "",
          c = !1;
        for (; n < e.length; ) {
          let f = e[n];
          if ("string" == typeof f)
            if (2 & r) {
              const y = e[++n];
              s += "[" + f + (y.length > 0 ? '="' + y + '"' : "") + "]";
            } else 8 & r ? (s += "." + f) : 4 & r && (s += " " + f);
          else
            "" !== s && !Sr(f) && ((t += bi(c, s)), (s = "")),
              (r = f),
              (c = c || !Sr(r));
          n++;
        }
        return "" !== s && (t += bi(c, s)), t;
      }
      function $i(e) {
        return Ln(() => {
          const t = Or(e),
            n = {
              ...t,
              decls: e.decls,
              vars: e.vars,
              template: e.template,
              consts: e.consts || null,
              ngContentSelectors: e.ngContentSelectors,
              onPush: e.changeDetection === gr.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              dependencies: (t.standalone && e.dependencies) || null,
              getStandaloneInjector: null,
              signals: e.signals ?? !1,
              data: e.data || {},
              encapsulation: e.encapsulation || er.Emulated,
              styles: e.styles || Xt,
              _: null,
              schemas: e.schemas || null,
              tView: null,
              id: "",
            };
          Oi(n);
          const r = e.dependencies;
          return (
            (n.directiveDefs = Fr(r, !1)),
            (n.pipeDefs = Fr(r, !0)),
            (n.id = (function es(e) {
              let t = 0;
              const n = [
                e.selectors,
                e.ngContentSelectors,
                e.hostVars,
                e.hostAttrs,
                e.consts,
                e.vars,
                e.decls,
                e.encapsulation,
                e.standalone,
                e.signals,
                e.exportAs,
                JSON.stringify(e.inputs),
                JSON.stringify(e.outputs),
                Object.getOwnPropertyNames(e.type.prototype),
                !!e.contentQueries,
                !!e.viewQuery,
              ].join("|");
              for (const s of n) t = (Math.imul(31, t) + s.charCodeAt(0)) << 0;
              return (t += 2147483648), "c" + t;
            })(n)),
            n
          );
        });
      }
      function Ts(e) {
        return gn(e) || xn(e);
      }
      function Fs(e) {
        return null !== e;
      }
      function Ji(e) {
        return Ln(() => ({
          type: e.type,
          bootstrap: e.bootstrap || Xt,
          declarations: e.declarations || Xt,
          imports: e.imports || Xt,
          exports: e.exports || Xt,
          transitiveCompileScopes: null,
          schemas: e.schemas || null,
          id: e.id || null,
        }));
      }
      function ri(e, t) {
        if (null == e) return jn;
        const n = {};
        for (const r in e)
          if (e.hasOwnProperty(r)) {
            let s = e[r],
              c = s;
            Array.isArray(s) && ((c = s[1]), (s = s[0])),
              (n[s] = r),
              t && (t[s] = c);
          }
        return n;
      }
      function Ei(e) {
        return Ln(() => {
          const t = Or(e);
          return Oi(t), t;
        });
      }
      function Di(e) {
        return {
          type: e.type,
          name: e.name,
          factory: null,
          pure: !1 !== e.pure,
          standalone: !0 === e.standalone,
          onDestroy: e.type.prototype.ngOnDestroy || null,
        };
      }
      function gn(e) {
        return e[pn] || null;
      }
      function xn(e) {
        return e[Mn] || null;
      }
      function or(e) {
        return e[Lr] || null;
      }
      function ii(e) {
        const t = gn(e) || xn(e) || or(e);
        return null !== t && t.standalone;
      }
      function Ir(e, t) {
        const n = e[qr] || null;
        if (!n && !0 === t)
          throw new Error(`Type ${It(e)} does not have '\u0275mod' property.`);
        return n;
      }
      function Or(e) {
        const t = {};
        return {
          type: e.type,
          providersResolver: null,
          factory: null,
          hostBindings: e.hostBindings || null,
          hostVars: e.hostVars || 0,
          hostAttrs: e.hostAttrs || null,
          contentQueries: e.contentQueries || null,
          declaredInputs: t,
          inputTransforms: null,
          inputConfig: e.inputs || jn,
          exportAs: e.exportAs || null,
          standalone: !0 === e.standalone,
          signals: !0 === e.signals,
          selectors: e.selectors || Xt,
          viewQuery: e.viewQuery || null,
          features: e.features || null,
          setInput: null,
          findHostDirectiveDefs: null,
          hostDirectives: null,
          inputs: ri(e.inputs, t),
          outputs: ri(e.outputs),
        };
      }
      function Oi(e) {
        e.features?.forEach((t) => t(e));
      }
      function Fr(e, t) {
        if (!e) return null;
        const n = t ? or : Ts;
        return () =>
          ("function" == typeof e ? e() : e).map((r) => n(r)).filter(Fs);
      }
      const Cn = 0,
        Rt = 1,
        Qt = 2,
        Un = 3,
        br = 4,
        Ci = 5,
        mr = 6,
        Vr = 7,
        nr = 8,
        Kr = 9,
        xi = 10,
        sn = 11,
        $r = 12,
        ts = 13,
        si = 14,
        Gn = 15,
        Xr = 16,
        Hr = 17,
        Qr = 18,
        Fi = 19,
        Hi = 20,
        Nn = 21,
        xr = 22,
        Si = 23,
        ki = 24,
        yn = 25,
        ps = 1,
        As = 2,
        Jr = 7,
        Ni = 9,
        bn = 11;
      function Xn(e) {
        return Array.isArray(e) && "object" == typeof e[ps];
      }
      function w(e) {
        return Array.isArray(e) && !0 === e[ps];
      }
      function i(e) {
        return 0 != (4 & e.flags);
      }
      function _(e) {
        return e.componentOffset > -1;
      }
      function E(e) {
        return 1 == (1 & e.flags);
      }
      function A(e) {
        return !!e.template;
      }
      function I(e) {
        return 0 != (512 & e[Qt]);
      }
      function Ke(e, t) {
        return e.hasOwnProperty(zn) ? e[zn] : null;
      }
      let ut = null,
        ht = !1;
      function rt(e) {
        const t = ut;
        return (ut = e), t;
      }
      const ft = {
        version: 0,
        dirty: !1,
        producerNode: void 0,
        producerLastReadVersion: void 0,
        producerIndexOfThis: void 0,
        nextProducerIndex: 0,
        liveConsumerNode: void 0,
        liveConsumerIndexOfThis: void 0,
        consumerAllowSignalWrites: !1,
        consumerIsAlwaysLive: !1,
        producerMustRecompute: () => !1,
        producerRecomputeValue: () => {},
        consumerMarkedDirty: () => {},
      };
      function An(e) {
        if (!Is(e) || e.dirty) {
          if (!e.producerMustRecompute(e) && !Bi(e)) return void (e.dirty = !1);
          e.producerRecomputeValue(e), (e.dirty = !1);
        }
      }
      function Fn(e) {
        (e.dirty = !0),
          (function Pr(e) {
            if (void 0 === e.liveConsumerNode) return;
            const t = ht;
            ht = !0;
            try {
              for (const n of e.liveConsumerNode) n.dirty || Fn(n);
            } finally {
              ht = t;
            }
          })(e),
          e.consumerMarkedDirty?.(e);
      }
      function Nr(e) {
        return e && (e.nextProducerIndex = 0), rt(e);
      }
      function ai(e, t) {
        if (
          (rt(t),
          e &&
            void 0 !== e.producerNode &&
            void 0 !== e.producerIndexOfThis &&
            void 0 !== e.producerLastReadVersion)
        ) {
          if (Is(e))
            for (let n = e.nextProducerIndex; n < e.producerNode.length; n++)
              ji(e.producerNode[n], e.producerIndexOfThis[n]);
          for (; e.producerNode.length > e.nextProducerIndex; )
            e.producerNode.pop(),
              e.producerLastReadVersion.pop(),
              e.producerIndexOfThis.pop();
        }
      }
      function Bi(e) {
        zi(e);
        for (let t = 0; t < e.producerNode.length; t++) {
          const n = e.producerNode[t],
            r = e.producerLastReadVersion[t];
          if (r !== n.version || (An(n), r !== n.version)) return !0;
        }
        return !1;
      }
      function ns(e) {
        if ((zi(e), Is(e)))
          for (let t = 0; t < e.producerNode.length; t++)
            ji(e.producerNode[t], e.producerIndexOfThis[t]);
        (e.producerNode.length =
          e.producerLastReadVersion.length =
          e.producerIndexOfThis.length =
            0),
          e.liveConsumerNode &&
            (e.liveConsumerNode.length = e.liveConsumerIndexOfThis.length = 0);
      }
      function ji(e, t) {
        if (
          ((function rs(e) {
            (e.liveConsumerNode ??= []), (e.liveConsumerIndexOfThis ??= []);
          })(e),
          zi(e),
          1 === e.liveConsumerNode.length)
        )
          for (let r = 0; r < e.producerNode.length; r++)
            ji(e.producerNode[r], e.producerIndexOfThis[r]);
        const n = e.liveConsumerNode.length - 1;
        if (
          ((e.liveConsumerNode[t] = e.liveConsumerNode[n]),
          (e.liveConsumerIndexOfThis[t] = e.liveConsumerIndexOfThis[n]),
          e.liveConsumerNode.length--,
          e.liveConsumerIndexOfThis.length--,
          t < e.liveConsumerNode.length)
        ) {
          const r = e.liveConsumerIndexOfThis[t],
            s = e.liveConsumerNode[t];
          zi(s), (s.producerIndexOfThis[r] = t);
        }
      }
      function Is(e) {
        return e.consumerIsAlwaysLive || (e?.liveConsumerNode?.length ?? 0) > 0;
      }
      function zi(e) {
        (e.producerNode ??= []),
          (e.producerIndexOfThis ??= []),
          (e.producerLastReadVersion ??= []);
      }
      let F = null;
      function Ft(e) {
        const t = rt(null);
        try {
          return e();
        } finally {
          rt(t);
        }
      }
      const xt = () => {},
        jt = (() => ({
          ...ft,
          consumerIsAlwaysLive: !0,
          consumerAllowSignalWrites: !1,
          consumerMarkedDirty: (e) => {
            e.schedule(e.ref);
          },
          hasRun: !1,
          cleanupFn: xt,
        }))();
      class Zn {
        constructor(t, n, r) {
          (this.previousValue = t),
            (this.currentValue = n),
            (this.firstChange = r);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function Hn() {
        return Qn;
      }
      function Qn(e) {
        return e.type.prototype.ngOnChanges && (e.setInput = Ti), rr;
      }
      function rr() {
        const e = zr(this),
          t = e?.current;
        if (t) {
          const n = e.previous;
          if (n === jn) e.previous = t;
          else for (let r in t) n[r] = t[r];
          (e.current = null), this.ngOnChanges(t);
        }
      }
      function Ti(e, t, n, r) {
        const s = this.declaredInputs[n],
          c =
            zr(e) ||
            (function gs(e, t) {
              return (e[jr] = t);
            })(e, { previous: jn, current: null }),
          f = c.current || (c.current = {}),
          y = c.previous,
          C = y[s];
        (f[s] = new Zn(C && C.currentValue, t, y === jn)), (e[r] = t);
      }
      Hn.ngInherit = !0;
      const jr = "__ngSimpleChanges__";
      function zr(e) {
        return e[jr] || null;
      }
      const Wi = function (e, t, n) {};
      function Jn(e) {
        for (; Array.isArray(e); ) e = e[Cn];
        return e;
      }
      function Gt(e, t) {
        return Jn(t[e]);
      }
      function Ht(e, t) {
        return Jn(t[e.index]);
      }
      function Pn(e, t) {
        return e.data[t];
      }
      function yr(e, t) {
        return e[t];
      }
      function hr(e, t) {
        const n = t[e];
        return Xn(n) ? n : n[Cn];
      }
      function xs(e, t) {
        return null == t ? null : e[t];
      }
      function jo(e) {
        e[Hr] = 0;
      }
      function Gr(e) {
        1024 & e[Qt] || ((e[Qt] |= 1024), ci(e, 1));
      }
      function os(e) {
        1024 & e[Qt] && ((e[Qt] &= -1025), ci(e, -1));
      }
      function ci(e, t) {
        let n = e[Un];
        if (null === n) return;
        n[Ci] += t;
        let r = n;
        for (
          n = n[Un];
          null !== n && ((1 === t && 1 === r[Ci]) || (-1 === t && 0 === r[Ci]));

        )
          (n[Ci] += t), (r = n), (n = n[Un]);
      }
      const tn = {
        lFrame: Ae(null),
        bindingsEnabled: !0,
        skipHydrationRootTNode: null,
      };
      function zo() {
        return tn.bindingsEnabled;
      }
      function Ps() {
        return null !== tn.skipHydrationRootTNode;
      }
      function mt() {
        return tn.lFrame.lView;
      }
      function Wn() {
        return tn.lFrame.tView;
      }
      function Wo(e) {
        return (tn.lFrame.contextLView = e), e[nr];
      }
      function ka(e) {
        return (tn.lFrame.contextLView = null), e;
      }
      function ui() {
        let e = Yo();
        for (; null !== e && 64 === e.type; ) e = e.parent;
        return e;
      }
      function Yo() {
        return tn.lFrame.currentTNode;
      }
      function as(e, t) {
        const n = tn.lFrame;
        (n.currentTNode = e), (n.isParent = t);
      }
      function qo() {
        return tn.lFrame.isParent;
      }
      function po() {
        tn.lFrame.isParent = !1;
      }
      function Ri() {
        const e = tn.lFrame;
        let t = e.bindingRootIndex;
        return (
          -1 === t && (t = e.bindingRootIndex = e.tView.bindingStartIndex), t
        );
      }
      function go() {
        return tn.lFrame.bindingIndex++;
      }
      function Ns(e) {
        const t = tn.lFrame,
          n = t.bindingIndex;
        return (t.bindingIndex = t.bindingIndex + e), n;
      }
      function lu(e, t) {
        const n = tn.lFrame;
        (n.bindingIndex = n.bindingRootIndex = e), v(t);
      }
      function v(e) {
        tn.lFrame.currentDirectiveIndex = e;
      }
      function m() {
        return tn.lFrame.currentQueryIndex;
      }
      function S(e) {
        tn.lFrame.currentQueryIndex = e;
      }
      function x(e) {
        const t = e[Rt];
        return 2 === t.type ? t.declTNode : 1 === t.type ? e[mr] : null;
      }
      function $(e, t, n) {
        if (n & Wt.SkipSelf) {
          let s = t,
            c = e;
          for (
            ;
            !((s = s.parent),
            null !== s ||
              n & Wt.Host ||
              ((s = x(c)), null === s || ((c = c[si]), 10 & s.type)));

          );
          if (null === s) return !1;
          (t = s), (e = c);
        }
        const r = (tn.lFrame = Ve());
        return (r.currentTNode = t), (r.lView = e), !0;
      }
      function ie(e) {
        const t = Ve(),
          n = e[Rt];
        (tn.lFrame = t),
          (t.currentTNode = n.firstChild),
          (t.lView = e),
          (t.tView = n),
          (t.contextLView = e),
          (t.bindingIndex = n.bindingStartIndex),
          (t.inI18n = !1);
      }
      function Ve() {
        const e = tn.lFrame,
          t = null === e ? null : e.child;
        return null === t ? Ae(e) : t;
      }
      function Ae(e) {
        const t = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: e,
          child: null,
          inI18n: !1,
        };
        return null !== e && (e.child = t), t;
      }
      function Tt() {
        const e = tn.lFrame;
        return (
          (tn.lFrame = e.parent), (e.currentTNode = null), (e.lView = null), e
        );
      }
      const hn = Tt;
      function ir() {
        const e = Tt();
        (e.isParent = !0),
          (e.tView = null),
          (e.selectedIndex = -1),
          (e.contextLView = null),
          (e.elementDepthCount = 0),
          (e.currentDirectiveIndex = -1),
          (e.currentNamespace = null),
          (e.bindingRootIndex = -1),
          (e.bindingIndex = -1),
          (e.currentQueryIndex = 0);
      }
      function ei() {
        return tn.lFrame.selectedIndex;
      }
      function Yi(e) {
        tn.lFrame.selectedIndex = e;
      }
      function _r() {
        const e = tn.lFrame;
        return Pn(e.tView, e.selectedIndex);
      }
      let Va = !0;
      function Ua() {
        return Va;
      }
      function io(e) {
        Va = e;
      }
      function $a(e, t) {
        for (let n = t.directiveStart, r = t.directiveEnd; n < r; n++) {
          const c = e.data[n].type.prototype,
            {
              ngAfterContentInit: f,
              ngAfterContentChecked: y,
              ngAfterViewInit: C,
              ngAfterViewChecked: O,
              ngOnDestroy: V,
            } = c;
          f && (e.contentHooks ??= []).push(-n, f),
            y &&
              ((e.contentHooks ??= []).push(n, y),
              (e.contentCheckHooks ??= []).push(n, y)),
            C && (e.viewHooks ??= []).push(-n, C),
            O &&
              ((e.viewHooks ??= []).push(n, O),
              (e.viewCheckHooks ??= []).push(n, O)),
            null != V && (e.destroyHooks ??= []).push(n, V);
        }
      }
      function Do(e, t, n) {
        ja(e, t, 3, n);
      }
      function Ha(e, t, n, r) {
        (3 & e[Qt]) === n && ja(e, t, n, r);
      }
      function Fl(e, t) {
        let n = e[Qt];
        (3 & n) === t && ((n &= 8191), (n += 1), (e[Qt] = n));
      }
      function ja(e, t, n, r) {
        const c = r ?? -1,
          f = t.length - 1;
        let y = 0;
        for (let C = void 0 !== r ? 65535 & e[Hr] : 0; C < f; C++)
          if ("number" == typeof t[C + 1]) {
            if (((y = t[C]), null != r && y >= r)) break;
          } else
            t[C] < 0 && (e[Hr] += 65536),
              (y < c || -1 == c) &&
                (kl(e, n, t, C), (e[Hr] = (4294901760 & e[Hr]) + C + 2)),
              C++;
      }
      function du(e, t) {
        Wi(4, e, t);
        const n = rt(null);
        try {
          t.call(e);
        } finally {
          rt(n), Wi(5, e, t);
        }
      }
      function kl(e, t, n, r) {
        const s = n[r] < 0,
          c = n[r + 1],
          y = e[s ? -n[r] : n[r]];
        s
          ? e[Qt] >> 13 < e[Hr] >> 16 &&
            (3 & e[Qt]) === t &&
            ((e[Qt] += 8192), du(y, c))
          : du(y, c);
      }
      const Co = -1;
      class Ko {
        constructor(t, n, r) {
          (this.factory = t),
            (this.resolving = !1),
            (this.canSeeViewProviders = n),
            (this.injectImpl = r);
        }
      }
      function Ul(e) {
        return e !== Co;
      }
      function Qo(e) {
        return 32767 & e;
      }
      function Jo(e, t) {
        let n = (function $l(e) {
            return e >> 16;
          })(e),
          r = t;
        for (; n > 0; ) (r = r[si]), n--;
        return r;
      }
      let ea = !0;
      function za(e) {
        const t = ea;
        return (ea = e), t;
      }
      const Ga = 255,
        hu = 5;
      let Hl = 0;
      const zs = {};
      function So(e, t) {
        const n = Wa(e, t);
        if (-1 !== n) return n;
        const r = t[Rt];
        r.firstCreatePass &&
          ((e.injectorIndex = t.length),
          jl(r.data, e),
          jl(t, null),
          jl(r.blueprint, null));
        const s = Ya(e, t),
          c = e.injectorIndex;
        if (Ul(s)) {
          const f = Qo(s),
            y = Jo(s, t),
            C = y[Rt].data;
          for (let O = 0; O < 8; O++) t[c + O] = y[f + O] | C[f + O];
        }
        return (t[c + 8] = s), c;
      }
      function jl(e, t) {
        e.push(0, 0, 0, 0, 0, 0, 0, 0, t);
      }
      function Wa(e, t) {
        return -1 === e.injectorIndex ||
          (e.parent && e.parent.injectorIndex === e.injectorIndex) ||
          null === t[e.injectorIndex + 8]
          ? -1
          : e.injectorIndex;
      }
      function Ya(e, t) {
        if (e.parent && -1 !== e.parent.injectorIndex)
          return e.parent.injectorIndex;
        let n = 0,
          r = null,
          s = t;
        for (; null !== s; ) {
          if (((r = wu(s)), null === r)) return Co;
          if ((n++, (s = s[si]), -1 !== r.injectorIndex))
            return r.injectorIndex | (n << 16);
        }
        return Co;
      }
      function zl(e, t, n) {
        !(function Hf(e, t, n) {
          let r;
          "string" == typeof n
            ? (r = n.charCodeAt(0) || 0)
            : n.hasOwnProperty(qn) && (r = n[qn]),
            null == r && (r = n[qn] = Hl++);
          const s = r & Ga;
          t.data[e + (s >> hu)] |= 1 << s;
        })(e, t, n);
      }
      function To(e, t, n) {
        if (n & Wt.Optional || void 0 !== e) return e;
        qe();
      }
      function cs(e, t, n, r) {
        if (
          (n & Wt.Optional && void 0 === r && (r = null),
          !(n & (Wt.Self | Wt.Host)))
        ) {
          const s = e[Kr],
            c = lr(void 0);
          try {
            return s ? s.get(t, r, n & Wt.Optional) : _n(t, r, n & Wt.Optional);
          } finally {
            lr(c);
          }
        }
        return To(r, 0, n);
      }
      function pu(e, t, n, r = Wt.Default, s) {
        if (null !== e) {
          if (2048 & t[Qt] && !(r & Wt.Self)) {
            const f = (function vu(e, t, n, r, s) {
              let c = e,
                f = t;
              for (
                ;
                null !== c && null !== f && 2048 & f[Qt] && !(512 & f[Qt]);

              ) {
                const y = gu(c, f, n, r | Wt.Self, zs);
                if (y !== zs) return y;
                let C = c.parent;
                if (!C) {
                  const O = f[Hi];
                  if (O) {
                    const V = O.get(n, zs, r);
                    if (V !== zs) return V;
                  }
                  (C = wu(f)), (f = f[si]);
                }
                c = C;
              }
              return s;
            })(e, t, n, r, zs);
            if (f !== zs) return f;
          }
          const c = gu(e, t, n, r, zs);
          if (c !== zs) return c;
        }
        return cs(t, n, r, s);
      }
      function gu(e, t, n, r, s) {
        const c = (function zf(e) {
          if ("string" == typeof e) return e.charCodeAt(0) || 0;
          const t = e.hasOwnProperty(qn) ? e[qn] : void 0;
          return "number" == typeof t ? (t >= 0 ? t & Ga : Wf) : t;
        })(n);
        if ("function" == typeof c) {
          if (!$(t, e, r)) return r & Wt.Host ? To(s, 0, r) : cs(t, n, r, s);
          try {
            let f;
            if (((f = c(r)), null != f || r & Wt.Optional)) return f;
            qe();
          } finally {
            hn();
          }
        } else if ("number" == typeof c) {
          let f = null,
            y = Wa(e, t),
            C = Co,
            O = r & Wt.Host ? t[Gn][mr] : null;
          for (
            (-1 === y || r & Wt.SkipSelf) &&
            ((C = -1 === y ? Ya(e, t) : t[y + 8]),
            C !== Co && yu(r, !1)
              ? ((f = t[Rt]), (y = Qo(C)), (t = Jo(C, t)))
              : (y = -1));
            -1 !== y;

          ) {
            const V = t[Rt];
            if (Gl(c, y, V.data)) {
              const ne = mu(y, t, n, f, r, O);
              if (ne !== zs) return ne;
            }
            (C = t[y + 8]),
              C !== Co && yu(r, t[Rt].data[y + 8] === O) && Gl(c, y, t)
                ? ((f = V), (y = Qo(C)), (t = Jo(C, t)))
                : (y = -1);
          }
        }
        return s;
      }
      function mu(e, t, n, r, s, c) {
        const f = t[Rt],
          y = f.data[e + 8],
          V = qa(
            y,
            f,
            n,
            null == r ? _(y) && ea : r != f && 0 != (3 & y.type),
            s & Wt.Host && c === y
          );
        return null !== V ? so(t, f, V, y) : zs;
      }
      function qa(e, t, n, r, s) {
        const c = e.providerIndexes,
          f = t.data,
          y = 1048575 & c,
          C = e.directiveStart,
          V = c >> 20,
          ve = s ? y + V : e.directiveEnd;
        for (let Te = r ? y : y + V; Te < ve; Te++) {
          const it = f[Te];
          if ((Te < C && n === it) || (Te >= C && it.type === n)) return Te;
        }
        if (s) {
          const Te = f[C];
          if (Te && A(Te) && Te.type === n) return C;
        }
        return null;
      }
      function so(e, t, n, r) {
        let s = e[n];
        const c = t.data;
        if (
          (function Bl(e) {
            return e instanceof Ko;
          })(s)
        ) {
          const f = s;
          f.resolving &&
            (function In(e, t) {
              const n = t ? `. Dependency path: ${t.join(" > ")} > ${e}` : "";
              throw new Ne(
                -200,
                `Circular dependency in DI detected for ${e}${n}`
              );
            })(
              (function Vt(e) {
                return "function" == typeof e
                  ? e.name || e.toString()
                  : "object" == typeof e &&
                    null != e &&
                    "function" == typeof e.type
                  ? e.type.name || e.type.toString()
                  : At(e);
              })(c[n])
            );
          const y = za(f.canSeeViewProviders);
          f.resolving = !0;
          const O = f.injectImpl ? lr(f.injectImpl) : null;
          $(e, r, Wt.Default);
          try {
            (s = e[n] = f.factory(void 0, c, e, r)),
              t.firstCreatePass &&
                n >= r.directiveStart &&
                (function Ll(e, t, n) {
                  const {
                    ngOnChanges: r,
                    ngOnInit: s,
                    ngDoCheck: c,
                  } = t.type.prototype;
                  if (r) {
                    const f = Qn(t);
                    (n.preOrderHooks ??= []).push(e, f),
                      (n.preOrderCheckHooks ??= []).push(e, f);
                  }
                  s && (n.preOrderHooks ??= []).push(0 - e, s),
                    c &&
                      ((n.preOrderHooks ??= []).push(e, c),
                      (n.preOrderCheckHooks ??= []).push(e, c));
                })(n, c[n], t);
          } finally {
            null !== O && lr(O), za(y), (f.resolving = !1), hn();
          }
        }
        return s;
      }
      function Gl(e, t, n) {
        return !!(n[t + (e >> hu)] & (1 << e));
      }
      function yu(e, t) {
        return !(e & Wt.Self || (e & Wt.Host && t));
      }
      class Ui {
        constructor(t, n) {
          (this._tNode = t), (this._lView = n);
        }
        get(t, n, r) {
          return pu(this._tNode, this._lView, t, Et(r), n);
        }
      }
      function Wf() {
        return new Ui(ui(), mt());
      }
      function Wl(e) {
        return Ln(() => {
          const t = e.prototype.constructor,
            n = t[zn] || Yl(t),
            r = Object.prototype;
          let s = Object.getPrototypeOf(e.prototype).constructor;
          for (; s && s !== r; ) {
            const c = s[zn] || Yl(s);
            if (c && c !== n) return c;
            s = Object.getPrototypeOf(s);
          }
          return (c) => new c();
        });
      }
      function Yl(e) {
        return De(e)
          ? () => {
              const t = Yl(J(e));
              return t && t();
            }
          : Ke(e);
      }
      function wu(e) {
        const t = e[Rt],
          n = t.type;
        return 2 === n ? t.declTNode : 1 === n ? e[mr] : null;
      }
      function Za(e) {
        return (function jf(e, t) {
          if ("class" === t) return e.classes;
          if ("style" === t) return e.styles;
          const n = e.attrs;
          if (n) {
            const r = n.length;
            let s = 0;
            for (; s < r; ) {
              const c = n[s];
              if (Mr(c)) break;
              if (0 === c) s += 2;
              else if ("number" == typeof c)
                for (s++; s < r && "string" == typeof n[s]; ) s++;
              else {
                if (c === t) return n[s + 1];
                s += 2;
              }
            }
          }
          return null;
        })(ui(), e);
      }
      const Io = "__parameters__";
      function xo(e, t, n) {
        return Ln(() => {
          const r = (function ql(e) {
            return function (...n) {
              if (e) {
                const r = e(...n);
                for (const s in r) this[s] = r[s];
              }
            };
          })(t);
          function s(...c) {
            if (this instanceof s) return r.apply(this, c), this;
            const f = new s(...c);
            return (y.annotation = f), y;
            function y(C, O, V) {
              const ne = C.hasOwnProperty(Io)
                ? C[Io]
                : Object.defineProperty(C, Io, { value: [] })[Io];
              for (; ne.length <= V; ) ne.push(null);
              return (ne[V] = ne[V] || []).push(f), C;
            }
          }
          return (
            n && (s.prototype = Object.create(n.prototype)),
            (s.prototype.ngMetadataName = e),
            (s.annotationCls = s),
            s
          );
        });
      }
      function yo(e, t) {
        e.forEach((n) => (Array.isArray(n) ? yo(n, t) : t(n)));
      }
      function Zl(e, t, n) {
        t >= e.length ? e.push(n) : e.splice(t, 0, n);
      }
      function ta(e, t) {
        return t >= e.length - 1 ? e.pop() : e.splice(t, 1)[0];
      }
      function o(e, t) {
        const n = [];
        for (let r = 0; r < e; r++) n.push(t);
        return n;
      }
      function ws(e, t, n) {
        let r = na(e, t);
        return (
          r >= 0
            ? (e[1 | r] = n)
            : ((r = ~r),
              (function oo(e, t, n, r) {
                let s = e.length;
                if (s == t) e.push(n, r);
                else if (1 === s) e.push(r, e[0]), (e[0] = n);
                else {
                  for (s--, e.push(e[s - 1], e[s]); s > t; )
                    (e[s] = e[s - 2]), s--;
                  (e[t] = n), (e[t + 1] = r);
                }
              })(e, r, t, n)),
          r
        );
      }
      function Ka(e, t) {
        const n = na(e, t);
        if (n >= 0) return e[1 | n];
      }
      function na(e, t) {
        return (function Kf(e, t, n) {
          let r = 0,
            s = e.length >> n;
          for (; s !== r; ) {
            const c = r + ((s - r) >> 1),
              f = e[c << n];
            if (t === f) return c << n;
            f > t ? (s = c) : (r = c + 1);
          }
          return ~(s << n);
        })(e, t, 1);
      }
      const Xl = St(xo("Optional"), 8),
        Ql = St(xo("SkipSelf"), 4);
      function rc(e) {
        return 128 == (128 & e.flags);
      }
      var sc = (function (e) {
        return (
          (e[(e.Important = 1)] = "Important"),
          (e[(e.DashCase = 2)] = "DashCase"),
          e
        );
      })(sc || {});
      const h0 = /^>|^->|<!--|-->|--!>|<!-$/g,
        p0 = /(<|>)/g,
        g0 = "\u200b$1\u200b";
      const Iu = new Map();
      let m0 = 0;
      const xu = "__ngContext__";
      function qi(e, t) {
        Xn(t)
          ? ((e[xu] = t[Fi]),
            (function v0(e) {
              Iu.set(e[Fi], e);
            })(t))
          : (e[xu] = t);
      }
      let Pu;
      function Nu(e, t) {
        return Pu(e, t);
      }
      function Ja(e) {
        const t = e[Un];
        return w(t) ? t[Un] : t;
      }
      function mh(e) {
        return vh(e[$r]);
      }
      function yh(e) {
        return vh(e[br]);
      }
      function vh(e) {
        for (; null !== e && !w(e); ) e = e[br];
        return e;
      }
      function sa(e, t, n, r, s) {
        if (null != r) {
          let c,
            f = !1;
          w(r) ? (c = r) : Xn(r) && ((f = !0), (r = r[Cn]));
          const y = Jn(r);
          0 === e && null !== n
            ? null == s
              ? Eh(t, n, y)
              : Ro(t, n, y, s || null, !0)
            : 1 === e && null !== n
            ? Ro(t, n, y, s || null, !0)
            : 2 === e
            ? (function dc(e, t, n) {
                const r = cc(e, t);
                r &&
                  (function k0(e, t, n, r) {
                    e.removeChild(t, n, r);
                  })(e, r, t, n);
              })(t, y, f)
            : 3 === e && t.destroyNode(y),
            null != c &&
              (function U0(e, t, n, r, s) {
                const c = n[Jr];
                c !== Jn(n) && sa(t, e, r, c, s);
                for (let y = bn; y < n.length; y++) {
                  const C = n[y];
                  tl(C[Rt], C, e, t, r, c);
                }
              })(t, e, c, n, s);
        }
      }
      function Ru(e, t) {
        return e.createComment(
          (function lh(e) {
            return e.replace(h0, (t) => t.replace(p0, g0));
          })(t)
        );
      }
      function ac(e, t, n) {
        return e.createElement(t, n);
      }
      function bh(e, t) {
        const n = e[Ni],
          r = n.indexOf(t);
        os(t), n.splice(r, 1);
      }
      function lc(e, t) {
        if (e.length <= bn) return;
        const n = bn + t,
          r = e[n];
        if (r) {
          const s = r[Xr];
          null !== s && s !== e && bh(s, r), t > 0 && (e[n - 1][br] = r[br]);
          const c = ta(e, bn + t);
          !(function I0(e, t) {
            tl(e, t, t[sn], 2, null, null), (t[Cn] = null), (t[mr] = null);
          })(r[Rt], r);
          const f = c[Qr];
          null !== f && f.detachView(c[Rt]),
            (r[Un] = null),
            (r[br] = null),
            (r[Qt] &= -129);
        }
        return r;
      }
      function Lu(e, t) {
        if (!(256 & t[Qt])) {
          const n = t[sn];
          t[Si] && ns(t[Si]),
            t[ki] && ns(t[ki]),
            n.destroyNode && tl(e, t, n, 3, null, null),
            (function P0(e) {
              let t = e[$r];
              if (!t) return Fu(e[Rt], e);
              for (; t; ) {
                let n = null;
                if (Xn(t)) n = t[$r];
                else {
                  const r = t[bn];
                  r && (n = r);
                }
                if (!n) {
                  for (; t && !t[br] && t !== e; )
                    Xn(t) && Fu(t[Rt], t), (t = t[Un]);
                  null === t && (t = e),
                    Xn(t) && Fu(t[Rt], t),
                    (n = t && t[br]);
                }
                t = n;
              }
            })(t);
        }
      }
      function Fu(e, t) {
        if (!(256 & t[Qt])) {
          (t[Qt] &= -129),
            (t[Qt] |= 256),
            (function F0(e, t) {
              let n;
              if (null != e && null != (n = e.destroyHooks))
                for (let r = 0; r < n.length; r += 2) {
                  const s = t[n[r]];
                  if (!(s instanceof Ko)) {
                    const c = n[r + 1];
                    if (Array.isArray(c))
                      for (let f = 0; f < c.length; f += 2) {
                        const y = s[c[f]],
                          C = c[f + 1];
                        Wi(4, y, C);
                        try {
                          C.call(y);
                        } finally {
                          Wi(5, y, C);
                        }
                      }
                    else {
                      Wi(4, s, c);
                      try {
                        c.call(s);
                      } finally {
                        Wi(5, s, c);
                      }
                    }
                  }
                }
            })(e, t),
            (function L0(e, t) {
              const n = e.cleanup,
                r = t[Vr];
              if (null !== n)
                for (let c = 0; c < n.length - 1; c += 2)
                  if ("string" == typeof n[c]) {
                    const f = n[c + 3];
                    f >= 0 ? r[f]() : r[-f].unsubscribe(), (c += 2);
                  } else n[c].call(r[n[c + 1]]);
              null !== r && (t[Vr] = null);
              const s = t[Nn];
              if (null !== s) {
                t[Nn] = null;
                for (let c = 0; c < s.length; c++) (0, s[c])();
              }
            })(e, t),
            1 === t[Rt].type && t[sn].destroy();
          const n = t[Xr];
          if (null !== n && w(t[Un])) {
            n !== t[Un] && bh(n, t);
            const r = t[Qr];
            null !== r && r.detachView(e);
          }
          !(function w0(e) {
            Iu.delete(e[Fi]);
          })(t);
        }
      }
      function ku(e, t, n) {
        return (function _h(e, t, n) {
          let r = t;
          for (; null !== r && 40 & r.type; ) r = (t = r).parent;
          if (null === r) return n[Cn];
          {
            const { componentOffset: s } = r;
            if (s > -1) {
              const { encapsulation: c } = e.data[r.directiveStart + s];
              if (c === er.None || c === er.Emulated) return null;
            }
            return Ht(r, n);
          }
        })(e, t.parent, n);
      }
      function Ro(e, t, n, r, s) {
        e.insertBefore(t, n, r, s);
      }
      function Eh(e, t, n) {
        e.appendChild(t, n);
      }
      function Dh(e, t, n, r, s) {
        null !== r ? Ro(e, t, n, r, s) : Eh(e, t, n);
      }
      function cc(e, t) {
        return e.parentNode(t);
      }
      function Ch(e, t, n) {
        return Th(e, t, n);
      }
      let Bu,
        fc,
        Hu,
        hc,
        Th = function Sh(e, t, n) {
          return 40 & e.type ? Ht(e, n) : null;
        };
      function uc(e, t, n, r) {
        const s = ku(e, r, t),
          c = t[sn],
          y = Ch(r.parent || t[mr], r, t);
        if (null != s)
          if (Array.isArray(n))
            for (let C = 0; C < n.length; C++) Dh(c, s, n[C], y, !1);
          else Dh(c, s, n, y, !1);
        void 0 !== Bu && Bu(c, r, t, n, s);
      }
      function el(e, t) {
        if (null !== t) {
          const n = t.type;
          if (3 & n) return Ht(t, e);
          if (4 & n) return Vu(-1, e[t.index]);
          if (8 & n) {
            const r = t.child;
            if (null !== r) return el(e, r);
            {
              const s = e[t.index];
              return w(s) ? Vu(-1, s) : Jn(s);
            }
          }
          if (32 & n) return Nu(t, e)() || Jn(e[t.index]);
          {
            const r = Ah(e, t);
            return null !== r
              ? Array.isArray(r)
                ? r[0]
                : el(Ja(e[Gn]), r)
              : el(e, t.next);
          }
        }
        return null;
      }
      function Ah(e, t) {
        return null !== t ? e[Gn][mr].projection[t.projection] : null;
      }
      function Vu(e, t) {
        const n = bn + e + 1;
        if (n < t.length) {
          const r = t[n],
            s = r[Rt].firstChild;
          if (null !== s) return el(r, s);
        }
        return t[Jr];
      }
      function Uu(e, t, n, r, s, c, f) {
        for (; null != n; ) {
          const y = r[n.index],
            C = n.type;
          if (
            (f && 0 === t && (y && qi(Jn(y), r), (n.flags |= 2)),
            32 != (32 & n.flags))
          )
            if (8 & C) Uu(e, t, n.child, r, s, c, !1), sa(t, e, s, y, c);
            else if (32 & C) {
              const O = Nu(n, r);
              let V;
              for (; (V = O()); ) sa(t, e, s, V, c);
              sa(t, e, s, y, c);
            } else 16 & C ? Oh(e, t, r, n, s, c) : sa(t, e, s, y, c);
          n = f ? n.projectionNext : n.next;
        }
      }
      function tl(e, t, n, r, s, c) {
        Uu(n, r, e.firstChild, t, s, c, !1);
      }
      function Oh(e, t, n, r, s, c) {
        const f = n[Gn],
          C = f[mr].projection[r.projection];
        if (Array.isArray(C))
          for (let O = 0; O < C.length; O++) sa(t, e, s, C[O], c);
        else {
          let O = C;
          const V = f[Un];
          rc(r) && (O.flags |= 128), Uu(e, t, O, V, s, c, !0);
        }
      }
      function xh(e, t, n) {
        "" === n
          ? e.removeAttribute(t, "class")
          : e.setAttribute(t, "class", n);
      }
      function Ph(e, t, n) {
        const { mergedAttrs: r, classes: s, styles: c } = n;
        null !== r && Br(e, t, r),
          null !== s && xh(e, t, s),
          null !== c &&
            (function H0(e, t, n) {
              e.setAttribute(t, "style", n);
            })(e, t, c);
      }
      function oa(e) {
        return (
          (function $u() {
            if (void 0 === fc && ((fc = null), wn.trustedTypes))
              try {
                fc = wn.trustedTypes.createPolicy("angular", {
                  createHTML: (e) => e,
                  createScript: (e) => e,
                  createScriptURL: (e) => e,
                });
              } catch {}
            return fc;
          })()?.createHTML(e) || e
        );
      }
      function W0(e) {
        Hu = e;
      }
      function aa() {
        if (void 0 !== Hu) return Hu;
        if (typeof document < "u") return document;
        throw new Ne(210, !1);
      }
      function ju() {
        if (void 0 === hc && ((hc = null), wn.trustedTypes))
          try {
            hc = wn.trustedTypes.createPolicy("angular#unsafe-bypass", {
              createHTML: (e) => e,
              createScript: (e) => e,
              createScriptURL: (e) => e,
            });
          } catch {}
        return hc;
      }
      function Nh(e) {
        return ju()?.createHTML(e) || e;
      }
      function Lh(e) {
        return ju()?.createScriptURL(e) || e;
      }
      class Lo {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see ${dt})`;
        }
      }
      class Y0 extends Lo {
        getTypeName() {
          return "HTML";
        }
      }
      class q0 extends Lo {
        getTypeName() {
          return "Style";
        }
      }
      class Z0 extends Lo {
        getTypeName() {
          return "Script";
        }
      }
      class K0 extends Lo {
        getTypeName() {
          return "URL";
        }
      }
      class X0 extends Lo {
        getTypeName() {
          return "ResourceURL";
        }
      }
      function ao(e) {
        return e instanceof Lo ? e.changingThisBreaksApplicationSecurity : e;
      }
      function la(e, t) {
        const n = (function Q0(e) {
          return (e instanceof Lo && e.getTypeName()) || null;
        })(e);
        if (null != n && n !== t) {
          if ("ResourceURL" === n && "URL" === t) return !0;
          throw new Error(`Required a safe ${t}, got a ${n} (see ${dt})`);
        }
        return n === t;
      }
      function J0(e) {
        return new Y0(e);
      }
      function ew(e) {
        return new q0(e);
      }
      function tw(e) {
        return new Z0(e);
      }
      function nw(e) {
        return new K0(e);
      }
      function rw(e) {
        return new X0(e);
      }
      class iw {
        constructor(t) {
          this.inertDocumentHelper = t;
        }
        getInertBodyElement(t) {
          t = "<body><remove></remove>" + t;
          try {
            const n = new window.DOMParser().parseFromString(
              oa(t),
              "text/html"
            ).body;
            return null === n
              ? this.inertDocumentHelper.getInertBodyElement(t)
              : (n.removeChild(n.firstChild), n);
          } catch {
            return null;
          }
        }
      }
      class sw {
        constructor(t) {
          (this.defaultDoc = t),
            (this.inertDocument =
              this.defaultDoc.implementation.createHTMLDocument(
                "sanitization-inert"
              ));
        }
        getInertBodyElement(t) {
          const n = this.inertDocument.createElement("template");
          return (n.innerHTML = oa(t)), n;
        }
      }
      const aw = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i;
      function pc(e) {
        return (e = String(e)).match(aw) ? e : "unsafe:" + e;
      }
      function lo(e) {
        const t = {};
        for (const n of e.split(",")) t[n] = !0;
        return t;
      }
      function nl(...e) {
        const t = {};
        for (const n of e)
          for (const r in n) n.hasOwnProperty(r) && (t[r] = !0);
        return t;
      }
      const kh = lo("area,br,col,hr,img,wbr"),
        Bh = lo("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),
        Vh = lo("rp,rt"),
        zu = nl(
          kh,
          nl(
            Bh,
            lo(
              "address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul"
            )
          ),
          nl(
            Vh,
            lo(
              "a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video"
            )
          ),
          nl(Vh, Bh)
        ),
        Gu = lo("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),
        Uh = nl(
          Gu,
          lo(
            "abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"
          ),
          lo(
            "aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"
          )
        ),
        lw = lo("script,style,template");
      class cw {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let n = t.firstChild,
            r = !0;
          for (; n; )
            if (
              (n.nodeType === Node.ELEMENT_NODE
                ? (r = this.startElement(n))
                : n.nodeType === Node.TEXT_NODE
                ? this.chars(n.nodeValue)
                : (this.sanitizedSomething = !0),
              r && n.firstChild)
            )
              n = n.firstChild;
            else
              for (; n; ) {
                n.nodeType === Node.ELEMENT_NODE && this.endElement(n);
                let s = this.checkClobberedElement(n, n.nextSibling);
                if (s) {
                  n = s;
                  break;
                }
                n = this.checkClobberedElement(n, n.parentNode);
              }
          return this.buf.join("");
        }
        startElement(t) {
          const n = t.nodeName.toLowerCase();
          if (!zu.hasOwnProperty(n))
            return (this.sanitizedSomething = !0), !lw.hasOwnProperty(n);
          this.buf.push("<"), this.buf.push(n);
          const r = t.attributes;
          for (let s = 0; s < r.length; s++) {
            const c = r.item(s),
              f = c.name,
              y = f.toLowerCase();
            if (!Uh.hasOwnProperty(y)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let C = c.value;
            Gu[y] && (C = pc(C)), this.buf.push(" ", f, '="', $h(C), '"');
          }
          return this.buf.push(">"), !0;
        }
        endElement(t) {
          const n = t.nodeName.toLowerCase();
          zu.hasOwnProperty(n) &&
            !kh.hasOwnProperty(n) &&
            (this.buf.push("</"), this.buf.push(n), this.buf.push(">"));
        }
        chars(t) {
          this.buf.push($h(t));
        }
        checkClobberedElement(t, n) {
          if (
            n &&
            (t.compareDocumentPosition(n) &
              Node.DOCUMENT_POSITION_CONTAINED_BY) ===
              Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(
              `Failed to sanitize html because the element is clobbered: ${t.outerHTML}`
            );
          return n;
        }
      }
      const uw = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        dw = /([^\#-~ |!])/g;
      function $h(e) {
        return e
          .replace(/&/g, "&amp;")
          .replace(uw, function (t) {
            return (
              "&#" +
              (1024 * (t.charCodeAt(0) - 55296) +
                (t.charCodeAt(1) - 56320) +
                65536) +
              ";"
            );
          })
          .replace(dw, function (t) {
            return "&#" + t.charCodeAt(0) + ";";
          })
          .replace(/</g, "&lt;")
          .replace(/>/g, "&gt;");
      }
      let gc;
      function Hh(e, t) {
        let n = null;
        try {
          gc =
            gc ||
            (function Fh(e) {
              const t = new sw(e);
              return (function ow() {
                try {
                  return !!new window.DOMParser().parseFromString(
                    oa(""),
                    "text/html"
                  );
                } catch {
                  return !1;
                }
              })()
                ? new iw(t)
                : t;
            })(e);
          let r = t ? String(t) : "";
          n = gc.getInertBodyElement(r);
          let s = 5,
            c = r;
          do {
            if (0 === s)
              throw new Error(
                "Failed to sanitize html because the input is unstable"
              );
            s--, (r = c), (c = n.innerHTML), (n = gc.getInertBodyElement(r));
          } while (r !== c);
          return oa(new cw().sanitizeChildren(Wu(n) || n));
        } finally {
          if (n) {
            const r = Wu(n) || n;
            for (; r.firstChild; ) r.removeChild(r.firstChild);
          }
        }
      }
      function Wu(e) {
        return "content" in e &&
          (function fw(e) {
            return (
              e.nodeType === Node.ELEMENT_NODE && "TEMPLATE" === e.nodeName
            );
          })(e)
          ? e.content
          : null;
      }
      var Fo = (function (e) {
        return (
          (e[(e.NONE = 0)] = "NONE"),
          (e[(e.HTML = 1)] = "HTML"),
          (e[(e.STYLE = 2)] = "STYLE"),
          (e[(e.SCRIPT = 3)] = "SCRIPT"),
          (e[(e.URL = 4)] = "URL"),
          (e[(e.RESOURCE_URL = 5)] = "RESOURCE_URL"),
          e
        );
      })(Fo || {});
      function jh(e) {
        const t = rl();
        return t
          ? Nh(t.sanitize(Fo.HTML, e) || "")
          : la(e, "HTML")
          ? Nh(ao(e))
          : Hh(aa(), At(e));
      }
      function Yu(e) {
        const t = rl();
        return t
          ? t.sanitize(Fo.URL, e) || ""
          : la(e, "URL")
          ? ao(e)
          : pc(At(e));
      }
      function zh(e) {
        const t = rl();
        if (t) return Lh(t.sanitize(Fo.RESOURCE_URL, e) || "");
        if (la(e, "ResourceURL")) return Lh(ao(e));
        throw new Ne(904, !1);
      }
      function Gh(e, t, n) {
        return (function yw(e, t) {
          return ("src" === t &&
            ("embed" === e ||
              "frame" === e ||
              "iframe" === e ||
              "media" === e ||
              "script" === e)) ||
            ("href" === t && ("base" === e || "link" === e))
            ? zh
            : Yu;
        })(
          t,
          n
        )(e);
      }
      function rl() {
        const e = mt();
        return e && e[xi].sanitizer;
      }
      class fr {
        constructor(t, n) {
          (this._desc = t),
            (this.ngMetadataName = "InjectionToken"),
            (this.ɵprov = void 0),
            "number" == typeof n
              ? (this.__NG_ELEMENT_ID__ = n)
              : void 0 !== n &&
                (this.ɵprov = cn({
                  token: this,
                  providedIn: n.providedIn || "root",
                  factory: n.factory,
                }));
        }
        get multi() {
          return this;
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const il = new fr("ENVIRONMENT_INITIALIZER"),
        Wh = new fr("INJECTOR", -1),
        Yh = new fr("INJECTOR_DEF_TYPES");
      class qu {
        get(t, n = W) {
          if (n === W) {
            const r = new Error(`NullInjectorError: No provider for ${It(t)}!`);
            throw ((r.name = "NullInjectorError"), r);
          }
          return n;
        }
      }
      function Zu(e) {
        return { ɵproviders: e };
      }
      function vw(...e) {
        return { ɵproviders: qh(0, e), ɵfromNgModule: !0 };
      }
      function qh(e, ...t) {
        const n = [],
          r = new Set();
        let s;
        const c = (f) => {
          n.push(f);
        };
        return (
          yo(t, (f) => {
            const y = f;
            mc(y, c, [], r) && ((s ||= []), s.push(y));
          }),
          void 0 !== s && Zh(s, c),
          n
        );
      }
      function Zh(e, t) {
        for (let n = 0; n < e.length; n++) {
          const { ngModule: r, providers: s } = e[n];
          Ku(s, (c) => {
            t(c, r);
          });
        }
      }
      function mc(e, t, n, r) {
        if (!(e = J(e))) return !1;
        let s = null,
          c = zt(e);
        const f = !c && gn(e);
        if (c || f) {
          if (f && !f.standalone) return !1;
          s = e;
        } else {
          const C = e.ngModule;
          if (((c = zt(C)), !c)) return !1;
          s = C;
        }
        const y = r.has(s);
        if (f) {
          if (y) return !1;
          if ((r.add(s), f.dependencies)) {
            const C =
              "function" == typeof f.dependencies
                ? f.dependencies()
                : f.dependencies;
            for (const O of C) mc(O, t, n, r);
          }
        } else {
          if (!c) return !1;
          {
            if (null != c.imports && !y) {
              let O;
              r.add(s);
              try {
                yo(c.imports, (V) => {
                  mc(V, t, n, r) && ((O ||= []), O.push(V));
                });
              } finally {
              }
              void 0 !== O && Zh(O, t);
            }
            if (!y) {
              const O = Ke(s) || (() => new s());
              t({ provide: s, useFactory: O, deps: Xt }, s),
                t({ provide: Yh, useValue: s, multi: !0 }, s),
                t({ provide: il, useValue: () => se(s), multi: !0 }, s);
            }
            const C = c.providers;
            if (null != C && !y) {
              const O = e;
              Ku(C, (V) => {
                t(V, O);
              });
            }
          }
        }
        return s !== e && void 0 !== e.providers;
      }
      function Ku(e, t) {
        for (let n of e)
          ye(n) && (n = n.ɵproviders), Array.isArray(n) ? Ku(n, t) : t(n);
      }
      const ww = Ue({ provide: String, useValue: Ue });
      function Xu(e) {
        return null !== e && "object" == typeof e && ww in e;
      }
      function ko(e) {
        return "function" == typeof e;
      }
      const Qu = new fr("Set Injector scope."),
        yc = {},
        _w = {};
      let Ju;
      function vc() {
        return void 0 === Ju && (Ju = new qu()), Ju;
      }
      class Zs {}
      class wc extends Zs {
        get destroyed() {
          return this._destroyed;
        }
        constructor(t, n, r, s) {
          super(),
            (this.parent = n),
            (this.source = r),
            (this.scopes = s),
            (this.records = new Map()),
            (this._ngOnDestroyHooks = new Set()),
            (this._onDestroyHooks = []),
            (this._destroyed = !1),
            td(t, (f) => this.processProvider(f)),
            this.records.set(Wh, ca(void 0, this)),
            s.has("environment") && this.records.set(Zs, ca(void 0, this));
          const c = this.records.get(Qu);
          null != c && "string" == typeof c.value && this.scopes.add(c.value),
            (this.injectorDefTypes = new Set(this.get(Yh.multi, Xt, Wt.Self)));
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            for (const n of this._ngOnDestroyHooks) n.ngOnDestroy();
            const t = this._onDestroyHooks;
            this._onDestroyHooks = [];
            for (const n of t) n();
          } finally {
            this.records.clear(),
              this._ngOnDestroyHooks.clear(),
              this.injectorDefTypes.clear();
          }
        }
        onDestroy(t) {
          return (
            this.assertNotDestroyed(),
            this._onDestroyHooks.push(t),
            () => this.removeOnDestroy(t)
          );
        }
        runInContext(t) {
          this.assertNotDestroyed();
          const n = Dn(this),
            r = lr(void 0);
          try {
            return t();
          } finally {
            Dn(n), lr(r);
          }
        }
        get(t, n = W, r = Wt.Default) {
          if ((this.assertNotDestroyed(), t.hasOwnProperty(fi)))
            return t[fi](this);
          r = Et(r);
          const c = Dn(this),
            f = lr(void 0);
          try {
            if (!(r & Wt.SkipSelf)) {
              let C = this.records.get(t);
              if (void 0 === C) {
                const O =
                  (function Tw(e) {
                    return (
                      "function" == typeof e ||
                      ("object" == typeof e && e instanceof fr)
                    );
                  })(t) && Er(t);
                (C = O && this.injectableDefInScope(O) ? ca(ed(t), yc) : null),
                  this.records.set(t, C);
              }
              if (null != C) return this.hydrate(t, C);
            }
            return (r & Wt.Self ? vc() : this.parent).get(
              t,
              (n = r & Wt.Optional && n === W ? null : n)
            );
          } catch (y) {
            if ("NullInjectorError" === y.name) {
              if (((y[Ee] = y[Ee] || []).unshift(It(t)), c)) throw y;
              return (function en(e, t, n, r) {
                const s = e[Ee];
                throw (
                  (t[nn] && s.unshift(t[nn]),
                  (e.message = (function sr(e, t, n, r = null) {
                    e =
                      e && "\n" === e.charAt(0) && "\u0275" == e.charAt(1)
                        ? e.slice(2)
                        : e;
                    let s = It(t);
                    if (Array.isArray(t)) s = t.map(It).join(" -> ");
                    else if ("object" == typeof t) {
                      let c = [];
                      for (let f in t)
                        if (t.hasOwnProperty(f)) {
                          let y = t[f];
                          c.push(
                            f +
                              ":" +
                              ("string" == typeof y ? JSON.stringify(y) : It(y))
                          );
                        }
                      s = `{${c.join(", ")}}`;
                    }
                    return `${n}${r ? "(" + r + ")" : ""}[${s}]: ${e.replace(
                      vt,
                      "\n  "
                    )}`;
                  })("\n" + e.message, s, n, r)),
                  (e.ngTokenPath = s),
                  (e[Ee] = null),
                  e)
                );
              })(y, t, "R3InjectorError", this.source);
            }
            throw y;
          } finally {
            lr(f), Dn(c);
          }
        }
        resolveInjectorInitializers() {
          const t = Dn(this),
            n = lr(void 0);
          try {
            const s = this.get(il.multi, Xt, Wt.Self);
            for (const c of s) c();
          } finally {
            Dn(t), lr(n);
          }
        }
        toString() {
          const t = [],
            n = this.records;
          for (const r of n.keys()) t.push(It(r));
          return `R3Injector[${t.join(", ")}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new Ne(205, !1);
        }
        processProvider(t) {
          let n = ko((t = J(t))) ? t : J(t && t.provide);
          const r = (function Dw(e) {
            return Xu(e) ? ca(void 0, e.useValue) : ca(Qh(e), yc);
          })(t);
          if (ko(t) || !0 !== t.multi) this.records.get(n);
          else {
            let s = this.records.get(n);
            s ||
              ((s = ca(void 0, yc, !0)),
              (s.factory = () => Dt(s.multi)),
              this.records.set(n, s)),
              (n = t),
              s.multi.push(t);
          }
          this.records.set(n, r);
        }
        hydrate(t, n) {
          return (
            n.value === yc && ((n.value = _w), (n.value = n.factory())),
            "object" == typeof n.value &&
              n.value &&
              (function Sw(e) {
                return (
                  null !== e &&
                  "object" == typeof e &&
                  "function" == typeof e.ngOnDestroy
                );
              })(n.value) &&
              this._ngOnDestroyHooks.add(n.value),
            n.value
          );
        }
        injectableDefInScope(t) {
          if (!t.providedIn) return !1;
          const n = J(t.providedIn);
          return "string" == typeof n
            ? "any" === n || this.scopes.has(n)
            : this.injectorDefTypes.has(n);
        }
        removeOnDestroy(t) {
          const n = this._onDestroyHooks.indexOf(t);
          -1 !== n && this._onDestroyHooks.splice(n, 1);
        }
      }
      function ed(e) {
        const t = Er(e),
          n = null !== t ? t.factory : Ke(e);
        if (null !== n) return n;
        if (e instanceof fr) throw new Ne(204, !1);
        if (e instanceof Function)
          return (function Ew(e) {
            const t = e.length;
            if (t > 0) throw (o(t, "?"), new Ne(204, !1));
            const n = (function dn(e) {
              return (e && (e[Rr] || e[Bn])) || null;
            })(e);
            return null !== n ? () => n.factory(e) : () => new e();
          })(e);
        throw new Ne(204, !1);
      }
      function Qh(e, t, n) {
        let r;
        if (ko(e)) {
          const s = J(e);
          return Ke(s) || ed(s);
        }
        if (Xu(e)) r = () => J(e.useValue);
        else if (
          (function Xh(e) {
            return !(!e || !e.useFactory);
          })(e)
        )
          r = () => e.useFactory(...Dt(e.deps || []));
        else if (
          (function Kh(e) {
            return !(!e || !e.useExisting);
          })(e)
        )
          r = () => se(J(e.useExisting));
        else {
          const s = J(e && (e.useClass || e.provide));
          if (
            !(function Cw(e) {
              return !!e.deps;
            })(e)
          )
            return Ke(s) || ed(s);
          r = () => new s(...Dt(e.deps));
        }
        return r;
      }
      function ca(e, t, n = !1) {
        return { factory: e, value: t, multi: n ? [] : void 0 };
      }
      function td(e, t) {
        for (const n of e)
          Array.isArray(n) ? td(n, t) : n && ye(n) ? td(n.ɵproviders, t) : t(n);
      }
      const Jh = new fr("AppId", { providedIn: "root", factory: () => Mw }),
        Mw = "ng",
        ep = new fr("Platform Initializer"),
        nd = new fr("Platform ID", {
          providedIn: "platform",
          factory: () => "unknown",
        }),
        Aw = new fr("AnimationModuleType"),
        Iw = new fr("CSP nonce", {
          providedIn: "root",
          factory: () =>
            aa()
              .body?.querySelector("[ngCspNonce]")
              ?.getAttribute("ngCspNonce") || null,
        });
      let tp = (e, t, n) => null;
      function ud(e, t, n = !1) {
        return tp(e, t, n);
      }
      class Vw {}
      class ip {}
      class $w {
        resolveComponentFactory(t) {
          throw (function Uw(e) {
            const t = Error(`No component factory found for ${It(e)}.`);
            return (t.ngComponent = e), t;
          })(t);
        }
      }
      let al = (() => {
        class e {
          static #e = (this.NULL = new $w());
        }
        return e;
      })();
      function Hw() {
        return fa(ui(), mt());
      }
      function fa(e, t) {
        return new ll(Ht(e, t));
      }
      let ll = (() => {
        class e {
          constructor(n) {
            this.nativeElement = n;
          }
          static #e = (this.__NG_ELEMENT_ID__ = Hw);
        }
        return e;
      })();
      function jw(e) {
        return e instanceof ll ? e.nativeElement : e;
      }
      class op {}
      let zw = (() => {
          class e {
            constructor() {
              this.destroyNode = null;
            }
            static #e = (this.__NG_ELEMENT_ID__ = () =>
              (function Gw() {
                const e = mt(),
                  n = hr(ui().index, e);
                return (Xn(n) ? n : e)[sn];
              })());
          }
          return e;
        })(),
        Ww = (() => {
          class e {
            static #e = (this.ɵprov = cn({
              token: e,
              providedIn: "root",
              factory: () => null,
            }));
          }
          return e;
        })();
      class ap {
        constructor(t) {
          (this.full = t),
            (this.major = t.split(".")[0]),
            (this.minor = t.split(".")[1]),
            (this.patch = t.split(".").slice(2).join("."));
        }
      }
      const Yw = new ap("16.2.7"),
        hd = {};
      function dp(e, t = null, n = null, r) {
        const s = fp(e, t, n, r);
        return s.resolveInjectorInitializers(), s;
      }
      function fp(e, t = null, n = null, r, s = new Set()) {
        const c = [n || Xt, vw(e)];
        return (
          (r = r || ("object" == typeof e ? void 0 : It(e))),
          new wc(c, t || vc(), r || null, s)
        );
      }
      let Gs = (() => {
        class e {
          static #e = (this.THROW_IF_NOT_FOUND = W);
          static #t = (this.NULL = new qu());
          static create(n, r) {
            if (Array.isArray(n)) return dp({ name: "" }, r, n, "");
            {
              const s = n.name ?? "";
              return dp({ name: s }, n.parent, n.providers, s);
            }
          }
          static #n = (this.ɵprov = cn({
            token: e,
            providedIn: "any",
            factory: () => se(Wh),
          }));
          static #r = (this.__NG_ELEMENT_ID__ = -1);
        }
        return e;
      })();
      function gd(e) {
        return e.ngOriginalError;
      }
      class vo {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const n = this._findOriginalError(t);
          this._console.error("ERROR", t),
            n && this._console.error("ORIGINAL ERROR", n);
        }
        _findOriginalError(t) {
          let n = t && gd(t);
          for (; n && gd(n); ) n = gd(n);
          return n || null;
        }
      }
      function yd(e) {
        return (t) => {
          setTimeout(e, void 0, t);
        };
      }
      const Ks = class eb extends l.x {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, n, r) {
          let s = t,
            c = n || (() => null),
            f = r;
          if (t && "object" == typeof t) {
            const C = t;
            (s = C.next?.bind(C)),
              (c = C.error?.bind(C)),
              (f = C.complete?.bind(C));
          }
          this.__isAsync && ((c = yd(c)), s && (s = yd(s)), f && (f = yd(f)));
          const y = super.subscribe({ next: s, error: c, complete: f });
          return t instanceof L.w0 && t.add(y), y;
        }
      };
      function pp(...e) {}
      class Li {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: n = !1,
          shouldCoalesceRunChangeDetection: r = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Ks(!1)),
            (this.onMicrotaskEmpty = new Ks(!1)),
            (this.onStable = new Ks(!1)),
            (this.onError = new Ks(!1)),
            typeof Zone > "u")
          )
            throw new Ne(908, !1);
          Zone.assertZonePatched();
          const s = this;
          (s._nesting = 0),
            (s._outer = s._inner = Zone.current),
            Zone.TaskTrackingZoneSpec &&
              (s._inner = s._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t &&
              Zone.longStackTraceZoneSpec &&
              (s._inner = s._inner.fork(Zone.longStackTraceZoneSpec)),
            (s.shouldCoalesceEventChangeDetection = !r && n),
            (s.shouldCoalesceRunChangeDetection = r),
            (s.lastRequestAnimationFrameId = -1),
            (s.nativeRequestAnimationFrame = (function tb() {
              const e = "function" == typeof wn.requestAnimationFrame;
              let t = wn[e ? "requestAnimationFrame" : "setTimeout"],
                n = wn[e ? "cancelAnimationFrame" : "clearTimeout"];
              if (typeof Zone < "u" && t && n) {
                const r = t[Zone.__symbol__("OriginalDelegate")];
                r && (t = r);
                const s = n[Zone.__symbol__("OriginalDelegate")];
                s && (n = s);
              }
              return {
                nativeRequestAnimationFrame: t,
                nativeCancelAnimationFrame: n,
              };
            })().nativeRequestAnimationFrame),
            (function ib(e) {
              const t = () => {
                !(function rb(e) {
                  e.isCheckStableRunning ||
                    -1 !== e.lastRequestAnimationFrameId ||
                    ((e.lastRequestAnimationFrameId =
                      e.nativeRequestAnimationFrame.call(wn, () => {
                        e.fakeTopEventTask ||
                          (e.fakeTopEventTask = Zone.root.scheduleEventTask(
                            "fakeTopEventTask",
                            () => {
                              (e.lastRequestAnimationFrameId = -1),
                                wd(e),
                                (e.isCheckStableRunning = !0),
                                vd(e),
                                (e.isCheckStableRunning = !1);
                            },
                            void 0,
                            () => {},
                            () => {}
                          )),
                          e.fakeTopEventTask.invoke();
                      })),
                    wd(e));
                })(e);
              };
              e._inner = e._inner.fork({
                name: "angular",
                properties: { isAngularZone: !0 },
                onInvokeTask: (n, r, s, c, f, y) => {
                  if (
                    (function ob(e) {
                      return (
                        !(!Array.isArray(e) || 1 !== e.length) &&
                        !0 === e[0].data?.__ignore_ng_zone__
                      );
                    })(y)
                  )
                    return n.invokeTask(s, c, f, y);
                  try {
                    return gp(e), n.invokeTask(s, c, f, y);
                  } finally {
                    ((e.shouldCoalesceEventChangeDetection &&
                      "eventTask" === c.type) ||
                      e.shouldCoalesceRunChangeDetection) &&
                      t(),
                      mp(e);
                  }
                },
                onInvoke: (n, r, s, c, f, y, C) => {
                  try {
                    return gp(e), n.invoke(s, c, f, y, C);
                  } finally {
                    e.shouldCoalesceRunChangeDetection && t(), mp(e);
                  }
                },
                onHasTask: (n, r, s, c) => {
                  n.hasTask(s, c),
                    r === s &&
                      ("microTask" == c.change
                        ? ((e._hasPendingMicrotasks = c.microTask),
                          wd(e),
                          vd(e))
                        : "macroTask" == c.change &&
                          (e.hasPendingMacrotasks = c.macroTask));
                },
                onHandleError: (n, r, s, c) => (
                  n.handleError(s, c),
                  e.runOutsideAngular(() => e.onError.emit(c)),
                  !1
                ),
              });
            })(s);
        }
        static isInAngularZone() {
          return typeof Zone < "u" && !0 === Zone.current.get("isAngularZone");
        }
        static assertInAngularZone() {
          if (!Li.isInAngularZone()) throw new Ne(909, !1);
        }
        static assertNotInAngularZone() {
          if (Li.isInAngularZone()) throw new Ne(909, !1);
        }
        run(t, n, r) {
          return this._inner.run(t, n, r);
        }
        runTask(t, n, r, s) {
          const c = this._inner,
            f = c.scheduleEventTask("NgZoneEvent: " + s, t, nb, pp, pp);
          try {
            return c.runTask(f, n, r);
          } finally {
            c.cancelTask(f);
          }
        }
        runGuarded(t, n, r) {
          return this._inner.runGuarded(t, n, r);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const nb = {};
      function vd(e) {
        if (0 == e._nesting && !e.hasPendingMicrotasks && !e.isStable)
          try {
            e._nesting++, e.onMicrotaskEmpty.emit(null);
          } finally {
            if ((e._nesting--, !e.hasPendingMicrotasks))
              try {
                e.runOutsideAngular(() => e.onStable.emit(null));
              } finally {
                e.isStable = !0;
              }
          }
      }
      function wd(e) {
        e.hasPendingMicrotasks = !!(
          e._hasPendingMicrotasks ||
          ((e.shouldCoalesceEventChangeDetection ||
            e.shouldCoalesceRunChangeDetection) &&
            -1 !== e.lastRequestAnimationFrameId)
        );
      }
      function gp(e) {
        e._nesting++,
          e.isStable && ((e.isStable = !1), e.onUnstable.emit(null));
      }
      function mp(e) {
        e._nesting--, vd(e);
      }
      class sb {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new Ks()),
            (this.onMicrotaskEmpty = new Ks()),
            (this.onStable = new Ks()),
            (this.onError = new Ks());
        }
        run(t, n, r) {
          return t.apply(n, r);
        }
        runGuarded(t, n, r) {
          return t.apply(n, r);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, n, r, s) {
          return t.apply(n, r);
        }
      }
      const yp = new fr("", { providedIn: "root", factory: vp });
      function vp() {
        const e = je(Li);
        let t = !0;
        const n = new B.y((s) => {
            (t =
              e.isStable && !e.hasPendingMacrotasks && !e.hasPendingMicrotasks),
              e.runOutsideAngular(() => {
                s.next(t), s.complete();
              });
          }),
          r = new B.y((s) => {
            let c;
            e.runOutsideAngular(() => {
              c = e.onStable.subscribe(() => {
                Li.assertNotInAngularZone(),
                  queueMicrotask(() => {
                    !t &&
                      !e.hasPendingMacrotasks &&
                      !e.hasPendingMicrotasks &&
                      ((t = !0), s.next(!0));
                  });
              });
            });
            const f = e.onUnstable.subscribe(() => {
              Li.assertInAngularZone(),
                t &&
                  ((t = !1),
                  e.runOutsideAngular(() => {
                    s.next(!1);
                  }));
            });
            return () => {
              c.unsubscribe(), f.unsubscribe();
            };
          });
        return (0, Me.T)(n, r.pipe(oe()));
      }
      function wp(e) {
        return e.ownerDocument.defaultView;
      }
      function co(e) {
        return e instanceof Function ? e() : e;
      }
      let bd = (() => {
        class e {
          constructor() {
            (this.renderDepth = 0), (this.handler = null);
          }
          begin() {
            this.handler?.validateBegin(), this.renderDepth++;
          }
          end() {
            this.renderDepth--,
              0 === this.renderDepth && this.handler?.execute();
          }
          ngOnDestroy() {
            this.handler?.destroy(), (this.handler = null);
          }
          static #e = (this.ɵprov = cn({
            token: e,
            providedIn: "root",
            factory: () => new e(),
          }));
        }
        return e;
      })();
      function cl(e) {
        for (; e; ) {
          e[Qt] |= 64;
          const t = Ja(e);
          if (I(e) && !t) return e;
          e = t;
        }
        return null;
      }
      const Cp = new fr("", { providedIn: "root", factory: () => !1 });
      let Tc = null;
      function Ap(e, t) {
        return e[t] ?? xp();
      }
      function Ip(e, t) {
        const n = xp();
        n.producerNode?.length && ((e[t] = Tc), (n.lView = e), (Tc = Op()));
      }
      const gb = {
        ...ft,
        consumerIsAlwaysLive: !0,
        consumerMarkedDirty: (e) => {
          cl(e.lView);
        },
        lView: null,
      };
      function Op() {
        return Object.create(gb);
      }
      function xp() {
        return (Tc ??= Op()), Tc;
      }
      const Sn = {};
      function Pp(e) {
        Np(Wn(), mt(), ei() + e, !1);
      }
      function Np(e, t, n, r) {
        if (!r)
          if (3 == (3 & t[Qt])) {
            const c = e.preOrderCheckHooks;
            null !== c && Do(t, c, n);
          } else {
            const c = e.preOrderHooks;
            null !== c && Ha(t, c, 0, n);
          }
        Yi(n);
      }
      function ga(e, t = Wt.Default) {
        const n = mt();
        return null === n ? se(e, t) : pu(ui(), n, J(e), t);
      }
      function Rp() {
        throw new Error("invalid");
      }
      function Mc(e, t, n, r, s, c, f, y, C, O, V) {
        const ne = t.blueprint.slice();
        return (
          (ne[Cn] = s),
          (ne[Qt] = 140 | r),
          (null !== O || (e && 2048 & e[Qt])) && (ne[Qt] |= 2048),
          jo(ne),
          (ne[Un] = ne[si] = e),
          (ne[nr] = n),
          (ne[xi] = f || (e && e[xi])),
          (ne[sn] = y || (e && e[sn])),
          (ne[Kr] = C || (e && e[Kr]) || null),
          (ne[mr] = c),
          (ne[Fi] = (function y0() {
            return m0++;
          })()),
          (ne[xr] = V),
          (ne[Hi] = O),
          (ne[Gn] = 2 == t.type ? e[Gn] : ne),
          ne
        );
      }
      function ma(e, t, n, r, s) {
        let c = e.data[t];
        if (null === c)
          (c = (function _d(e, t, n, r, s) {
            const c = Yo(),
              f = qo(),
              C = (e.data[t] = (function Db(e, t, n, r, s, c) {
                let f = t ? t.injectorIndex : -1,
                  y = 0;
                return (
                  Ps() && (y |= 128),
                  {
                    type: n,
                    index: r,
                    insertBeforeIndex: null,
                    injectorIndex: f,
                    directiveStart: -1,
                    directiveEnd: -1,
                    directiveStylingLast: -1,
                    componentOffset: -1,
                    propertyBindings: null,
                    flags: y,
                    providerIndexes: 0,
                    value: s,
                    attrs: c,
                    mergedAttrs: null,
                    localNames: null,
                    initialInputs: void 0,
                    inputs: null,
                    outputs: null,
                    tView: null,
                    next: null,
                    prev: null,
                    projectionNext: null,
                    child: null,
                    parent: t,
                    projection: null,
                    styles: null,
                    stylesWithoutHost: null,
                    residualStyles: void 0,
                    classes: null,
                    classesWithoutHost: null,
                    residualClasses: void 0,
                    classBindings: 0,
                    styleBindings: 0,
                  }
                );
              })(0, f ? c : c && c.parent, n, t, r, s));
            return (
              null === e.firstChild && (e.firstChild = C),
              null !== c &&
                (f
                  ? null == c.child && null !== C.parent && (c.child = C)
                  : null === c.next && ((c.next = C), (C.prev = c))),
              C
            );
          })(e, t, n, r, s)),
            (function au() {
              return tn.lFrame.inI18n;
            })() && (c.flags |= 32);
        else if (64 & c.type) {
          (c.type = n), (c.value = r), (c.attrs = s);
          const f = (function ho() {
            const e = tn.lFrame,
              t = e.currentTNode;
            return e.isParent ? t : t.parent;
          })();
          c.injectorIndex = null === f ? -1 : f.injectorIndex;
        }
        return as(c, !0), c;
      }
      function ul(e, t, n, r) {
        if (0 === n) return -1;
        const s = t.length;
        for (let c = 0; c < n; c++)
          t.push(r), e.blueprint.push(r), e.data.push(null);
        return s;
      }
      function Lp(e, t, n, r, s) {
        const c = Ap(t, Si),
          f = ei(),
          y = 2 & r;
        try {
          Yi(-1), y && t.length > yn && Np(e, t, yn, !1), Wi(y ? 2 : 0, s);
          const O = y ? c : null,
            V = Nr(O);
          try {
            null !== O && (O.dirty = !1), n(r, s);
          } finally {
            ai(O, V);
          }
        } finally {
          y && null === t[Si] && Ip(t, Si), Yi(f), Wi(y ? 3 : 1, s);
        }
      }
      function Ed(e, t, n) {
        if (i(t)) {
          const r = rt(null);
          try {
            const c = t.directiveEnd;
            for (let f = t.directiveStart; f < c; f++) {
              const y = e.data[f];
              y.contentQueries && y.contentQueries(1, n[f], f);
            }
          } finally {
            rt(r);
          }
        }
      }
      function Dd(e, t, n) {
        zo() &&
          ((function Ob(e, t, n, r) {
            const s = n.directiveStart,
              c = n.directiveEnd;
            _(n) &&
              (function kb(e, t, n) {
                const r = Ht(t, e),
                  s = Fp(n);
                let f = 16;
                n.signals ? (f = 4096) : n.onPush && (f = 64);
                const y = Ac(
                  e,
                  Mc(
                    e,
                    s,
                    null,
                    f,
                    r,
                    t,
                    null,
                    e[xi].rendererFactory.createRenderer(r, n),
                    null,
                    null,
                    null
                  )
                );
                e[t.index] = y;
              })(t, n, e.data[s + n.componentOffset]),
              e.firstCreatePass || So(n, t),
              qi(r, t);
            const f = n.initialInputs;
            for (let y = s; y < c; y++) {
              const C = e.data[y],
                O = so(t, e, y, n);
              qi(O, t),
                null !== f && Bb(0, y - s, O, C, 0, f),
                A(C) && (hr(n.index, t)[nr] = so(t, e, y, n));
            }
          })(e, t, n, Ht(n, t)),
          64 == (64 & n.flags) && $p(e, t, n));
      }
      function Cd(e, t, n = Ht) {
        const r = t.localNames;
        if (null !== r) {
          let s = t.index + 1;
          for (let c = 0; c < r.length; c += 2) {
            const f = r[c + 1],
              y = -1 === f ? n(t, e) : e[f];
            e[s++] = y;
          }
        }
      }
      function Fp(e) {
        const t = e.tView;
        return null === t || t.incompleteFirstPass
          ? (e.tView = Sd(
              1,
              null,
              e.template,
              e.decls,
              e.vars,
              e.directiveDefs,
              e.pipeDefs,
              e.viewQuery,
              e.schemas,
              e.consts,
              e.id
            ))
          : t;
      }
      function Sd(e, t, n, r, s, c, f, y, C, O, V) {
        const ne = yn + r,
          ve = ne + s,
          Te = (function yb(e, t) {
            const n = [];
            for (let r = 0; r < t; r++) n.push(r < e ? null : Sn);
            return n;
          })(ne, ve),
          it = "function" == typeof O ? O() : O;
        return (Te[Rt] = {
          type: e,
          blueprint: Te,
          template: n,
          queries: null,
          viewQuery: y,
          declTNode: t,
          data: Te.slice().fill(null, ne),
          bindingStartIndex: ne,
          expandoStartIndex: ve,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: "function" == typeof c ? c() : c,
          pipeRegistry: "function" == typeof f ? f() : f,
          firstChild: null,
          schemas: C,
          consts: it,
          incompleteFirstPass: !1,
          ssrId: V,
        });
      }
      let kp = (e) => null;
      function Bp(e, t, n, r) {
        for (let s in e)
          if (e.hasOwnProperty(s)) {
            n = null === n ? {} : n;
            const c = e[s];
            null === r
              ? Vp(n, t, s, c)
              : r.hasOwnProperty(s) && Vp(n, t, r[s], c);
          }
        return n;
      }
      function Vp(e, t, n, r) {
        e.hasOwnProperty(n) ? e[n].push(t, r) : (e[n] = [t, r]);
      }
      function Ls(e, t, n, r, s, c, f, y) {
        const C = Ht(t, n);
        let V,
          O = t.inputs;
        !y && null != O && (V = O[r])
          ? (Od(e, n, V, r, s),
            _(t) &&
              (function Tb(e, t) {
                const n = hr(t, e);
                16 & n[Qt] || (n[Qt] |= 64);
              })(n, t.index))
          : 3 & t.type &&
            ((r = (function Sb(e) {
              return "class" === e
                ? "className"
                : "for" === e
                ? "htmlFor"
                : "formaction" === e
                ? "formAction"
                : "innerHtml" === e
                ? "innerHTML"
                : "readonly" === e
                ? "readOnly"
                : "tabindex" === e
                ? "tabIndex"
                : e;
            })(r)),
            (s = null != f ? f(s, t.value || "", r) : s),
            c.setProperty(C, r, s));
      }
      function Td(e, t, n, r) {
        if (zo()) {
          const s = null === r ? null : { "": -1 },
            c = (function Pb(e, t) {
              const n = e.directiveRegistry;
              let r = null,
                s = null;
              if (n)
                for (let c = 0; c < n.length; c++) {
                  const f = n[c];
                  if (hi(t, f.selectors, !1))
                    if ((r || (r = []), A(f)))
                      if (null !== f.findHostDirectiveDefs) {
                        const y = [];
                        (s = s || new Map()),
                          f.findHostDirectiveDefs(f, y, s),
                          r.unshift(...y, f),
                          Md(e, t, y.length);
                      } else r.unshift(f), Md(e, t, 0);
                    else
                      (s = s || new Map()),
                        f.findHostDirectiveDefs?.(f, r, s),
                        r.push(f);
                }
              return null === r ? null : [r, s];
            })(e, n);
          let f, y;
          null === c ? (f = y = null) : ([f, y] = c),
            null !== f && Up(e, t, n, f, s, y),
            s &&
              (function Nb(e, t, n) {
                if (t) {
                  const r = (e.localNames = []);
                  for (let s = 0; s < t.length; s += 2) {
                    const c = n[t[s + 1]];
                    if (null == c) throw new Ne(-301, !1);
                    r.push(t[s], c);
                  }
                }
              })(n, r, s);
        }
        n.mergedAttrs = Ai(n.mergedAttrs, n.attrs);
      }
      function Up(e, t, n, r, s, c) {
        for (let O = 0; O < r.length; O++) zl(So(n, t), e, r[O].type);
        !(function Lb(e, t, n) {
          (e.flags |= 1),
            (e.directiveStart = t),
            (e.directiveEnd = t + n),
            (e.providerIndexes = t);
        })(n, e.data.length, r.length);
        for (let O = 0; O < r.length; O++) {
          const V = r[O];
          V.providersResolver && V.providersResolver(V);
        }
        let f = !1,
          y = !1,
          C = ul(e, t, r.length, null);
        for (let O = 0; O < r.length; O++) {
          const V = r[O];
          (n.mergedAttrs = Ai(n.mergedAttrs, V.hostAttrs)),
            Fb(e, n, t, C, V),
            Rb(C, V, s),
            null !== V.contentQueries && (n.flags |= 4),
            (null !== V.hostBindings ||
              null !== V.hostAttrs ||
              0 !== V.hostVars) &&
              (n.flags |= 64);
          const ne = V.type.prototype;
          !f &&
            (ne.ngOnChanges || ne.ngOnInit || ne.ngDoCheck) &&
            ((e.preOrderHooks ??= []).push(n.index), (f = !0)),
            !y &&
              (ne.ngOnChanges || ne.ngDoCheck) &&
              ((e.preOrderCheckHooks ??= []).push(n.index), (y = !0)),
            C++;
        }
        !(function Cb(e, t, n) {
          const s = t.directiveEnd,
            c = e.data,
            f = t.attrs,
            y = [];
          let C = null,
            O = null;
          for (let V = t.directiveStart; V < s; V++) {
            const ne = c[V],
              ve = n ? n.get(ne) : null,
              it = ve ? ve.outputs : null;
            (C = Bp(ne.inputs, V, C, ve ? ve.inputs : null)),
              (O = Bp(ne.outputs, V, O, it));
            const bt = null === C || null === f || Ur(t) ? null : Vb(C, V, f);
            y.push(bt);
          }
          null !== C &&
            (C.hasOwnProperty("class") && (t.flags |= 8),
            C.hasOwnProperty("style") && (t.flags |= 16)),
            (t.initialInputs = y),
            (t.inputs = C),
            (t.outputs = O);
        })(e, n, c);
      }
      function $p(e, t, n) {
        const r = n.directiveStart,
          s = n.directiveEnd,
          c = n.index,
          f = (function cu() {
            return tn.lFrame.currentDirectiveIndex;
          })();
        try {
          Yi(c);
          for (let y = r; y < s; y++) {
            const C = e.data[y],
              O = t[y];
            v(y),
              (null !== C.hostBindings ||
                0 !== C.hostVars ||
                null !== C.hostAttrs) &&
                xb(C, O);
          }
        } finally {
          Yi(-1), v(f);
        }
      }
      function xb(e, t) {
        null !== e.hostBindings && e.hostBindings(1, t);
      }
      function Md(e, t, n) {
        (t.componentOffset = n), (e.components ??= []).push(t.index);
      }
      function Rb(e, t, n) {
        if (n) {
          if (t.exportAs)
            for (let r = 0; r < t.exportAs.length; r++) n[t.exportAs[r]] = e;
          A(t) && (n[""] = e);
        }
      }
      function Fb(e, t, n, r, s) {
        e.data[r] = s;
        const c = s.factory || (s.factory = Ke(s.type)),
          f = new Ko(c, A(s), ga);
        (e.blueprint[r] = f),
          (n[r] = f),
          (function Ab(e, t, n, r, s) {
            const c = s.hostBindings;
            if (c) {
              let f = e.hostBindingOpCodes;
              null === f && (f = e.hostBindingOpCodes = []);
              const y = ~t.index;
              (function Ib(e) {
                let t = e.length;
                for (; t > 0; ) {
                  const n = e[--t];
                  if ("number" == typeof n && n < 0) return n;
                }
                return 0;
              })(f) != y && f.push(y),
                f.push(n, r, c);
            }
          })(e, t, r, ul(e, n, s.hostVars, Sn), s);
      }
      function Xs(e, t, n, r, s, c) {
        const f = Ht(e, t);
        !(function Ad(e, t, n, r, s, c, f) {
          if (null == c) e.removeAttribute(t, s, n);
          else {
            const y = null == f ? At(c) : f(c, r || "", s);
            e.setAttribute(t, s, y, n);
          }
        })(t[sn], f, c, e.value, n, r, s);
      }
      function Bb(e, t, n, r, s, c) {
        const f = c[t];
        if (null !== f)
          for (let y = 0; y < f.length; ) Hp(r, n, f[y++], f[y++], f[y++]);
      }
      function Hp(e, t, n, r, s) {
        const c = rt(null);
        try {
          const f = e.inputTransforms;
          null !== f && f.hasOwnProperty(r) && (s = f[r].call(t, s)),
            null !== e.setInput ? e.setInput(t, s, n, r) : (t[r] = s);
        } finally {
          rt(c);
        }
      }
      function Vb(e, t, n) {
        let r = null,
          s = 0;
        for (; s < n.length; ) {
          const c = n[s];
          if (0 !== c)
            if (5 !== c) {
              if ("number" == typeof c) break;
              if (e.hasOwnProperty(c)) {
                null === r && (r = []);
                const f = e[c];
                for (let y = 0; y < f.length; y += 2)
                  if (f[y] === t) {
                    r.push(c, f[y + 1], n[s + 1]);
                    break;
                  }
              }
              s += 2;
            } else s += 2;
          else s += 4;
        }
        return r;
      }
      function jp(e, t, n, r) {
        return [e, !0, !1, t, null, 0, r, n, null, null, null];
      }
      function zp(e, t) {
        const n = e.contentQueries;
        if (null !== n)
          for (let r = 0; r < n.length; r += 2) {
            const c = n[r + 1];
            if (-1 !== c) {
              const f = e.data[c];
              S(n[r]), f.contentQueries(2, t[c], c);
            }
          }
      }
      function Ac(e, t) {
        return e[$r] ? (e[ts][br] = t) : (e[$r] = t), (e[ts] = t), t;
      }
      function Id(e, t, n) {
        S(0);
        const r = rt(null);
        try {
          t(e, n);
        } finally {
          rt(r);
        }
      }
      function Gp(e) {
        return e[Vr] || (e[Vr] = []);
      }
      function Wp(e) {
        return e.cleanup || (e.cleanup = []);
      }
      function qp(e, t) {
        const n = e[Kr],
          r = n ? n.get(vo, null) : null;
        r && r.handleError(t);
      }
      function Od(e, t, n, r, s) {
        for (let c = 0; c < n.length; ) {
          const f = n[c++],
            y = n[c++];
          Hp(e.data[f], t[f], r, y, s);
        }
      }
      function uo(e, t, n) {
        const r = Gt(t, e);
        !(function wh(e, t, n) {
          e.setValue(t, n);
        })(e[sn], r, n);
      }
      function Ub(e, t) {
        const n = hr(t, e),
          r = n[Rt];
        !(function $b(e, t) {
          for (let n = t.length; n < e.blueprint.length; n++)
            t.push(e.blueprint[n]);
        })(r, n);
        const s = n[Cn];
        null !== s && null === n[xr] && (n[xr] = ud(s, n[Kr])), xd(r, n, n[nr]);
      }
      function xd(e, t, n) {
        ie(t);
        try {
          const r = e.viewQuery;
          null !== r && Id(1, r, n);
          const s = e.template;
          null !== s && Lp(e, t, s, 1, n),
            e.firstCreatePass && (e.firstCreatePass = !1),
            e.staticContentQueries && zp(e, t),
            e.staticViewQueries && Id(2, e.viewQuery, n);
          const c = e.components;
          null !== c &&
            (function Hb(e, t) {
              for (let n = 0; n < t.length; n++) Ub(e, t[n]);
            })(t, c);
        } catch (r) {
          throw (
            (e.firstCreatePass &&
              ((e.incompleteFirstPass = !0), (e.firstCreatePass = !1)),
            r)
          );
        } finally {
          (t[Qt] &= -5), ir();
        }
      }
      let Zp = (() => {
        class e {
          constructor() {
            (this.all = new Set()), (this.queue = new Map());
          }
          create(n, r, s) {
            const c = typeof Zone > "u" ? null : Zone.current,
              f = (function Ut(e, t, n) {
                const r = Object.create(jt);
                n && (r.consumerAllowSignalWrites = !0),
                  (r.fn = e),
                  (r.schedule = t);
                const s = (f) => {
                  r.cleanupFn = f;
                };
                return (
                  (r.ref = {
                    notify: () => Fn(r),
                    run: () => {
                      if (((r.dirty = !1), r.hasRun && !Bi(r))) return;
                      r.hasRun = !0;
                      const f = Nr(r);
                      try {
                        r.cleanupFn(), (r.cleanupFn = xt), r.fn(s);
                      } finally {
                        ai(r, f);
                      }
                    },
                    cleanup: () => r.cleanupFn(),
                  }),
                  r.ref
                );
              })(
                n,
                (O) => {
                  this.all.has(O) && this.queue.set(O, c);
                },
                s
              );
            let y;
            this.all.add(f), f.notify();
            const C = () => {
              f.cleanup(), y?.(), this.all.delete(f), this.queue.delete(f);
            };
            return (y = r?.onDestroy(C)), { destroy: C };
          }
          flush() {
            if (0 !== this.queue.size)
              for (const [n, r] of this.queue)
                this.queue.delete(n), r ? r.run(() => n.run()) : n.run();
          }
          get isQueueEmpty() {
            return 0 === this.queue.size;
          }
          static #e = (this.ɵprov = cn({
            token: e,
            providedIn: "root",
            factory: () => new e(),
          }));
        }
        return e;
      })();
      function Ic(e, t, n) {
        let r = n ? e.styles : null,
          s = n ? e.classes : null,
          c = 0;
        if (null !== t)
          for (let f = 0; f < t.length; f++) {
            const y = t[f];
            "number" == typeof y
              ? (c = y)
              : 1 == c
              ? (s = $e(s, y))
              : 2 == c && (r = $e(r, y + ": " + t[++f] + ";"));
          }
        n ? (e.styles = r) : (e.stylesWithoutHost = r),
          n ? (e.classes = s) : (e.classesWithoutHost = s);
      }
      function dl(e, t, n, r, s = !1) {
        for (; null !== n; ) {
          const c = t[n.index];
          null !== c && r.push(Jn(c)), w(c) && Kp(c, r);
          const f = n.type;
          if (8 & f) dl(e, t, n.child, r);
          else if (32 & f) {
            const y = Nu(n, t);
            let C;
            for (; (C = y()); ) r.push(C);
          } else if (16 & f) {
            const y = Ah(t, n);
            if (Array.isArray(y)) r.push(...y);
            else {
              const C = Ja(t[Gn]);
              dl(C[Rt], C, y, r, !0);
            }
          }
          n = s ? n.projectionNext : n.next;
        }
        return r;
      }
      function Kp(e, t) {
        for (let n = bn; n < e.length; n++) {
          const r = e[n],
            s = r[Rt].firstChild;
          null !== s && dl(r[Rt], r, s, t);
        }
        e[Jr] !== e[Cn] && t.push(e[Jr]);
      }
      function Oc(e, t, n, r = !0) {
        const s = t[xi],
          c = s.rendererFactory,
          f = s.afterRenderEventManager;
        c.begin?.(), f?.begin();
        try {
          Xp(e, t, e.template, n);
        } catch (C) {
          throw (r && qp(t, C), C);
        } finally {
          c.end?.(), s.effectManager?.flush(), f?.end();
        }
      }
      function Xp(e, t, n, r) {
        const s = t[Qt];
        if (256 != (256 & s)) {
          t[xi].effectManager?.flush(), ie(t);
          try {
            jo(t),
              (function Ba(e) {
                return (tn.lFrame.bindingIndex = e);
              })(e.bindingStartIndex),
              null !== n && Lp(e, t, n, 2, r);
            const f = 3 == (3 & s);
            if (f) {
              const O = e.preOrderCheckHooks;
              null !== O && Do(t, O, null);
            } else {
              const O = e.preOrderHooks;
              null !== O && Ha(t, O, 0, null), Fl(t, 0);
            }
            if (
              ((function Gb(e) {
                for (let t = mh(e); null !== t; t = yh(t)) {
                  if (!t[As]) continue;
                  const n = t[Ni];
                  for (let r = 0; r < n.length; r++) {
                    Gr(n[r]);
                  }
                }
              })(t),
              Qp(t, 2),
              null !== e.contentQueries && zp(e, t),
              f)
            ) {
              const O = e.contentCheckHooks;
              null !== O && Do(t, O);
            } else {
              const O = e.contentHooks;
              null !== O && Ha(t, O, 1), Fl(t, 1);
            }
            !(function mb(e, t) {
              const n = e.hostBindingOpCodes;
              if (null === n) return;
              const r = Ap(t, ki);
              try {
                for (let s = 0; s < n.length; s++) {
                  const c = n[s];
                  if (c < 0) Yi(~c);
                  else {
                    const f = c,
                      y = n[++s],
                      C = n[++s];
                    lu(y, f), (r.dirty = !1);
                    const O = Nr(r);
                    try {
                      C(2, t[f]);
                    } finally {
                      ai(r, O);
                    }
                  }
                }
              } finally {
                null === t[ki] && Ip(t, ki), Yi(-1);
              }
            })(e, t);
            const y = e.components;
            null !== y && eg(t, y, 0);
            const C = e.viewQuery;
            if ((null !== C && Id(2, C, r), f)) {
              const O = e.viewCheckHooks;
              null !== O && Do(t, O);
            } else {
              const O = e.viewHooks;
              null !== O && Ha(t, O, 2), Fl(t, 2);
            }
            !0 === e.firstUpdatePass && (e.firstUpdatePass = !1),
              (t[Qt] &= -73),
              os(t);
          } finally {
            ir();
          }
        }
      }
      function Qp(e, t) {
        for (let n = mh(e); null !== n; n = yh(n))
          for (let r = bn; r < n.length; r++) Jp(n[r], t);
      }
      function Wb(e, t, n) {
        Jp(hr(t, e), n);
      }
      function Jp(e, t) {
        if (
          !(function Os(e) {
            return 128 == (128 & e[Qt]);
          })(e)
        )
          return;
        const n = e[Rt],
          r = e[Qt];
        if ((80 & r && 0 === t) || 1024 & r || 2 === t)
          Xp(n, e, n.template, e[nr]);
        else if (e[Ci] > 0) {
          Qp(e, 1);
          const s = n.components;
          null !== s && eg(e, s, 1);
        }
      }
      function eg(e, t, n) {
        for (let r = 0; r < t.length; r++) Wb(e, t[r], n);
      }
      class fl {
        get rootNodes() {
          const t = this._lView,
            n = t[Rt];
          return dl(n, t, n.firstChild, []);
        }
        constructor(t, n) {
          (this._lView = t),
            (this._cdRefInjectingView = n),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get context() {
          return this._lView[nr];
        }
        set context(t) {
          this._lView[nr] = t;
        }
        get destroyed() {
          return 256 == (256 & this._lView[Qt]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[Un];
            if (w(t)) {
              const n = t[8],
                r = n ? n.indexOf(this) : -1;
              r > -1 && (lc(t, r), ta(n, r));
            }
            this._attachedToViewContainer = !1;
          }
          Lu(this._lView[Rt], this._lView);
        }
        onDestroy(t) {
          !(function no(e, t) {
            if (256 == (256 & e[Qt])) throw new Ne(911, !1);
            null === e[Nn] && (e[Nn] = []), e[Nn].push(t);
          })(this._lView, t);
        }
        markForCheck() {
          cl(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[Qt] &= -129;
        }
        reattach() {
          this._lView[Qt] |= 128;
        }
        detectChanges() {
          Oc(this._lView[Rt], this._lView, this.context);
        }
        checkNoChanges() {}
        attachToViewContainerRef() {
          if (this._appRef) throw new Ne(902, !1);
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          (this._appRef = null),
            (function x0(e, t) {
              tl(e, t, t[sn], 2, null, null);
            })(this._lView[Rt], this._lView);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new Ne(902, !1);
          this._appRef = t;
        }
      }
      class Yb extends fl {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          const t = this._view;
          Oc(t[Rt], t, t[nr], !1);
        }
        checkNoChanges() {}
        get context() {
          return null;
        }
      }
      class tg extends al {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const n = gn(t);
          return new hl(n, this.ngModule);
        }
      }
      function ng(e) {
        const t = [];
        for (let n in e)
          e.hasOwnProperty(n) && t.push({ propName: e[n], templateName: n });
        return t;
      }
      class Zb {
        constructor(t, n) {
          (this.injector = t), (this.parentInjector = n);
        }
        get(t, n, r) {
          r = Et(r);
          const s = this.injector.get(t, hd, r);
          return s !== hd || n === hd ? s : this.parentInjector.get(t, n, r);
        }
      }
      class hl extends ip {
        get inputs() {
          const t = this.componentDef,
            n = t.inputTransforms,
            r = ng(t.inputs);
          if (null !== n)
            for (const s of r)
              n.hasOwnProperty(s.propName) && (s.transform = n[s.propName]);
          return r;
        }
        get outputs() {
          return ng(this.componentDef.outputs);
        }
        constructor(t, n) {
          super(),
            (this.componentDef = t),
            (this.ngModule = n),
            (this.componentType = t.type),
            (this.selector = (function hs(e) {
              return e.map(Ss).join(",");
            })(t.selectors)),
            (this.ngContentSelectors = t.ngContentSelectors
              ? t.ngContentSelectors
              : []),
            (this.isBoundToModule = !!n);
        }
        create(t, n, r, s) {
          let c = (s = s || this.ngModule) instanceof Zs ? s : s?.injector;
          c &&
            null !== this.componentDef.getStandaloneInjector &&
            (c = this.componentDef.getStandaloneInjector(c) || c);
          const f = c ? new Zb(t, c) : t,
            y = f.get(op, null);
          if (null === y) throw new Ne(407, !1);
          const ne = {
              rendererFactory: y,
              sanitizer: f.get(Ww, null),
              effectManager: f.get(Zp, null),
              afterRenderEventManager: f.get(bd, null),
            },
            ve = y.createRenderer(null, this.componentDef),
            Te = this.componentDef.selectors[0][0] || "div",
            it = r
              ? (function vb(e, t, n, r) {
                  const c = r.get(Cp, !1) || n === er.ShadowDom,
                    f = e.selectRootElement(t, c);
                  return (
                    (function wb(e) {
                      kp(e);
                    })(f),
                    f
                  );
                })(ve, r, this.componentDef.encapsulation, f)
              : ac(
                  ve,
                  Te,
                  (function qb(e) {
                    const t = e.toLowerCase();
                    return "svg" === t ? "svg" : "math" === t ? "math" : null;
                  })(Te)
                ),
            Zt = this.componentDef.signals
              ? 4608
              : this.componentDef.onPush
              ? 576
              : 528;
          let gt = null;
          null !== it && (gt = ud(it, f, !0));
          const vn = Sd(
              0,
              null,
              null,
              1,
              0,
              null,
              null,
              null,
              null,
              null,
              null
            ),
            Rn = Mc(null, vn, null, Zt, null, null, ne, ve, f, null, gt);
          let vr, Ds;
          ie(Rn);
          try {
            const fo = this.componentDef;
            let Na,
              Vf = null;
            fo.findHostDirectiveDefs
              ? ((Na = []),
                (Vf = new Map()),
                fo.findHostDirectiveDefs(fo, Na, Vf),
                Na.push(fo))
              : (Na = [fo]);
            const tT = (function Xb(e, t) {
                const n = e[Rt],
                  r = yn;
                return (e[r] = t), ma(n, r, 2, "#host", null);
              })(Rn, it),
              nT = (function Qb(e, t, n, r, s, c, f) {
                const y = s[Rt];
                !(function Jb(e, t, n, r) {
                  for (const s of e)
                    t.mergedAttrs = Ai(t.mergedAttrs, s.hostAttrs);
                  null !== t.mergedAttrs &&
                    (Ic(t, t.mergedAttrs, !0), null !== n && Ph(r, n, t));
                })(r, e, t, f);
                let C = null;
                null !== t && (C = ud(t, s[Kr]));
                const O = c.rendererFactory.createRenderer(t, n);
                let V = 16;
                n.signals ? (V = 4096) : n.onPush && (V = 64);
                const ne = Mc(
                  s,
                  Fp(n),
                  null,
                  V,
                  s[e.index],
                  e,
                  c,
                  O,
                  null,
                  null,
                  C
                );
                return (
                  y.firstCreatePass && Md(y, e, r.length - 1),
                  Ac(s, ne),
                  (s[e.index] = ne)
                );
              })(tT, it, fo, Na, Rn, ne, ve);
            (Ds = Pn(vn, yn)),
              it &&
                (function t_(e, t, n, r) {
                  if (r) Br(e, n, ["ng-version", Yw.full]);
                  else {
                    const { attrs: s, classes: c } = (function Xi(e) {
                      const t = [],
                        n = [];
                      let r = 1,
                        s = 2;
                      for (; r < e.length; ) {
                        let c = e[r];
                        if ("string" == typeof c)
                          2 === s
                            ? "" !== c && t.push(c, e[++r])
                            : 8 === s && n.push(c);
                        else {
                          if (!Sr(s)) break;
                          s = c;
                        }
                        r++;
                      }
                      return { attrs: t, classes: n };
                    })(t.selectors[0]);
                    s && Br(e, n, s),
                      c && c.length > 0 && xh(e, n, c.join(" "));
                  }
                })(ve, fo, it, r),
              void 0 !== n &&
                (function n_(e, t, n) {
                  const r = (e.projection = []);
                  for (let s = 0; s < t.length; s++) {
                    const c = n[s];
                    r.push(null != c ? Array.from(c) : null);
                  }
                })(Ds, this.ngContentSelectors, n),
              (vr = (function e_(e, t, n, r, s, c) {
                const f = ui(),
                  y = s[Rt],
                  C = Ht(f, s);
                Up(y, s, f, n, null, r);
                for (let V = 0; V < n.length; V++)
                  qi(so(s, y, f.directiveStart + V, f), s);
                $p(y, s, f), C && qi(C, s);
                const O = so(s, y, f.directiveStart + f.componentOffset, f);
                if (((e[nr] = s[nr] = O), null !== c))
                  for (const V of c) V(O, t);
                return Ed(y, f, e), O;
              })(nT, fo, Na, Vf, Rn, [r_])),
              xd(vn, Rn, null);
          } finally {
            ir();
          }
          return new Kb(this.componentType, vr, fa(Ds, Rn), Rn, Ds);
        }
      }
      class Kb extends Vw {
        constructor(t, n, r, s, c) {
          super(),
            (this.location = r),
            (this._rootLView = s),
            (this._tNode = c),
            (this.previousInputValues = null),
            (this.instance = n),
            (this.hostView = this.changeDetectorRef = new Yb(s)),
            (this.componentType = t);
        }
        setInput(t, n) {
          const r = this._tNode.inputs;
          let s;
          if (null !== r && (s = r[t])) {
            if (
              ((this.previousInputValues ??= new Map()),
              this.previousInputValues.has(t) &&
                Object.is(this.previousInputValues.get(t), n))
            )
              return;
            const c = this._rootLView;
            Od(c[Rt], c, s, t, n),
              this.previousInputValues.set(t, n),
              cl(hr(this._tNode.index, c));
          }
        }
        get injector() {
          return new Ui(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      function r_() {
        const e = ui();
        $a(mt()[Rt], e);
      }
      function Pd(e) {
        let t = (function rg(e) {
            return Object.getPrototypeOf(e.prototype).constructor;
          })(e.type),
          n = !0;
        const r = [e];
        for (; t; ) {
          let s;
          if (A(e)) s = t.ɵcmp || t.ɵdir;
          else {
            if (t.ɵcmp) throw new Ne(903, !1);
            s = t.ɵdir;
          }
          if (s) {
            if (n) {
              r.push(s);
              const f = e;
              (f.inputs = xc(e.inputs)),
                (f.inputTransforms = xc(e.inputTransforms)),
                (f.declaredInputs = xc(e.declaredInputs)),
                (f.outputs = xc(e.outputs));
              const y = s.hostBindings;
              y && a_(e, y);
              const C = s.viewQuery,
                O = s.contentQueries;
              if (
                (C && s_(e, C),
                O && o_(e, O),
                st(e.inputs, s.inputs),
                st(e.declaredInputs, s.declaredInputs),
                st(e.outputs, s.outputs),
                null !== s.inputTransforms &&
                  (null === f.inputTransforms && (f.inputTransforms = {}),
                  st(f.inputTransforms, s.inputTransforms)),
                A(s) && s.data.animation)
              ) {
                const V = e.data;
                V.animation = (V.animation || []).concat(s.data.animation);
              }
            }
            const c = s.features;
            if (c)
              for (let f = 0; f < c.length; f++) {
                const y = c[f];
                y && y.ngInherit && y(e), y === Pd && (n = !1);
              }
          }
          t = Object.getPrototypeOf(t);
        }
        !(function i_(e) {
          let t = 0,
            n = null;
          for (let r = e.length - 1; r >= 0; r--) {
            const s = e[r];
            (s.hostVars = t += s.hostVars),
              (s.hostAttrs = Ai(s.hostAttrs, (n = Ai(n, s.hostAttrs))));
          }
        })(r);
      }
      function xc(e) {
        return e === jn ? {} : e === Xt ? [] : e;
      }
      function s_(e, t) {
        const n = e.viewQuery;
        e.viewQuery = n
          ? (r, s) => {
              t(r, s), n(r, s);
            }
          : t;
      }
      function o_(e, t) {
        const n = e.contentQueries;
        e.contentQueries = n
          ? (r, s, c) => {
              t(r, s, c), n(r, s, c);
            }
          : t;
      }
      function a_(e, t) {
        const n = e.hostBindings;
        e.hostBindings = n
          ? (r, s) => {
              t(r, s), n(r, s);
            }
          : t;
      }
      function ag(e) {
        const t = e.inputConfig,
          n = {};
        for (const r in t)
          if (t.hasOwnProperty(r)) {
            const s = t[r];
            Array.isArray(s) && s[2] && (n[r] = s[2]);
          }
        e.inputTransforms = n;
      }
      function Pc(e) {
        return (
          !!Nd(e) &&
          (Array.isArray(e) || (!(e instanceof Map) && Symbol.iterator in e))
        );
      }
      function Nd(e) {
        return null !== e && ("function" == typeof e || "object" == typeof e);
      }
      function Qs(e, t, n) {
        return (e[t] = n);
      }
      function Zi(e, t, n) {
        return !Object.is(e[t], n) && ((e[t] = n), !0);
      }
      function Bo(e, t, n, r) {
        const s = Zi(e, t, n);
        return Zi(e, t + 1, r) || s;
      }
      function Rd(e, t, n, r) {
        const s = mt();
        return Zi(s, go(), t) && (Wn(), Xs(_r(), s, e, t, n, r)), Rd;
      }
      function va(e, t, n, r) {
        return Zi(e, go(), n) ? t + At(n) + r : Sn;
      }
      function wa(e, t, n, r, s, c) {
        const y = Bo(
          e,
          (function ls() {
            return tn.lFrame.bindingIndex;
          })(),
          n,
          s
        );
        return Ns(2), y ? t + At(n) + r + At(s) + c : Sn;
      }
      function bg(e, t, n, r, s, c, f, y) {
        const C = mt(),
          O = Wn(),
          V = e + yn,
          ne = O.firstCreatePass
            ? (function P_(e, t, n, r, s, c, f, y, C) {
                const O = t.consts,
                  V = ma(t, e, 4, f || null, xs(O, y));
                Td(t, n, V, xs(O, C)), $a(t, V);
                const ne = (V.tView = Sd(
                  2,
                  V,
                  r,
                  s,
                  c,
                  t.directiveRegistry,
                  t.pipeRegistry,
                  null,
                  t.schemas,
                  O,
                  null
                ));
                return (
                  null !== t.queries &&
                    (t.queries.template(t, V),
                    (ne.queries = t.queries.embeddedTView(V))),
                  V
                );
              })(V, O, C, t, n, r, s, c, f)
            : O.data[V];
        as(ne, !1);
        const ve = _g(O, C, ne, e);
        Ua() && uc(O, C, ve, ne),
          qi(ve, C),
          Ac(C, (C[V] = jp(ve, C, ve, ne))),
          E(ne) && Dd(O, C, ne),
          null != f && Cd(C, ne, y);
      }
      let _g = function Eg(e, t, n, r) {
        return io(!0), t[sn].createComment("");
      };
      function Dg(e) {
        return yr(
          (function Pl() {
            return tn.lFrame.contextLView;
          })(),
          yn + e
        );
      }
      function Ud(e, t, n) {
        const r = mt();
        return Zi(r, go(), t) && Ls(Wn(), _r(), r, e, t, r[sn], n, !1), Ud;
      }
      function $d(e, t, n, r, s) {
        const f = s ? "class" : "style";
        Od(e, n, t.inputs[f], f, r);
      }
      function kc(e, t, n, r) {
        const s = mt(),
          c = Wn(),
          f = yn + e,
          y = s[sn],
          C = c.firstCreatePass
            ? (function F_(e, t, n, r, s, c) {
                const f = t.consts,
                  C = ma(t, e, 2, r, xs(f, s));
                return (
                  Td(t, n, C, xs(f, c)),
                  null !== C.attrs && Ic(C, C.attrs, !1),
                  null !== C.mergedAttrs && Ic(C, C.mergedAttrs, !0),
                  null !== t.queries && t.queries.elementStart(t, C),
                  C
                );
              })(f, c, s, t, n, r)
            : c.data[f],
          O = Cg(c, s, C, y, t, e);
        s[f] = O;
        const V = E(C);
        return (
          as(C, !0),
          Ph(y, O, C),
          32 != (32 & C.flags) && Ua() && uc(c, s, O, C),
          0 ===
            (function iu() {
              return tn.lFrame.elementDepthCount;
            })() && qi(O, s),
          (function su() {
            tn.lFrame.elementDepthCount++;
          })(),
          V && (Dd(c, s, C), Ed(c, C, s)),
          null !== r && Cd(s, C),
          kc
        );
      }
      function Bc() {
        let e = ui();
        qo() ? po() : ((e = e.parent), as(e, !1));
        const t = e;
        (function Ol(e) {
          return tn.skipHydrationRootTNode === e;
        })(t) &&
          (function Go() {
            tn.skipHydrationRootTNode = null;
          })(),
          (function _o() {
            tn.lFrame.elementDepthCount--;
          })();
        const n = Wn();
        return (
          n.firstCreatePass && ($a(n, e), i(e) && n.queries.elementEnd(e)),
          null != t.classesWithoutHost &&
            (function $f(e) {
              return 0 != (8 & e.flags);
            })(t) &&
            $d(n, t, mt(), t.classesWithoutHost, !0),
          null != t.stylesWithoutHost &&
            (function Vl(e) {
              return 0 != (16 & e.flags);
            })(t) &&
            $d(n, t, mt(), t.stylesWithoutHost, !1),
          Bc
        );
      }
      function Hd(e, t, n, r) {
        return kc(e, t, n, r), Bc(), Hd;
      }
      let Cg = (e, t, n, r, s, c) => (
        io(!0),
        ac(
          r,
          s,
          (function uu() {
            return tn.lFrame.currentNamespace;
          })()
        )
      );
      function Vc(e, t, n) {
        const r = mt(),
          s = Wn(),
          c = e + yn,
          f = s.firstCreatePass
            ? (function V_(e, t, n, r, s) {
                const c = t.consts,
                  f = xs(c, r),
                  y = ma(t, e, 8, "ng-container", f);
                return (
                  null !== f && Ic(y, f, !0),
                  Td(t, n, y, xs(c, s)),
                  null !== t.queries && t.queries.elementStart(t, y),
                  y
                );
              })(c, s, r, t, n)
            : s.data[c];
        as(f, !0);
        const y = Tg(s, r, f, e);
        return (
          (r[c] = y),
          Ua() && uc(s, r, y, f),
          qi(y, r),
          E(f) && (Dd(s, r, f), Ed(s, f, r)),
          null != n && Cd(r, f),
          Vc
        );
      }
      function Uc() {
        let e = ui();
        const t = Wn();
        return (
          qo() ? po() : ((e = e.parent), as(e, !1)),
          t.firstCreatePass && ($a(t, e), i(e) && t.queries.elementEnd(e)),
          Uc
        );
      }
      let Tg = (e, t, n, r) => (io(!0), Ru(t[sn], ""));
      function Mg() {
        return mt();
      }
      function jd(e) {
        return !!e && "function" == typeof e.then;
      }
      function Ag(e) {
        return !!e && "function" == typeof e.subscribe;
      }
      function zd(e, t, n, r) {
        const s = mt(),
          c = Wn(),
          f = ui();
        return (
          (function Og(e, t, n, r, s, c, f) {
            const y = E(r),
              O = e.firstCreatePass && Wp(e),
              V = t[nr],
              ne = Gp(t);
            let ve = !0;
            if (3 & r.type || f) {
              const bt = Ht(r, t),
                kt = f ? f(bt) : bt,
                Zt = ne.length,
                gt = f ? (Rn) => f(Jn(Rn[r.index])) : r.index;
              let vn = null;
              if (
                (!f &&
                  y &&
                  (vn = (function H_(e, t, n, r) {
                    const s = e.cleanup;
                    if (null != s)
                      for (let c = 0; c < s.length - 1; c += 2) {
                        const f = s[c];
                        if (f === n && s[c + 1] === r) {
                          const y = t[Vr],
                            C = s[c + 2];
                          return y.length > C ? y[C] : null;
                        }
                        "string" == typeof f && (c += 2);
                      }
                    return null;
                  })(e, t, s, r.index)),
                null !== vn)
              )
                ((vn.__ngLastListenerFn__ || vn).__ngNextListenerFn__ = c),
                  (vn.__ngLastListenerFn__ = c),
                  (ve = !1);
              else {
                c = Pg(r, t, V, c, !1);
                const Rn = n.listen(kt, s, c);
                ne.push(c, Rn), O && O.push(s, gt, Zt, Zt + 1);
              }
            } else c = Pg(r, t, V, c, !1);
            const Te = r.outputs;
            let it;
            if (ve && null !== Te && (it = Te[s])) {
              const bt = it.length;
              if (bt)
                for (let kt = 0; kt < bt; kt += 2) {
                  const vr = t[it[kt]][it[kt + 1]].subscribe(c),
                    Ds = ne.length;
                  ne.push(c, vr), O && O.push(s, r.index, Ds, -(Ds + 1));
                }
            }
          })(c, s, s[sn], f, e, t, r),
          zd
        );
      }
      function xg(e, t, n, r) {
        try {
          return Wi(6, t, n), !1 !== n(r);
        } catch (s) {
          return qp(e, s), !1;
        } finally {
          Wi(7, t, n);
        }
      }
      function Pg(e, t, n, r, s) {
        return function c(f) {
          if (f === Function) return r;
          cl(e.componentOffset > -1 ? hr(e.index, t) : t);
          let C = xg(t, n, r, f),
            O = c.__ngNextListenerFn__;
          for (; O; ) (C = xg(t, n, O, f) && C), (O = O.__ngNextListenerFn__);
          return s && !1 === C && f.preventDefault(), C;
        };
      }
      function Ng(e = 1) {
        return (function kn(e) {
          return (tn.lFrame.contextLView = (function Vs(e, t) {
            for (; e > 0; ) (t = t[si]), e--;
            return t;
          })(e, tn.lFrame.contextLView))[nr];
        })(e);
      }
      function j_(e, t) {
        let n = null;
        const r = (function Ar(e) {
          const t = e.attrs;
          if (null != t) {
            const n = t.indexOf(5);
            if (!(1 & n)) return t[n + 1];
          }
          return null;
        })(e);
        for (let s = 0; s < t.length; s++) {
          const c = t[s];
          if ("*" !== c) {
            if (null === r ? hi(e, c, !0) : Ki(r, c)) return s;
          } else n = s;
        }
        return n;
      }
      function Rg(e) {
        const t = mt()[Gn][mr];
        if (!t.projection) {
          const r = (t.projection = o(e ? e.length : 1, null)),
            s = r.slice();
          let c = t.child;
          for (; null !== c; ) {
            const f = e ? j_(c, e) : 0;
            null !== f &&
              (s[f] ? (s[f].projectionNext = c) : (r[f] = c), (s[f] = c)),
              (c = c.next);
          }
        }
      }
      function Lg(e, t = 0, n) {
        const r = mt(),
          s = Wn(),
          c = ma(s, yn + e, 16, null, n || null);
        null === c.projection && (c.projection = t),
          po(),
          (!r[xr] || Ps()) &&
            32 != (32 & c.flags) &&
            (function V0(e, t, n) {
              Oh(t[sn], 0, t, n, ku(e, n, t), Ch(n.parent || t[mr], n, t));
            })(s, r, c);
      }
      function Gd(e, t, n) {
        return Wd(e, "", t, "", n), Gd;
      }
      function Wd(e, t, n, r, s) {
        const c = mt(),
          f = va(c, t, n, r);
        return f !== Sn && Ls(Wn(), _r(), c, e, f, c[sn], s, !1), Wd;
      }
      function $c(e, t) {
        return (e << 17) | (t << 2);
      }
      function wo(e) {
        return (e >> 17) & 32767;
      }
      function Yd(e) {
        return 2 | e;
      }
      function Vo(e) {
        return (131068 & e) >> 2;
      }
      function qd(e, t) {
        return (-131069 & e) | (t << 2);
      }
      function Zd(e) {
        return 1 | e;
      }
      function zg(e, t, n, r, s) {
        const c = e[n + 1],
          f = null === t;
        let y = r ? wo(c) : Vo(c),
          C = !1;
        for (; 0 !== y && (!1 === C || f); ) {
          const V = e[y + 1];
          Z_(e[y], t) && ((C = !0), (e[y + 1] = r ? Zd(V) : Yd(V))),
            (y = r ? wo(V) : Vo(V));
        }
        C && (e[n + 1] = r ? Yd(c) : Zd(c));
      }
      function Z_(e, t) {
        return (
          null === e ||
          null == t ||
          (Array.isArray(e) ? e[1] : e) === t ||
          (!(!Array.isArray(e) || "string" != typeof t) && na(e, t) >= 0)
        );
      }
      const Mi = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function Gg(e) {
        return e.substring(Mi.key, Mi.keyEnd);
      }
      function Wg(e, t) {
        const n = Mi.textEnd;
        return n === t
          ? -1
          : ((t = Mi.keyEnd =
              (function J_(e, t, n) {
                for (; t < n && e.charCodeAt(t) > 32; ) t++;
                return t;
              })(e, (Mi.key = t), n)),
            Ta(e, t, n));
      }
      function Ta(e, t, n) {
        for (; t < n && e.charCodeAt(t) <= 32; ) t++;
        return t;
      }
      function Kd(e, t, n) {
        return Ws(e, t, n, !1), Kd;
      }
      function Xd(e, t) {
        return Ws(e, t, null, !0), Xd;
      }
      function Xg(e) {
        !(function Ys(e, t, n, r) {
          const s = Wn(),
            c = Ns(2);
          s.firstUpdatePass && Jg(s, null, c, r);
          const f = mt();
          if (n !== Sn && Zi(f, c, n)) {
            const y = s.data[ei()];
            if (rm(y, r) && !Qg(s, c)) {
              let C = r ? y.classesWithoutHost : y.stylesWithoutHost;
              null !== C && (n = $e(C, n || "")), $d(s, y, f, n, r);
            } else
              !(function cE(e, t, n, r, s, c, f, y) {
                s === Sn && (s = Xt);
                let C = 0,
                  O = 0,
                  V = 0 < s.length ? s[0] : null,
                  ne = 0 < c.length ? c[0] : null;
                for (; null !== V || null !== ne; ) {
                  const ve = C < s.length ? s[C + 1] : void 0,
                    Te = O < c.length ? c[O + 1] : void 0;
                  let bt,
                    it = null;
                  V === ne
                    ? ((C += 2), (O += 2), ve !== Te && ((it = ne), (bt = Te)))
                    : null === ne || (null !== V && V < ne)
                    ? ((C += 2), (it = V))
                    : ((O += 2), (it = ne), (bt = Te)),
                    null !== it && tm(e, t, n, r, it, bt, f, y),
                    (V = C < s.length ? s[C] : null),
                    (ne = O < c.length ? c[O] : null);
                }
              })(
                s,
                y,
                f,
                f[sn],
                f[c + 1],
                (f[c + 1] = (function aE(e, t, n) {
                  if (null == n || "" === n) return Xt;
                  const r = [],
                    s = ao(n);
                  if (Array.isArray(s))
                    for (let c = 0; c < s.length; c++) e(r, s[c], !0);
                  else if ("object" == typeof s)
                    for (const c in s) s.hasOwnProperty(c) && e(r, c, s[c]);
                  else "string" == typeof s && t(r, s);
                  return r;
                })(e, t, n)),
                r,
                c
              );
          }
        })(lE, eo, e, !0);
      }
      function eo(e, t) {
        for (
          let n = (function X_(e) {
            return (
              (function qg(e) {
                (Mi.key = 0),
                  (Mi.keyEnd = 0),
                  (Mi.value = 0),
                  (Mi.valueEnd = 0),
                  (Mi.textEnd = e.length);
              })(e),
              Wg(e, Ta(e, 0, Mi.textEnd))
            );
          })(t);
          n >= 0;
          n = Wg(t, n)
        )
          ws(e, Gg(t), !0);
      }
      function Ws(e, t, n, r) {
        const s = mt(),
          c = Wn(),
          f = Ns(2);
        c.firstUpdatePass && Jg(c, e, f, r),
          t !== Sn &&
            Zi(s, f, t) &&
            tm(
              c,
              c.data[ei()],
              s,
              s[sn],
              e,
              (s[f + 1] = (function uE(e, t) {
                return (
                  null == e ||
                    "" === e ||
                    ("string" == typeof t
                      ? (e += t)
                      : "object" == typeof e && (e = It(ao(e)))),
                  e
                );
              })(t, n)),
              r,
              f
            );
      }
      function Qg(e, t) {
        return t >= e.expandoStartIndex;
      }
      function Jg(e, t, n, r) {
        const s = e.data;
        if (null === s[n + 1]) {
          const c = s[ei()],
            f = Qg(e, n);
          rm(c, r) && null === t && !f && (t = !1),
            (t = (function rE(e, t, n, r) {
              const s = (function D(e) {
                const t = tn.lFrame.currentDirectiveIndex;
                return -1 === t ? null : e[t];
              })(e);
              let c = r ? t.residualClasses : t.residualStyles;
              if (null === s)
                0 === (r ? t.classBindings : t.styleBindings) &&
                  ((n = vl((n = Qd(null, e, t, n, r)), t.attrs, r)),
                  (c = null));
              else {
                const f = t.directiveStylingLast;
                if (-1 === f || e[f] !== s)
                  if (((n = Qd(s, e, t, n, r)), null === c)) {
                    let C = (function iE(e, t, n) {
                      const r = n ? t.classBindings : t.styleBindings;
                      if (0 !== Vo(r)) return e[wo(r)];
                    })(e, t, r);
                    void 0 !== C &&
                      Array.isArray(C) &&
                      ((C = Qd(null, e, t, C[1], r)),
                      (C = vl(C, t.attrs, r)),
                      (function sE(e, t, n, r) {
                        e[wo(n ? t.classBindings : t.styleBindings)] = r;
                      })(e, t, r, C));
                  } else
                    c = (function oE(e, t, n) {
                      let r;
                      const s = t.directiveEnd;
                      for (let c = 1 + t.directiveStylingLast; c < s; c++)
                        r = vl(r, e[c].hostAttrs, n);
                      return vl(r, t.attrs, n);
                    })(e, t, r);
              }
              return (
                void 0 !== c &&
                  (r ? (t.residualClasses = c) : (t.residualStyles = c)),
                n
              );
            })(s, c, t, r)),
            (function Y_(e, t, n, r, s, c) {
              let f = c ? t.classBindings : t.styleBindings,
                y = wo(f),
                C = Vo(f);
              e[r] = n;
              let V,
                O = !1;
              if (
                (Array.isArray(n)
                  ? ((V = n[1]), (null === V || na(n, V) > 0) && (O = !0))
                  : (V = n),
                s)
              )
                if (0 !== C) {
                  const ve = wo(e[y + 1]);
                  (e[r + 1] = $c(ve, y)),
                    0 !== ve && (e[ve + 1] = qd(e[ve + 1], r)),
                    (e[y + 1] = (function G_(e, t) {
                      return (131071 & e) | (t << 17);
                    })(e[y + 1], r));
                } else
                  (e[r + 1] = $c(y, 0)),
                    0 !== y && (e[y + 1] = qd(e[y + 1], r)),
                    (y = r);
              else
                (e[r + 1] = $c(C, 0)),
                  0 === y ? (y = r) : (e[C + 1] = qd(e[C + 1], r)),
                  (C = r);
              O && (e[r + 1] = Yd(e[r + 1])),
                zg(e, V, r, !0),
                zg(e, V, r, !1),
                (function q_(e, t, n, r, s) {
                  const c = s ? e.residualClasses : e.residualStyles;
                  null != c &&
                    "string" == typeof t &&
                    na(c, t) >= 0 &&
                    (n[r + 1] = Zd(n[r + 1]));
                })(t, V, e, r, c),
                (f = $c(y, C)),
                c ? (t.classBindings = f) : (t.styleBindings = f);
            })(s, c, t, n, f, r);
        }
      }
      function Qd(e, t, n, r, s) {
        let c = null;
        const f = n.directiveEnd;
        let y = n.directiveStylingLast;
        for (
          -1 === y ? (y = n.directiveStart) : y++;
          y < f && ((c = t[y]), (r = vl(r, c.hostAttrs, s)), c !== e);

        )
          y++;
        return null !== e && (n.directiveStylingLast = y), r;
      }
      function vl(e, t, n) {
        const r = n ? 1 : 2;
        let s = -1;
        if (null !== t)
          for (let c = 0; c < t.length; c++) {
            const f = t[c];
            "number" == typeof f
              ? (s = f)
              : s === r &&
                (Array.isArray(e) || (e = void 0 === e ? [] : ["", e]),
                ws(e, f, !!n || t[++c]));
          }
        return void 0 === e ? null : e;
      }
      function lE(e, t, n) {
        const r = String(t);
        "" !== r && !r.includes(" ") && ws(e, r, n);
      }
      function tm(e, t, n, r, s, c, f, y) {
        if (!(3 & t.type)) return;
        const C = e.data,
          O = C[y + 1],
          V = (function W_(e) {
            return 1 == (1 & e);
          })(O)
            ? nm(C, t, n, s, Vo(O), f)
            : void 0;
        Hc(V) ||
          (Hc(c) ||
            ((function z_(e) {
              return 2 == (2 & e);
            })(O) &&
              (c = nm(C, null, n, s, y, f))),
          (function $0(e, t, n, r, s) {
            if (t) s ? e.addClass(n, r) : e.removeClass(n, r);
            else {
              let c = -1 === r.indexOf("-") ? void 0 : sc.DashCase;
              null == s
                ? e.removeStyle(n, r, c)
                : ("string" == typeof s &&
                    s.endsWith("!important") &&
                    ((s = s.slice(0, -10)), (c |= sc.Important)),
                  e.setStyle(n, r, s, c));
            }
          })(r, f, Gt(ei(), n), s, c));
      }
      function nm(e, t, n, r, s, c) {
        const f = null === t;
        let y;
        for (; s > 0; ) {
          const C = e[s],
            O = Array.isArray(C),
            V = O ? C[1] : C,
            ne = null === V;
          let ve = n[s + 1];
          ve === Sn && (ve = ne ? Xt : void 0);
          let Te = ne ? Ka(ve, r) : V === r ? ve : void 0;
          if ((O && !Hc(Te) && (Te = Ka(C, r)), Hc(Te) && ((y = Te), f)))
            return y;
          const it = e[s + 1];
          s = f ? wo(it) : Vo(it);
        }
        if (null !== t) {
          let C = c ? t.residualClasses : t.residualStyles;
          null != C && (y = Ka(C, r));
        }
        return y;
      }
      function Hc(e) {
        return void 0 !== e;
      }
      function rm(e, t) {
        return 0 != (e.flags & (t ? 8 : 16));
      }
      function im(e, t = "") {
        const n = mt(),
          r = Wn(),
          s = e + yn,
          c = r.firstCreatePass ? ma(r, s, 1, t, null) : r.data[s],
          f = sm(r, n, c, t, e);
        (n[s] = f), Ua() && uc(r, n, f, c), as(c, !1);
      }
      let sm = (e, t, n, r, s) => (
        io(!0),
        (function oc(e, t) {
          return e.createText(t);
        })(t[sn], r)
      );
      function Jd(e) {
        return jc("", e, ""), Jd;
      }
      function jc(e, t, n) {
        const r = mt(),
          s = va(r, e, t, n);
        return s !== Sn && uo(r, ei(), s), jc;
      }
      function ef(e, t, n, r, s) {
        const c = mt(),
          f = wa(c, e, t, n, r, s);
        return f !== Sn && uo(c, ei(), f), ef;
      }
      const Uo = void 0;
      var PE = [
        "en",
        [["a", "p"], ["AM", "PM"], Uo],
        [["AM", "PM"], Uo, Uo],
        [
          ["S", "M", "T", "W", "T", "F", "S"],
          ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
          ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
        ],
        Uo,
        [
          ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        ],
        Uo,
        [
          ["B", "A"],
          ["BC", "AD"],
          ["Before Christ", "Anno Domini"],
        ],
        0,
        [6, 0],
        ["M/d/yy", "MMM d, y", "MMMM d, y", "EEEE, MMMM d, y"],
        ["h:mm a", "h:mm:ss a", "h:mm:ss a z", "h:mm:ss a zzzz"],
        ["{1}, {0}", Uo, "{1} 'at' {0}", Uo],
        [
          ".",
          ",",
          ";",
          "%",
          "+",
          "-",
          "E",
          "\xd7",
          "\u2030",
          "\u221e",
          "NaN",
          ":",
        ],
        ["#,##0.###", "#,##0%", "\xa4#,##0.00", "#E0"],
        "USD",
        "$",
        "US Dollar",
        {},
        "ltr",
        function xE(e) {
          const n = Math.floor(Math.abs(e)),
            r = e.toString().replace(/^[^.]*\.?/, "").length;
          return 1 === n && 0 === r ? 1 : 5;
        },
      ];
      let Ma = {};
      function tf(e) {
        const t = (function NE(e) {
          return e.toLowerCase().replace(/_/g, "-");
        })(e);
        let n = Sm(t);
        if (n) return n;
        const r = t.split("-")[0];
        if (((n = Sm(r)), n)) return n;
        if ("en" === r) return PE;
        throw new Ne(701, !1);
      }
      function Cm(e) {
        return tf(e)[Aa.PluralCase];
      }
      function Sm(e) {
        return (
          e in Ma ||
            (Ma[e] =
              wn.ng &&
              wn.ng.common &&
              wn.ng.common.locales &&
              wn.ng.common.locales[e]),
          Ma[e]
        );
      }
      var Aa = (function (e) {
        return (
          (e[(e.LocaleId = 0)] = "LocaleId"),
          (e[(e.DayPeriodsFormat = 1)] = "DayPeriodsFormat"),
          (e[(e.DayPeriodsStandalone = 2)] = "DayPeriodsStandalone"),
          (e[(e.DaysFormat = 3)] = "DaysFormat"),
          (e[(e.DaysStandalone = 4)] = "DaysStandalone"),
          (e[(e.MonthsFormat = 5)] = "MonthsFormat"),
          (e[(e.MonthsStandalone = 6)] = "MonthsStandalone"),
          (e[(e.Eras = 7)] = "Eras"),
          (e[(e.FirstDayOfWeek = 8)] = "FirstDayOfWeek"),
          (e[(e.WeekendRange = 9)] = "WeekendRange"),
          (e[(e.DateFormat = 10)] = "DateFormat"),
          (e[(e.TimeFormat = 11)] = "TimeFormat"),
          (e[(e.DateTimeFormat = 12)] = "DateTimeFormat"),
          (e[(e.NumberSymbols = 13)] = "NumberSymbols"),
          (e[(e.NumberFormats = 14)] = "NumberFormats"),
          (e[(e.CurrencyCode = 15)] = "CurrencyCode"),
          (e[(e.CurrencySymbol = 16)] = "CurrencySymbol"),
          (e[(e.CurrencyName = 17)] = "CurrencyName"),
          (e[(e.Currencies = 18)] = "Currencies"),
          (e[(e.Directionality = 19)] = "Directionality"),
          (e[(e.PluralCase = 20)] = "PluralCase"),
          (e[(e.ExtraData = 21)] = "ExtraData"),
          e
        );
      })(Aa || {});
      const Ia = "en-US";
      let Tm = Ia;
      function sf(e, t, n, r, s) {
        if (((e = J(e)), Array.isArray(e)))
          for (let c = 0; c < e.length; c++) sf(e[c], t, n, r, s);
        else {
          const c = Wn(),
            f = mt(),
            y = ui();
          let C = ko(e) ? e : J(e.provide);
          const O = Qh(e),
            V = 1048575 & y.providerIndexes,
            ne = y.directiveStart,
            ve = y.providerIndexes >> 20;
          if (ko(e) || !e.multi) {
            const Te = new Ko(O, s, ga),
              it = lf(C, t, s ? V : V + ve, ne);
            -1 === it
              ? (zl(So(y, f), c, C),
                af(c, e, t.length),
                t.push(C),
                y.directiveStart++,
                y.directiveEnd++,
                s && (y.providerIndexes += 1048576),
                n.push(Te),
                f.push(Te))
              : ((n[it] = Te), (f[it] = Te));
          } else {
            const Te = lf(C, t, V + ve, ne),
              it = lf(C, t, V, V + ve),
              kt = it >= 0 && n[it];
            if ((s && !kt) || (!s && !(Te >= 0 && n[Te]))) {
              zl(So(y, f), c, C);
              const Zt = (function xD(e, t, n, r, s) {
                const c = new Ko(e, n, ga);
                return (
                  (c.multi = []),
                  (c.index = t),
                  (c.componentProviders = 0),
                  Xm(c, s, r && !n),
                  c
                );
              })(s ? OD : ID, n.length, s, r, O);
              !s && kt && (n[it].providerFactory = Zt),
                af(c, e, t.length, 0),
                t.push(C),
                y.directiveStart++,
                y.directiveEnd++,
                s && (y.providerIndexes += 1048576),
                n.push(Zt),
                f.push(Zt);
            } else af(c, e, Te > -1 ? Te : it, Xm(n[s ? it : Te], O, !s && r));
            !s && r && kt && n[it].componentProviders++;
          }
        }
      }
      function af(e, t, n, r) {
        const s = ko(t),
          c = (function bw(e) {
            return !!e.useClass;
          })(t);
        if (s || c) {
          const C = (c ? J(t.useClass) : t).prototype.ngOnDestroy;
          if (C) {
            const O = e.destroyHooks || (e.destroyHooks = []);
            if (!s && t.multi) {
              const V = O.indexOf(n);
              -1 === V ? O.push(n, [r, C]) : O[V + 1].push(r, C);
            } else O.push(n, C);
          }
        }
      }
      function Xm(e, t, n) {
        return n && e.componentProviders++, e.multi.push(t) - 1;
      }
      function lf(e, t, n, r) {
        for (let s = n; s < r; s++) if (t[s] === e) return s;
        return -1;
      }
      function ID(e, t, n, r) {
        return cf(this.multi, []);
      }
      function OD(e, t, n, r) {
        const s = this.multi;
        let c;
        if (this.providerFactory) {
          const f = this.providerFactory.componentProviders,
            y = so(n, n[Rt], this.providerFactory.index, r);
          (c = y.slice(0, f)), cf(s, c);
          for (let C = f; C < y.length; C++) c.push(y[C]);
        } else (c = []), cf(s, c);
        return c;
      }
      function cf(e, t) {
        for (let n = 0; n < e.length; n++) t.push((0, e[n])());
        return t;
      }
      function Qm(e, t = []) {
        return (n) => {
          n.providersResolver = (r, s) =>
            (function AD(e, t, n) {
              const r = Wn();
              if (r.firstCreatePass) {
                const s = A(e);
                sf(n, r.data, r.blueprint, s, !0),
                  sf(t, r.data, r.blueprint, s, !1);
              }
            })(r, s ? s(e) : e, t);
        };
      }
      class $o {}
      class Jm {}
      function PD(e, t) {
        return new uf(e, t ?? null, []);
      }
      class uf extends $o {
        constructor(t, n, r) {
          super(),
            (this._parent = n),
            (this._bootstrapComponents = []),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new tg(this));
          const s = Ir(t);
          (this._bootstrapComponents = co(s.bootstrap)),
            (this._r3Injector = fp(
              t,
              n,
              [
                { provide: $o, useValue: this },
                { provide: al, useValue: this.componentFactoryResolver },
                ...r,
              ],
              It(t),
              new Set(["environment"])
            )),
            this._r3Injector.resolveInjectorInitializers(),
            (this.instance = this._r3Injector.get(t));
        }
        get injector() {
          return this._r3Injector;
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(),
            this.destroyCbs.forEach((n) => n()),
            (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class df extends Jm {
        constructor(t) {
          super(), (this.moduleType = t);
        }
        create(t) {
          return new uf(this.moduleType, t, []);
        }
      }
      class ey extends $o {
        constructor(t) {
          super(),
            (this.componentFactoryResolver = new tg(this)),
            (this.instance = null);
          const n = new wc(
            [
              ...t.providers,
              { provide: $o, useValue: this },
              { provide: al, useValue: this.componentFactoryResolver },
            ],
            t.parent || vc(),
            t.debugName,
            new Set(["environment"])
          );
          (this.injector = n),
            t.runEnvironmentInitializers && n.resolveInjectorInitializers();
        }
        destroy() {
          this.injector.destroy();
        }
        onDestroy(t) {
          this.injector.onDestroy(t);
        }
      }
      function ty(e, t, n = null) {
        return new ey({
          providers: e,
          parent: t,
          debugName: n,
          runEnvironmentInitializers: !0,
        }).injector;
      }
      let RD = (() => {
        class e {
          constructor(n) {
            (this._injector = n), (this.cachedInjectors = new Map());
          }
          getOrCreateStandaloneInjector(n) {
            if (!n.standalone) return null;
            if (!this.cachedInjectors.has(n)) {
              const r = qh(0, n.type),
                s =
                  r.length > 0
                    ? ty([r], this._injector, `Standalone[${n.type.name}]`)
                    : null;
              this.cachedInjectors.set(n, s);
            }
            return this.cachedInjectors.get(n);
          }
          ngOnDestroy() {
            try {
              for (const n of this.cachedInjectors.values())
                null !== n && n.destroy();
            } finally {
              this.cachedInjectors.clear();
            }
          }
          static #e = (this.ɵprov = cn({
            token: e,
            providedIn: "environment",
            factory: () => new e(se(Zs)),
          }));
        }
        return e;
      })();
      function ny(e) {
        e.getStandaloneInjector = (t) =>
          t.get(RD).getOrCreateStandaloneInjector(e);
      }
      function cy(e, t, n) {
        const r = Ri() + e,
          s = mt();
        return s[r] === Sn
          ? Qs(s, r, n ? t.call(n) : t())
          : (function pl(e, t) {
              return e[t];
            })(s, r);
      }
      function uy(e, t, n, r) {
        return fy(mt(), Ri(), e, t, n, r);
      }
      function dy(e, t, n, r, s) {
        return (function hy(e, t, n, r, s, c, f) {
          const y = t + n;
          return Bo(e, y, s, c)
            ? Qs(e, y + 2, f ? r.call(f, s, c) : r(s, c))
            : Cl(e, y + 2);
        })(mt(), Ri(), e, t, n, r, s);
      }
      function Cl(e, t) {
        const n = e[t];
        return n === Sn ? void 0 : n;
      }
      function fy(e, t, n, r, s, c) {
        const f = t + n;
        return Zi(e, f, s)
          ? Qs(e, f + 1, c ? r.call(c, s) : r(s))
          : Cl(e, f + 1);
      }
      function yy(e, t) {
        const n = Wn();
        let r;
        const s = e + yn;
        n.firstCreatePass
          ? ((r = (function KD(e, t) {
              if (t)
                for (let n = t.length - 1; n >= 0; n--) {
                  const r = t[n];
                  if (e === r.name) return r;
                }
            })(t, n.pipeRegistry)),
            (n.data[s] = r),
            r.onDestroy && (n.destroyHooks ??= []).push(s, r.onDestroy))
          : (r = n.data[s]);
        const c = r.factory || (r.factory = Ke(r.type)),
          y = lr(ga);
        try {
          const C = za(!1),
            O = c();
          return (
            za(C),
            (function L_(e, t, n, r) {
              n >= e.data.length &&
                ((e.data[n] = null), (e.blueprint[n] = null)),
                (t[n] = r);
            })(n, mt(), s, O),
            O
          );
        } finally {
          lr(y);
        }
      }
      function vy(e, t, n) {
        const r = e + yn,
          s = mt(),
          c = yr(s, r);
        return (function Sl(e, t) {
          return e[Rt].data[t].pure;
        })(s, r)
          ? fy(s, Ri(), t, c.transform, n, c)
          : c.transform(n);
      }
      function tC() {
        return this._results[Symbol.iterator]();
      }
      class hf {
        static #e = Symbol.iterator;
        get changes() {
          return this._changes || (this._changes = new Ks());
        }
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const n = hf.prototype;
          n[Symbol.iterator] || (n[Symbol.iterator] = tC);
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, n) {
          return this._results.reduce(t, n);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, n) {
          const r = this;
          r.dirty = !1;
          const s = (function vs(e) {
            return e.flat(Number.POSITIVE_INFINITY);
          })(t);
          (this._changesDetected = !(function Cu(e, t, n) {
            if (e.length !== t.length) return !1;
            for (let r = 0; r < e.length; r++) {
              let s = e[r],
                c = t[r];
              if ((n && ((s = n(s)), (c = n(c))), c !== s)) return !1;
            }
            return !0;
          })(r._results, s, n)) &&
            ((r._results = s),
            (r.length = s.length),
            (r.last = s[this.length - 1]),
            (r.first = s[0]));
        }
        notifyOnChanges() {
          this._changes &&
            (this._changesDetected || !this._emitDistinctChangesOnly) &&
            this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      function rC(e, t, n, r = !0) {
        const s = t[Rt];
        if (
          ((function N0(e, t, n, r) {
            const s = bn + r,
              c = n.length;
            r > 0 && (n[s - 1][br] = t),
              r < c - bn
                ? ((t[br] = n[s]), Zl(n, bn + r, t))
                : (n.push(t), (t[br] = null)),
              (t[Un] = n);
            const f = t[Xr];
            null !== f &&
              n !== f &&
              (function R0(e, t) {
                const n = e[Ni];
                t[Gn] !== t[Un][Un][Gn] && (e[As] = !0),
                  null === n ? (e[Ni] = [t]) : n.push(t);
              })(f, t);
            const y = t[Qr];
            null !== y && y.insertView(e), (t[Qt] |= 128);
          })(s, t, e, n),
          r)
        ) {
          const c = Vu(n, e),
            f = t[sn],
            y = cc(f, e[Jr]);
          null !== y &&
            (function O0(e, t, n, r, s, c) {
              (r[Cn] = s), (r[mr] = t), tl(e, r, n, 1, s, c);
            })(s, e[mr], f, t, y, c);
        }
      }
      let Tl = (() => {
        class e {
          static #e = (this.__NG_ELEMENT_ID__ = oC);
        }
        return e;
      })();
      const iC = Tl,
        sC = class extends iC {
          constructor(t, n, r) {
            super(),
              (this._declarationLView = t),
              (this._declarationTContainer = n),
              (this.elementRef = r);
          }
          get ssrId() {
            return this._declarationTContainer.tView?.ssrId || null;
          }
          createEmbeddedView(t, n) {
            return this.createEmbeddedViewImpl(t, n);
          }
          createEmbeddedViewImpl(t, n, r) {
            const s = (function nC(e, t, n, r) {
              const s = t.tView,
                y = Mc(
                  e,
                  s,
                  n,
                  4096 & e[Qt] ? 4096 : 16,
                  null,
                  t,
                  null,
                  null,
                  null,
                  r?.injector ?? null,
                  r?.hydrationInfo ?? null
                );
              y[Xr] = e[t.index];
              const O = e[Qr];
              return (
                null !== O && (y[Qr] = O.createEmbeddedView(s)), xd(s, y, n), y
              );
            })(this._declarationLView, this._declarationTContainer, t, {
              injector: n,
              hydrationInfo: r,
            });
            return new fl(s);
          }
        };
      function oC() {
        return qc(ui(), mt());
      }
      function qc(e, t) {
        return 4 & e.type ? new sC(t, e, fa(e, t)) : null;
      }
      let Kc = (() => {
        class e {
          static #e = (this.__NG_ELEMENT_ID__ = fC);
        }
        return e;
      })();
      function fC() {
        return Sy(ui(), mt());
      }
      const hC = Kc,
        Dy = class extends hC {
          constructor(t, n, r) {
            super(),
              (this._lContainer = t),
              (this._hostTNode = n),
              (this._hostLView = r);
          }
          get element() {
            return fa(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Ui(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = Ya(this._hostTNode, this._hostLView);
            if (Ul(t)) {
              const n = Jo(t, this._hostLView),
                r = Qo(t);
              return new Ui(n[Rt].data[r + 8], n);
            }
            return new Ui(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const n = Cy(this._lContainer);
            return (null !== n && n[t]) || null;
          }
          get length() {
            return this._lContainer.length - bn;
          }
          createEmbeddedView(t, n, r) {
            let s, c;
            "number" == typeof r
              ? (s = r)
              : null != r && ((s = r.index), (c = r.injector));
            const y = t.createEmbeddedViewImpl(n || {}, c, null);
            return this.insertImpl(y, s, false), y;
          }
          createComponent(t, n, r, s, c) {
            const f =
              t &&
              !(function mo(e) {
                return "function" == typeof e;
              })(t);
            let y;
            if (f) y = n;
            else {
              const bt = n || {};
              (y = bt.index),
                (r = bt.injector),
                (s = bt.projectableNodes),
                (c = bt.environmentInjector || bt.ngModuleRef);
            }
            const C = f ? t : new hl(gn(t)),
              O = r || this.parentInjector;
            if (!c && null == C.ngModule) {
              const kt = (f ? O : this.parentInjector).get(Zs, null);
              kt && (c = kt);
            }
            gn(C.componentType ?? {});
            const Te = C.create(O, s, null, c);
            return this.insertImpl(Te.hostView, y, false), Te;
          }
          insert(t, n) {
            return this.insertImpl(t, n, !1);
          }
          insertImpl(t, n, r) {
            const s = t._lView;
            if (
              (function dr(e) {
                return w(e[Un]);
              })(s)
            ) {
              const C = this.indexOf(t);
              if (-1 !== C) this.detach(C);
              else {
                const O = s[Un],
                  V = new Dy(O, O[mr], O[Un]);
                V.detach(V.indexOf(t));
              }
            }
            const f = this._adjustIndex(n),
              y = this._lContainer;
            return (
              rC(y, s, f, !r), t.attachToViewContainerRef(), Zl(pf(y), f, t), t
            );
          }
          move(t, n) {
            return this.insert(t, n);
          }
          indexOf(t) {
            const n = Cy(this._lContainer);
            return null !== n ? n.indexOf(t) : -1;
          }
          remove(t) {
            const n = this._adjustIndex(t, -1),
              r = lc(this._lContainer, n);
            r && (ta(pf(this._lContainer), n), Lu(r[Rt], r));
          }
          detach(t) {
            const n = this._adjustIndex(t, -1),
              r = lc(this._lContainer, n);
            return r && null != ta(pf(this._lContainer), n) ? new fl(r) : null;
          }
          _adjustIndex(t, n = 0) {
            return t ?? this.length + n;
          }
        };
      function Cy(e) {
        return e[8];
      }
      function pf(e) {
        return e[8] || (e[8] = []);
      }
      function Sy(e, t) {
        let n;
        const r = t[e.index];
        return (
          w(r)
            ? (n = r)
            : ((n = jp(r, t, null, e)), (t[e.index] = n), Ac(t, n)),
          Ty(n, t, e, r),
          new Dy(n, e, t)
        );
      }
      let Ty = function My(e, t, n, r) {
        if (e[Jr]) return;
        let s;
        (s =
          8 & n.type
            ? Jn(r)
            : (function pC(e, t) {
                const n = e[sn],
                  r = n.createComment(""),
                  s = Ht(t, e);
                return (
                  Ro(
                    n,
                    cc(n, s),
                    r,
                    (function B0(e, t) {
                      return e.nextSibling(t);
                    })(n, s),
                    !1
                  ),
                  r
                );
              })(t, n)),
          (e[Jr] = s);
      };
      class gf {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new gf(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class mf {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const n = t.queries;
          if (null !== n) {
            const r =
                null !== t.contentQueries ? t.contentQueries[0] : n.length,
              s = [];
            for (let c = 0; c < r; c++) {
              const f = n.getByIndex(c);
              s.push(this.queries[f.indexInDeclarationView].clone());
            }
            return new mf(s);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let n = 0; n < this.queries.length; n++)
            null !== Fy(t, n).matches && this.queries[n].setDirty();
        }
      }
      class Ay {
        constructor(t, n, r = null) {
          (this.predicate = t), (this.flags = n), (this.read = r);
        }
      }
      class yf {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, n) {
          for (let r = 0; r < this.queries.length; r++)
            this.queries[r].elementStart(t, n);
        }
        elementEnd(t) {
          for (let n = 0; n < this.queries.length; n++)
            this.queries[n].elementEnd(t);
        }
        embeddedTView(t) {
          let n = null;
          for (let r = 0; r < this.length; r++) {
            const s = null !== n ? n.length : 0,
              c = this.getByIndex(r).embeddedTView(t, s);
            c &&
              ((c.indexInDeclarationView = r),
              null !== n ? n.push(c) : (n = [c]));
          }
          return null !== n ? new yf(n) : null;
        }
        template(t, n) {
          for (let r = 0; r < this.queries.length; r++)
            this.queries[r].template(t, n);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class vf {
        constructor(t, n = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = n);
        }
        elementStart(t, n) {
          this.isApplyingToNode(n) && this.matchTNode(t, n);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index &&
            (this._appliesToNextNode = !1);
        }
        template(t, n) {
          this.elementStart(t, n);
        }
        embeddedTView(t, n) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0),
              this.addMatch(-t.index, n),
              new vf(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const n = this._declarationNodeIndex;
            let r = t.parent;
            for (; null !== r && 8 & r.type && r.index !== n; ) r = r.parent;
            return n === (null !== r ? r.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, n) {
          const r = this.metadata.predicate;
          if (Array.isArray(r))
            for (let s = 0; s < r.length; s++) {
              const c = r[s];
              this.matchTNodeWithReadOption(t, n, yC(n, c)),
                this.matchTNodeWithReadOption(t, n, qa(n, t, c, !1, !1));
            }
          else
            r === Tl
              ? 4 & n.type && this.matchTNodeWithReadOption(t, n, -1)
              : this.matchTNodeWithReadOption(t, n, qa(n, t, r, !1, !1));
        }
        matchTNodeWithReadOption(t, n, r) {
          if (null !== r) {
            const s = this.metadata.read;
            if (null !== s)
              if (s === ll || s === Kc || (s === Tl && 4 & n.type))
                this.addMatch(n.index, -2);
              else {
                const c = qa(n, t, s, !1, !1);
                null !== c && this.addMatch(n.index, c);
              }
            else this.addMatch(n.index, r);
          }
        }
        addMatch(t, n) {
          null === this.matches
            ? (this.matches = [t, n])
            : this.matches.push(t, n);
        }
      }
      function yC(e, t) {
        const n = e.localNames;
        if (null !== n)
          for (let r = 0; r < n.length; r += 2) if (n[r] === t) return n[r + 1];
        return null;
      }
      function wC(e, t, n, r) {
        return -1 === n
          ? (function vC(e, t) {
              return 11 & e.type ? fa(e, t) : 4 & e.type ? qc(e, t) : null;
            })(t, e)
          : -2 === n
          ? (function bC(e, t, n) {
              return n === ll
                ? fa(t, e)
                : n === Tl
                ? qc(t, e)
                : n === Kc
                ? Sy(t, e)
                : void 0;
            })(e, t, r)
          : so(e, e[Rt], n, t);
      }
      function Iy(e, t, n, r) {
        const s = t[Qr].queries[r];
        if (null === s.matches) {
          const c = e.data,
            f = n.matches,
            y = [];
          for (let C = 0; C < f.length; C += 2) {
            const O = f[C];
            y.push(O < 0 ? null : wC(t, c[O], f[C + 1], n.metadata.read));
          }
          s.matches = y;
        }
        return s.matches;
      }
      function wf(e, t, n, r) {
        const s = e.queries.getByIndex(n),
          c = s.matches;
        if (null !== c) {
          const f = Iy(e, t, s, n);
          for (let y = 0; y < c.length; y += 2) {
            const C = c[y];
            if (C > 0) r.push(f[y / 2]);
            else {
              const O = c[y + 1],
                V = t[-C];
              for (let ne = bn; ne < V.length; ne++) {
                const ve = V[ne];
                ve[Xr] === ve[Un] && wf(ve[Rt], ve, O, r);
              }
              if (null !== V[Ni]) {
                const ne = V[Ni];
                for (let ve = 0; ve < ne.length; ve++) {
                  const Te = ne[ve];
                  wf(Te[Rt], Te, O, r);
                }
              }
            }
          }
        }
        return r;
      }
      function Oy(e) {
        const t = mt(),
          n = Wn(),
          r = m();
        S(r + 1);
        const s = Fy(n, r);
        if (
          e.dirty &&
          (function pi(e) {
            return 4 == (4 & e[Qt]);
          })(t) ===
            (2 == (2 & s.metadata.flags))
        ) {
          if (null === s.matches) e.reset([]);
          else {
            const c = s.crossesNgTemplate ? wf(n, t, r, []) : Iy(n, t, s, r);
            e.reset(c, jw), e.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function xy(e, t, n) {
        const r = Wn();
        r.firstCreatePass &&
          (Ly(r, new Ay(e, t, n), -1),
          2 == (2 & t) && (r.staticViewQueries = !0)),
          Ry(r, mt(), t);
      }
      function Py(e, t, n, r) {
        const s = Wn();
        if (s.firstCreatePass) {
          const c = ui();
          Ly(s, new Ay(t, n, r), c.index),
            (function EC(e, t) {
              const n = e.contentQueries || (e.contentQueries = []);
              t !== (n.length ? n[n.length - 1] : -1) &&
                n.push(e.queries.length - 1, t);
            })(s, e),
            2 == (2 & n) && (s.staticContentQueries = !0);
        }
        Ry(s, mt(), n);
      }
      function Ny() {
        return (function _C(e, t) {
          return e[Qr].queries[t].queryList;
        })(mt(), m());
      }
      function Ry(e, t, n) {
        const r = new hf(4 == (4 & n));
        (function Eb(e, t, n, r) {
          const s = Gp(t);
          s.push(n), e.firstCreatePass && Wp(e).push(r, s.length - 1);
        })(e, t, r, r.destroy),
          null === t[Qr] && (t[Qr] = new mf()),
          t[Qr].queries.push(new gf(r));
      }
      function Ly(e, t, n) {
        null === e.queries && (e.queries = new yf()),
          e.queries.track(new vf(t, n));
      }
      function Fy(e, t) {
        return e.queries.getByIndex(t);
      }
      function ky(e, t) {
        return qc(e, t);
      }
      function bf(e) {
        return !!Ir(e);
      }
      const ev = new fr("Application Initializer");
      let Sf = (() => {
          class e {
            constructor() {
              (this.initialized = !1),
                (this.done = !1),
                (this.donePromise = new Promise((n, r) => {
                  (this.resolve = n), (this.reject = r);
                })),
                (this.appInits = je(ev, { optional: !0 }) ?? []);
            }
            runInitializers() {
              if (this.initialized) return;
              const n = [];
              for (const s of this.appInits) {
                const c = s();
                if (jd(c)) n.push(c);
                else if (Ag(c)) {
                  const f = new Promise((y, C) => {
                    c.subscribe({ complete: y, error: C });
                  });
                  n.push(f);
                }
              }
              const r = () => {
                (this.done = !0), this.resolve();
              };
              Promise.all(n)
                .then(() => {
                  r();
                })
                .catch((s) => {
                  this.reject(s);
                }),
                0 === n.length && r(),
                (this.initialized = !0);
            }
            static #e = (this.ɵfac = function (r) {
              return new (r || e)();
            });
            static #t = (this.ɵprov = cn({
              token: e,
              factory: e.ɵfac,
              providedIn: "root",
            }));
          }
          return e;
        })(),
        tv = (() => {
          class e {
            log(n) {
              console.log(n);
            }
            warn(n) {
              console.warn(n);
            }
            static #e = (this.ɵfac = function (r) {
              return new (r || e)();
            });
            static #t = (this.ɵprov = cn({
              token: e,
              factory: e.ɵfac,
              providedIn: "platform",
            }));
          }
          return e;
        })();
      const Qc = new fr("LocaleId", {
          providedIn: "root",
          factory: () =>
            je(Qc, Wt.Optional | Wt.SkipSelf) ||
            (function jC() {
              return (typeof $localize < "u" && $localize.locale) || Ia;
            })(),
        }),
        zC = new fr("DefaultCurrencyCode", {
          providedIn: "root",
          factory: () => "USD",
        });
      let nv = (() => {
        class e {
          constructor() {
            (this.taskId = 0),
              (this.pendingTasks = new Set()),
              (this.hasPendingTasks = new _e.X(!1));
          }
          add() {
            this.hasPendingTasks.next(!0);
            const n = this.taskId++;
            return this.pendingTasks.add(n), n;
          }
          remove(n) {
            this.pendingTasks.delete(n),
              0 === this.pendingTasks.size && this.hasPendingTasks.next(!1);
          }
          ngOnDestroy() {
            this.pendingTasks.clear(), this.hasPendingTasks.next(!1);
          }
          static #e = (this.ɵfac = function (r) {
            return new (r || e)();
          });
          static #t = (this.ɵprov = cn({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      class WC {
        constructor(t, n) {
          (this.ngModuleFactory = t), (this.componentFactories = n);
        }
      }
      let YC = (() => {
        class e {
          compileModuleSync(n) {
            return new df(n);
          }
          compileModuleAsync(n) {
            return Promise.resolve(this.compileModuleSync(n));
          }
          compileModuleAndAllComponentsSync(n) {
            const r = this.compileModuleSync(n),
              c = co(Ir(n).declarations).reduce((f, y) => {
                const C = gn(y);
                return C && f.push(new hl(C)), f;
              }, []);
            return new WC(r, c);
          }
          compileModuleAndAllComponentsAsync(n) {
            return Promise.resolve(this.compileModuleAndAllComponentsSync(n));
          }
          clearCache() {}
          clearCacheFor(n) {}
          getModuleId(n) {}
          static #e = (this.ɵfac = function (r) {
            return new (r || e)();
          });
          static #t = (this.ɵprov = cn({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      const ov = new fr(""),
        av = new fr("");
      let Af,
        hS = (() => {
          class e {
            constructor(n, r, s) {
              (this._ngZone = n),
                (this.registry = r),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                Af ||
                  ((function pS(e) {
                    Af = e;
                  })(s),
                  s.addToWindow(r)),
                this._watchAngularEvents(),
                n.run(() => {
                  this.taskTrackingZone =
                    typeof Zone > "u"
                      ? null
                      : Zone.current.get("TaskTrackingZone");
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Li.assertNotInAngularZone(),
                        queueMicrotask(() => {
                          (this._isZoneStable = !0),
                            this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (
                (this._pendingCount += 1),
                (this._didWork = !0),
                this._pendingCount
              );
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error("pending async requests below zero");
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return (
                this._isZoneStable &&
                0 === this._pendingCount &&
                !this._ngZone.hasPendingMacrotasks
              );
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                queueMicrotask(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let n = this._callbacks.pop();
                    clearTimeout(n.timeoutId), n.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let n = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (r) =>
                    !r.updateCb ||
                    !r.updateCb(n) ||
                    (clearTimeout(r.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((n) => ({
                    source: n.source,
                    creationLocation: n.creationLocation,
                    data: n.data,
                  }))
                : [];
            }
            addCallback(n, r, s) {
              let c = -1;
              r &&
                r > 0 &&
                (c = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter(
                    (f) => f.timeoutId !== c
                  )),
                    n(this._didWork, this.getPendingTasks());
                }, r)),
                this._callbacks.push({ doneCb: n, timeoutId: c, updateCb: s });
            }
            whenStable(n, r, s) {
              if (s && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/plugins/task-tracking" loaded?'
                );
              this.addCallback(n, r, s), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            registerApplication(n) {
              this.registry.registerApplication(n, this);
            }
            unregisterApplication(n) {
              this.registry.unregisterApplication(n);
            }
            findProviders(n, r, s) {
              return [];
            }
            static #e = (this.ɵfac = function (r) {
              return new (r || e)(se(Li), se(lv), se(av));
            });
            static #t = (this.ɵprov = cn({ token: e, factory: e.ɵfac }));
          }
          return e;
        })(),
        lv = (() => {
          class e {
            constructor() {
              this._applications = new Map();
            }
            registerApplication(n, r) {
              this._applications.set(n, r);
            }
            unregisterApplication(n) {
              this._applications.delete(n);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(n) {
              return this._applications.get(n) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(n, r = !0) {
              return Af?.findTestabilityInTree(this, n, r) ?? null;
            }
            static #e = (this.ɵfac = function (r) {
              return new (r || e)();
            });
            static #t = (this.ɵprov = cn({
              token: e,
              factory: e.ɵfac,
              providedIn: "platform",
            }));
          }
          return e;
        })(),
        bo = null;
      const cv = new fr("AllowMultipleToken"),
        If = new fr("PlatformDestroyListeners"),
        Of = new fr("appBootstrapListener");
      class yS {
        constructor(t, n) {
          (this.name = t), (this.token = n);
        }
      }
      function fv(e, t, n = []) {
        const r = `Platform: ${t}`,
          s = new fr(r);
        return (c = []) => {
          let f = xf();
          if (!f || f.injector.get(cv, !1)) {
            const y = [...n, ...c, { provide: s, useValue: !0 }];
            e
              ? e(y)
              : (function vS(e) {
                  if (bo && !bo.get(cv, !1)) throw new Ne(400, !1);
                  (function uv() {
                    !(function u(e) {
                      F = e;
                    })(() => {
                      throw new Ne(600, !1);
                    });
                  })(),
                    (bo = e);
                  const t = e.get(pv);
                  (function dv(e) {
                    e.get(ep, null)?.forEach((n) => n());
                  })(e);
                })(
                  (function hv(e = [], t) {
                    return Gs.create({
                      name: t,
                      providers: [
                        { provide: Qu, useValue: "platform" },
                        { provide: If, useValue: new Set([() => (bo = null)]) },
                        ...e,
                      ],
                    });
                  })(y, r)
                );
          }
          return (function bS(e) {
            const t = xf();
            if (!t) throw new Ne(401, !1);
            return t;
          })();
        };
      }
      function xf() {
        return bo?.get(pv) ?? null;
      }
      let pv = (() => {
        class e {
          constructor(n) {
            (this._injector = n),
              (this._modules = []),
              (this._destroyListeners = []),
              (this._destroyed = !1);
          }
          bootstrapModuleFactory(n, r) {
            const s = (function _S(e = "zone.js", t) {
              return "noop" === e ? new sb() : "zone.js" === e ? new Li(t) : e;
            })(
              r?.ngZone,
              (function gv(e) {
                return {
                  enableLongStackTrace: !1,
                  shouldCoalesceEventChangeDetection: e?.eventCoalescing ?? !1,
                  shouldCoalesceRunChangeDetection: e?.runCoalescing ?? !1,
                };
              })({
                eventCoalescing: r?.ngZoneEventCoalescing,
                runCoalescing: r?.ngZoneRunCoalescing,
              })
            );
            return s.run(() => {
              const c = (function ND(e, t, n) {
                  return new uf(e, t, n);
                })(
                  n.moduleType,
                  this.injector,
                  (function bv(e) {
                    return [
                      { provide: Li, useFactory: e },
                      {
                        provide: il,
                        multi: !0,
                        useFactory: () => {
                          const t = je(DS, { optional: !0 });
                          return () => t.initialize();
                        },
                      },
                      { provide: wv, useFactory: ES },
                      { provide: yp, useFactory: vp },
                    ];
                  })(() => s)
                ),
                f = c.injector.get(vo, null);
              return (
                s.runOutsideAngular(() => {
                  const y = s.onError.subscribe({
                    next: (C) => {
                      f.handleError(C);
                    },
                  });
                  c.onDestroy(() => {
                    eu(this._modules, c), y.unsubscribe();
                  });
                }),
                (function mv(e, t, n) {
                  try {
                    const r = n();
                    return jd(r)
                      ? r.catch((s) => {
                          throw (
                            (t.runOutsideAngular(() => e.handleError(s)), s)
                          );
                        })
                      : r;
                  } catch (r) {
                    throw (t.runOutsideAngular(() => e.handleError(r)), r);
                  }
                })(f, s, () => {
                  const y = c.injector.get(Sf);
                  return (
                    y.runInitializers(),
                    y.donePromise.then(
                      () => (
                        (function Mm(e) {
                          Qe(e, "Expected localeId to be defined"),
                            "string" == typeof e &&
                              (Tm = e.toLowerCase().replace(/_/g, "-"));
                        })(c.injector.get(Qc, Ia) || Ia),
                        this._moduleDoBootstrap(c),
                        c
                      )
                    )
                  );
                })
              );
            });
          }
          bootstrapModule(n, r = []) {
            const s = yv({}, r);
            return (function gS(e, t, n) {
              const r = new df(n);
              return Promise.resolve(r);
            })(0, 0, n).then((c) => this.bootstrapModuleFactory(c, s));
          }
          _moduleDoBootstrap(n) {
            const r = n.injector.get(Pa);
            if (n._bootstrapComponents.length > 0)
              n._bootstrapComponents.forEach((s) => r.bootstrap(s));
            else {
              if (!n.instance.ngDoBootstrap) throw new Ne(-403, !1);
              n.instance.ngDoBootstrap(r);
            }
            this._modules.push(n);
          }
          onDestroy(n) {
            this._destroyListeners.push(n);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new Ne(404, !1);
            this._modules.slice().forEach((r) => r.destroy()),
              this._destroyListeners.forEach((r) => r());
            const n = this._injector.get(If, null);
            n && (n.forEach((r) => r()), n.clear()), (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
          static #e = (this.ɵfac = function (r) {
            return new (r || e)(se(Gs));
          });
          static #t = (this.ɵprov = cn({
            token: e,
            factory: e.ɵfac,
            providedIn: "platform",
          }));
        }
        return e;
      })();
      function yv(e, t) {
        return Array.isArray(t) ? t.reduce(yv, e) : { ...e, ...t };
      }
      let Pa = (() => {
        class e {
          constructor() {
            (this._bootstrapListeners = []),
              (this._runningTick = !1),
              (this._destroyed = !1),
              (this._destroyListeners = []),
              (this._views = []),
              (this.internalErrorHandler = je(wv)),
              (this.zoneIsStable = je(yp)),
              (this.componentTypes = []),
              (this.components = []),
              (this.isStable = je(nv).hasPendingTasks.pipe(
                (0, Be.w)((n) => (n ? (0, we.of)(!1) : this.zoneIsStable)),
                (function ot(e, t = et.y) {
                  return (
                    (e = e ?? pt),
                    (0, xe.e)((n, r) => {
                      let s,
                        c = !0;
                      n.subscribe(
                        (0, Ye.x)(r, (f) => {
                          const y = t(f);
                          (c || !e(s, y)) && ((c = !1), (s = y), r.next(f));
                        })
                      );
                    })
                  );
                })(),
                oe()
              )),
              (this._injector = je(Zs));
          }
          get destroyed() {
            return this._destroyed;
          }
          get injector() {
            return this._injector;
          }
          bootstrap(n, r) {
            const s = n instanceof ip;
            if (!this._injector.get(Sf).done)
              throw (!s && ii(n), new Ne(405, !1));
            let f;
            (f = s ? n : this._injector.get(al).resolveComponentFactory(n)),
              this.componentTypes.push(f.componentType);
            const y = (function mS(e) {
                return e.isBoundToModule;
              })(f)
                ? void 0
                : this._injector.get($o),
              O = f.create(Gs.NULL, [], r || f.selector, y),
              V = O.location.nativeElement,
              ne = O.injector.get(ov, null);
            return (
              ne?.registerApplication(V),
              O.onDestroy(() => {
                this.detachView(O.hostView),
                  eu(this.components, O),
                  ne?.unregisterApplication(V);
              }),
              this._loadComponent(O),
              O
            );
          }
          tick() {
            if (this._runningTick) throw new Ne(101, !1);
            try {
              this._runningTick = !0;
              for (let n of this._views) n.detectChanges();
            } catch (n) {
              this.internalErrorHandler(n);
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(n) {
            const r = n;
            this._views.push(r), r.attachToAppRef(this);
          }
          detachView(n) {
            const r = n;
            eu(this._views, r), r.detachFromAppRef();
          }
          _loadComponent(n) {
            this.attachView(n.hostView), this.tick(), this.components.push(n);
            const r = this._injector.get(Of, []);
            r.push(...this._bootstrapListeners), r.forEach((s) => s(n));
          }
          ngOnDestroy() {
            if (!this._destroyed)
              try {
                this._destroyListeners.forEach((n) => n()),
                  this._views.slice().forEach((n) => n.destroy());
              } finally {
                (this._destroyed = !0),
                  (this._views = []),
                  (this._bootstrapListeners = []),
                  (this._destroyListeners = []);
              }
          }
          onDestroy(n) {
            return (
              this._destroyListeners.push(n),
              () => eu(this._destroyListeners, n)
            );
          }
          destroy() {
            if (this._destroyed) throw new Ne(406, !1);
            const n = this._injector;
            n.destroy && !n.destroyed && n.destroy();
          }
          get viewCount() {
            return this._views.length;
          }
          warnIfDestroyed() {}
          static #e = (this.ɵfac = function (r) {
            return new (r || e)();
          });
          static #t = (this.ɵprov = cn({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      function eu(e, t) {
        const n = e.indexOf(t);
        n > -1 && e.splice(n, 1);
      }
      const wv = new fr("", {
        providedIn: "root",
        factory: () => je(vo).handleError.bind(void 0),
      });
      function ES() {
        const e = je(Li),
          t = je(vo);
        return (n) => e.runOutsideAngular(() => t.handleError(n));
      }
      let DS = (() => {
        class e {
          constructor() {
            (this.zone = je(Li)), (this.applicationRef = je(Pa));
          }
          initialize() {
            this._onMicrotaskEmptySubscription ||
              (this._onMicrotaskEmptySubscription =
                this.zone.onMicrotaskEmpty.subscribe({
                  next: () => {
                    this.zone.run(() => {
                      this.applicationRef.tick();
                    });
                  },
                }));
          }
          ngOnDestroy() {
            this._onMicrotaskEmptySubscription?.unsubscribe();
          }
          static #e = (this.ɵfac = function (r) {
            return new (r || e)();
          });
          static #t = (this.ɵprov = cn({
            token: e,
            factory: e.ɵfac,
            providedIn: "root",
          }));
        }
        return e;
      })();
      let SS = (() => {
        class e {
          static #e = (this.__NG_ELEMENT_ID__ = TS);
        }
        return e;
      })();
      function TS(e) {
        return (function MS(e, t, n) {
          if (_(e) && !n) {
            const r = hr(e.index, t);
            return new fl(r, r);
          }
          return 47 & e.type ? new fl(t[Gn], t) : null;
        })(ui(), mt(), 16 == (16 & e));
      }
      class Cv {
        constructor() {}
        supports(t) {
          return Pc(t);
        }
        create(t) {
          return new NS(t);
        }
      }
      const PS = (e, t) => t;
      class NS {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || PS);
        }
        forEachItem(t) {
          let n;
          for (n = this._itHead; null !== n; n = n._next) t(n);
        }
        forEachOperation(t) {
          let n = this._itHead,
            r = this._removalsHead,
            s = 0,
            c = null;
          for (; n || r; ) {
            const f = !r || (n && n.currentIndex < Tv(r, s, c)) ? n : r,
              y = Tv(f, s, c),
              C = f.currentIndex;
            if (f === r) s--, (r = r._nextRemoved);
            else if (((n = n._next), null == f.previousIndex)) s++;
            else {
              c || (c = []);
              const O = y - s,
                V = C - s;
              if (O != V) {
                for (let ve = 0; ve < O; ve++) {
                  const Te = ve < c.length ? c[ve] : (c[ve] = 0),
                    it = Te + ve;
                  V <= it && it < O && (c[ve] = Te + 1);
                }
                c[f.previousIndex] = V - O;
              }
            }
            y !== C && t(f, y, C);
          }
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousItHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachMovedItem(t) {
          let n;
          for (n = this._movesHead; null !== n; n = n._nextMoved) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        forEachIdentityChange(t) {
          let n;
          for (
            n = this._identityChangesHead;
            null !== n;
            n = n._nextIdentityChange
          )
            t(n);
        }
        diff(t) {
          if ((null == t && (t = []), !Pc(t))) throw new Ne(900, !1);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let s,
            c,
            f,
            n = this._itHead,
            r = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let y = 0; y < this.length; y++)
              (c = t[y]),
                (f = this._trackByFn(y, c)),
                null !== n && Object.is(n.trackById, f)
                  ? (r && (n = this._verifyReinsertion(n, c, f, y)),
                    Object.is(n.item, c) || this._addIdentityChange(n, c))
                  : ((n = this._mismatch(n, c, f, y)), (r = !0)),
                (n = n._next);
          } else
            (s = 0),
              (function p_(e, t) {
                if (Array.isArray(e))
                  for (let n = 0; n < e.length; n++) t(e[n]);
                else {
                  const n = e[Symbol.iterator]();
                  let r;
                  for (; !(r = n.next()).done; ) t(r.value);
                }
              })(t, (y) => {
                (f = this._trackByFn(s, y)),
                  null !== n && Object.is(n.trackById, f)
                    ? (r && (n = this._verifyReinsertion(n, y, f, s)),
                      Object.is(n.item, y) || this._addIdentityChange(n, y))
                    : ((n = this._mismatch(n, y, f, s)), (r = !0)),
                  (n = n._next),
                  s++;
              }),
              (this.length = s);
          return this._truncate(n), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              t = this._previousItHead = this._itHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded)
              t.previousIndex = t.currentIndex;
            for (
              this._additionsHead = this._additionsTail = null,
                t = this._movesHead;
              null !== t;
              t = t._nextMoved
            )
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, n, r, s) {
          let c;
          return (
            null === t ? (c = this._itTail) : ((c = t._prev), this._remove(t)),
            null !==
            (t =
              null === this._unlinkedRecords
                ? null
                : this._unlinkedRecords.get(r, null))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._reinsertAfter(t, c, s))
              : null !==
                (t =
                  null === this._linkedRecords
                    ? null
                    : this._linkedRecords.get(r, s))
              ? (Object.is(t.item, n) || this._addIdentityChange(t, n),
                this._moveAfter(t, c, s))
              : (t = this._addAfter(new RS(n, r), c, s)),
            t
          );
        }
        _verifyReinsertion(t, n, r, s) {
          let c =
            null === this._unlinkedRecords
              ? null
              : this._unlinkedRecords.get(r, null);
          return (
            null !== c
              ? (t = this._reinsertAfter(c, t._prev, s))
              : t.currentIndex != s &&
                ((t.currentIndex = s), this._addToMoves(t, s)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const n = t._next;
            this._addToRemovals(this._unlink(t)), (t = n);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail &&
              (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail &&
              (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail &&
              (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, n, r) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const s = t._prevRemoved,
            c = t._nextRemoved;
          return (
            null === s ? (this._removalsHead = c) : (s._nextRemoved = c),
            null === c ? (this._removalsTail = s) : (c._prevRemoved = s),
            this._insertAfter(t, n, r),
            this._addToMoves(t, r),
            t
          );
        }
        _moveAfter(t, n, r) {
          return (
            this._unlink(t),
            this._insertAfter(t, n, r),
            this._addToMoves(t, r),
            t
          );
        }
        _addAfter(t, n, r) {
          return (
            this._insertAfter(t, n, r),
            (this._additionsTail =
              null === this._additionsTail
                ? (this._additionsHead = t)
                : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, n, r) {
          const s = null === n ? this._itHead : n._next;
          return (
            (t._next = s),
            (t._prev = n),
            null === s ? (this._itTail = t) : (s._prev = t),
            null === n ? (this._itHead = t) : (n._next = t),
            null === this._linkedRecords && (this._linkedRecords = new Sv()),
            this._linkedRecords.put(t),
            (t.currentIndex = r),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const n = t._prev,
            r = t._next;
          return (
            null === n ? (this._itHead = r) : (n._next = r),
            null === r ? (this._itTail = n) : (r._prev = n),
            t
          );
        }
        _addToMoves(t, n) {
          return (
            t.previousIndex === n ||
              (this._movesTail =
                null === this._movesTail
                  ? (this._movesHead = t)
                  : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords &&
              (this._unlinkedRecords = new Sv()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t),
                (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail),
                (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, n) {
          return (
            (t.item = n),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class RS {
        constructor(t, n) {
          (this.item = t),
            (this.trackById = n),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class LS {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t),
              (t._nextDup = null),
              (t._prevDup = null))
            : ((this._tail._nextDup = t),
              (t._prevDup = this._tail),
              (t._nextDup = null),
              (this._tail = t));
        }
        get(t, n) {
          let r;
          for (r = this._head; null !== r; r = r._nextDup)
            if (
              (null === n || n <= r.currentIndex) &&
              Object.is(r.trackById, t)
            )
              return r;
          return null;
        }
        remove(t) {
          const n = t._prevDup,
            r = t._nextDup;
          return (
            null === n ? (this._head = r) : (n._nextDup = r),
            null === r ? (this._tail = n) : (r._prevDup = n),
            null === this._head
          );
        }
      }
      class Sv {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const n = t.trackById;
          let r = this.map.get(n);
          r || ((r = new LS()), this.map.set(n, r)), r.add(t);
        }
        get(t, n) {
          const s = this.map.get(t);
          return s ? s.get(t, n) : null;
        }
        remove(t) {
          const n = t.trackById;
          return this.map.get(n).remove(t) && this.map.delete(n), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function Tv(e, t, n) {
        const r = e.previousIndex;
        if (null === r) return r;
        let s = 0;
        return n && r < n.length && (s = n[r]), r + t + s;
      }
      class Mv {
        constructor() {}
        supports(t) {
          return t instanceof Map || Nd(t);
        }
        create() {
          return new FS();
        }
      }
      class FS {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._changesHead ||
            null !== this._removalsHead
          );
        }
        forEachItem(t) {
          let n;
          for (n = this._mapHead; null !== n; n = n._next) t(n);
        }
        forEachPreviousItem(t) {
          let n;
          for (n = this._previousMapHead; null !== n; n = n._nextPrevious) t(n);
        }
        forEachChangedItem(t) {
          let n;
          for (n = this._changesHead; null !== n; n = n._nextChanged) t(n);
        }
        forEachAddedItem(t) {
          let n;
          for (n = this._additionsHead; null !== n; n = n._nextAdded) t(n);
        }
        forEachRemovedItem(t) {
          let n;
          for (n = this._removalsHead; null !== n; n = n._nextRemoved) t(n);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || Nd(t))) throw new Ne(900, !1);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let n = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (r, s) => {
              if (n && n.key === s)
                this._maybeAddToChanges(n, r),
                  (this._appendAfter = n),
                  (n = n._next);
              else {
                const c = this._getOrCreateRecordForKey(s, r);
                n = this._insertBeforeOrAppend(n, c);
              }
            }),
            n)
          ) {
            n._prev && (n._prev._next = null), (this._removalsHead = n);
            for (let r = n; null !== r; r = r._nextRemoved)
              r === this._mapHead && (this._mapHead = null),
                this._records.delete(r.key),
                (r._nextRemoved = r._next),
                (r.previousValue = r.currentValue),
                (r.currentValue = null),
                (r._prev = null),
                (r._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, n) {
          if (t) {
            const r = t._prev;
            return (
              (n._next = t),
              (n._prev = r),
              (t._prev = n),
              r && (r._next = n),
              t === this._mapHead && (this._mapHead = n),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter
              ? ((this._appendAfter._next = n), (n._prev = this._appendAfter))
              : (this._mapHead = n),
            (this._appendAfter = n),
            null
          );
        }
        _getOrCreateRecordForKey(t, n) {
          if (this._records.has(t)) {
            const s = this._records.get(t);
            this._maybeAddToChanges(s, n);
            const c = s._prev,
              f = s._next;
            return (
              c && (c._next = f),
              f && (f._prev = c),
              (s._next = null),
              (s._prev = null),
              s
            );
          }
          const r = new kS(t);
          return (
            this._records.set(t, r),
            (r.currentValue = n),
            this._addToAdditions(r),
            r
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (
              this._previousMapHead = this._mapHead, t = this._previousMapHead;
              null !== t;
              t = t._next
            )
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged)
              t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded)
              t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, n) {
          Object.is(n, t.currentValue) ||
            ((t.previousValue = t.currentValue),
            (t.currentValue = n),
            this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, n) {
          t instanceof Map
            ? t.forEach(n)
            : Object.keys(t).forEach((r) => n(t[r], r));
        }
      }
      class kS {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function Av() {
        return new Ff([new Cv()]);
      }
      let Ff = (() => {
        class e {
          static #e = (this.ɵprov = cn({
            token: e,
            providedIn: "root",
            factory: Av,
          }));
          constructor(n) {
            this.factories = n;
          }
          static create(n, r) {
            if (null != r) {
              const s = r.factories.slice();
              n = n.concat(s);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: (r) => e.create(n, r || Av()),
              deps: [[e, new Ql(), new Xl()]],
            };
          }
          find(n) {
            const r = this.factories.find((s) => s.supports(n));
            if (null != r) return r;
            throw new Ne(901, !1);
          }
        }
        return e;
      })();
      function Iv() {
        return new kf([new Mv()]);
      }
      let kf = (() => {
        class e {
          static #e = (this.ɵprov = cn({
            token: e,
            providedIn: "root",
            factory: Iv,
          }));
          constructor(n) {
            this.factories = n;
          }
          static create(n, r) {
            if (r) {
              const s = r.factories.slice();
              n = n.concat(s);
            }
            return new e(n);
          }
          static extend(n) {
            return {
              provide: e,
              useFactory: (r) => e.create(n, r || Iv()),
              deps: [[e, new Ql(), new Xl()]],
            };
          }
          find(n) {
            const r = this.factories.find((s) => s.supports(n));
            if (r) return r;
            throw new Ne(901, !1);
          }
        }
        return e;
      })();
      const US = fv(null, "core", []);
      let $S = (() => {
        class e {
          constructor(n) {}
          static #e = (this.ɵfac = function (r) {
            return new (r || e)(se(Pa));
          });
          static #t = (this.ɵmod = Ji({ type: e }));
          static #n = (this.ɵinj = Kn({}));
        }
        return e;
      })();
      function QS(e) {
        return "boolean" == typeof e ? e : null != e && "false" !== e;
      }
      function eT(e) {
        const t = gn(e);
        if (!t) return null;
        const n = new hl(t);
        return {
          get selector() {
            return n.selector;
          },
          get type() {
            return n.componentType;
          },
          get inputs() {
            return n.inputs;
          },
          get outputs() {
            return n.outputs;
          },
          get ngContentSelectors() {
            return n.ngContentSelectors;
          },
          get isStandalone() {
            return t.standalone;
          },
          get isSignal() {
            return t.signals;
          },
        };
      }
    },
    95: (Lt, Fe, N) => {
      N.d(Fe, {
        Wl: () => Ue,
        Zs: () => ki,
        Fj: () => K,
        NI: () => Ii,
        u: () => Qt,
        cw: () => Nt,
        sg: () => Or,
        u5: () => G,
        JJ: () => dn,
        JL: () => zt,
        F: () => ni,
        UX: () => k,
        Q7: () => Si,
        kI: () => dt,
        _Y: () => $i,
      });
      var l = N(4769),
        L = N(6814),
        B = N(7715),
        Me = N(5592),
        _e = N(7453),
        we = N(4829),
        Ie = N(4564),
        Re = N(8251),
        xe = N(7400),
        oe = N(2714),
        Be = N(7398);
      let et = (() => {
          class h {
            constructor(p, T) {
              (this._renderer = p),
                (this._elementRef = T),
                (this.onChange = (R) => {}),
                (this.onTouched = () => {});
            }
            setProperty(p, T) {
              this._renderer.setProperty(this._elementRef.nativeElement, p, T);
            }
            registerOnTouched(p) {
              this.onTouched = p;
            }
            registerOnChange(p) {
              this.onChange = p;
            }
            setDisabledState(p) {
              this.setProperty("disabled", p);
            }
            static #e = (this.ɵfac = function (T) {
              return new (T || h)(l.Y36(l.Qsj), l.Y36(l.SBq));
            });
            static #t = (this.ɵdir = l.lG2({ type: h }));
          }
          return h;
        })(),
        Ye = (() => {
          class h extends et {
            static #e = (this.ɵfac = (function () {
              let p;
              return function (R) {
                return (p || (p = l.n5z(h)))(R || h);
              };
            })());
            static #t = (this.ɵdir = l.lG2({ type: h, features: [l.qOj] }));
          }
          return h;
        })();
      const ot = new l.OlP("NgValueAccessor"),
        pt = { provide: ot, useExisting: (0, l.Gpc)(() => Ue), multi: !0 };
      let Ue = (() => {
        class h extends Ye {
          writeValue(p) {
            this.setProperty("checked", p);
          }
          static #e = (this.ɵfac = (function () {
            let p;
            return function (R) {
              return (p || (p = l.n5z(h)))(R || h);
            };
          })());
          static #t = (this.ɵdir = l.lG2({
            type: h,
            selectors: [
              ["input", "type", "checkbox", "formControlName", ""],
              ["input", "type", "checkbox", "formControl", ""],
              ["input", "type", "checkbox", "ngModel", ""],
            ],
            hostBindings: function (T, R) {
              1 & T &&
                l.NdJ("change", function (te) {
                  return R.onChange(te.target.checked);
                })("blur", function () {
                  return R.onTouched();
                });
            },
            features: [l._Bn([pt]), l.qOj],
          }));
        }
        return h;
      })();
      const st = { provide: ot, useExisting: (0, l.Gpc)(() => K), multi: !0 },
        $e = new l.OlP("CompositionEventMode");
      let K = (() => {
        class h extends et {
          constructor(p, T, R) {
            super(p, T),
              (this._compositionMode = R),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function It() {
                  const h = (0, L.q)() ? (0, L.q)().getUserAgent() : "";
                  return /android (\d+)/.test(h.toLowerCase());
                })());
          }
          writeValue(p) {
            this.setProperty("value", p ?? "");
          }
          _handleInput(p) {
            (!this._compositionMode ||
              (this._compositionMode && !this._composing)) &&
              this.onChange(p);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(p) {
            (this._composing = !1), this._compositionMode && this.onChange(p);
          }
          static #e = (this.ɵfac = function (T) {
            return new (T || h)(l.Y36(l.Qsj), l.Y36(l.SBq), l.Y36($e, 8));
          });
          static #t = (this.ɵdir = l.lG2({
            type: h,
            selectors: [
              ["input", "formControlName", "", 3, "type", "checkbox"],
              ["textarea", "formControlName", ""],
              ["input", "formControl", "", 3, "type", "checkbox"],
              ["textarea", "formControl", ""],
              ["input", "ngModel", "", 3, "type", "checkbox"],
              ["textarea", "ngModel", ""],
              ["", "ngDefaultControl", ""],
            ],
            hostBindings: function (T, R) {
              1 & T &&
                l.NdJ("input", function (te) {
                  return R._handleInput(te.target.value);
                })("blur", function () {
                  return R.onTouched();
                })("compositionstart", function () {
                  return R._compositionStart();
                })("compositionend", function (te) {
                  return R._compositionEnd(te.target.value);
                });
            },
            features: [l._Bn([st]), l.qOj],
          }));
        }
        return h;
      })();
      function Se(h) {
        return (
          null == h ||
          (("string" == typeof h || Array.isArray(h)) && 0 === h.length)
        );
      }
      function J(h) {
        return null != h && "number" == typeof h.length;
      }
      const De = new l.OlP("NgValidators"),
        ye = new l.OlP("NgAsyncValidators"),
        me =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class dt {
        static min(b) {
          return (function Ne(h) {
            return (b) => {
              if (Se(b.value) || Se(h)) return null;
              const p = parseFloat(b.value);
              return !isNaN(p) && p < h
                ? { min: { min: h, actual: b.value } }
                : null;
            };
          })(b);
        }
        static max(b) {
          return (function Mt(h) {
            return (b) => {
              if (Se(b.value) || Se(h)) return null;
              const p = parseFloat(b.value);
              return !isNaN(p) && p > h
                ? { max: { max: h, actual: b.value } }
                : null;
            };
          })(b);
        }
        static required(b) {
          return At(b);
        }
        static requiredTrue(b) {
          return Vt(b);
        }
        static email(b) {
          return (function In(h) {
            return Se(h.value) || me.test(h.value) ? null : { email: !0 };
          })(b);
        }
        static minLength(b) {
          return (function qt(h) {
            return (b) =>
              Se(b.value) || !J(b.value)
                ? null
                : b.value.length < h
                ? {
                    minlength: {
                      requiredLength: h,
                      actualLength: b.value.length,
                    },
                  }
                : null;
          })(b);
        }
        static maxLength(b) {
          return (function Ot(h) {
            return (b) =>
              J(b.value) && b.value.length > h
                ? {
                    maxlength: {
                      requiredLength: h,
                      actualLength: b.value.length,
                    },
                  }
                : null;
          })(b);
        }
        static pattern(b) {
          return (function qe(h) {
            if (!h) return re;
            let b, p;
            return (
              "string" == typeof h
                ? ((p = ""),
                  "^" !== h.charAt(0) && (p += "^"),
                  (p += h),
                  "$" !== h.charAt(h.length - 1) && (p += "$"),
                  (b = new RegExp(p)))
                : ((p = h.toString()), (b = h)),
              (T) => {
                if (Se(T.value)) return null;
                const R = T.value;
                return b.test(R)
                  ? null
                  : { pattern: { requiredPattern: p, actualValue: R } };
              }
            );
          })(b);
        }
        static nullValidator(b) {
          return null;
        }
        static compose(b) {
          return an(b);
        }
        static composeAsync(b) {
          return Pt(b);
        }
      }
      function At(h) {
        return Se(h.value) ? { required: !0 } : null;
      }
      function Vt(h) {
        return !0 === h.value ? null : { required: !0 };
      }
      function re(h) {
        return null;
      }
      function ue(h) {
        return null != h;
      }
      function Oe(h) {
        return (0, l.QGY)(h) ? (0, B.D)(h) : h;
      }
      function Pe(h) {
        let b = {};
        return (
          h.forEach((p) => {
            b = null != p ? { ...b, ...p } : b;
          }),
          0 === Object.keys(b).length ? null : b
        );
      }
      function tt(h, b) {
        return b.map((p) => p(h));
      }
      function Bt(h) {
        return h.map((b) =>
          (function lt(h) {
            return !h.validate;
          })(b)
            ? b
            : (p) => b.validate(p)
        );
      }
      function an(h) {
        if (!h) return null;
        const b = h.filter(ue);
        return 0 == b.length
          ? null
          : function (p) {
              return Pe(tt(p, b));
            };
      }
      function Tn(h) {
        return null != h ? an(Bt(h)) : null;
      }
      function Pt(h) {
        if (!h) return null;
        const b = h.filter(ue);
        return 0 == b.length
          ? null
          : function (p) {
              return (function ge(...h) {
                const b = (0, Ie.jO)(h),
                  { args: p, keys: T } = (0, _e.D)(h),
                  R = new Me.y((Y) => {
                    const { length: te } = p;
                    if (!te) return void Y.complete();
                    const X = new Array(te);
                    let Z = te,
                      fe = te;
                    for (let nt = 0; nt < te; nt++) {
                      let Je = !1;
                      (0, we.Xf)(p[nt]).subscribe(
                        (0, Re.x)(
                          Y,
                          (_t) => {
                            Je || ((Je = !0), fe--), (X[nt] = _t);
                          },
                          () => Z--,
                          void 0,
                          () => {
                            (!Z || !Je) &&
                              (fe || Y.next(T ? (0, oe.n)(T, X) : X),
                              Y.complete());
                          }
                        )
                      );
                    }
                  });
                return b ? R.pipe((0, xe.Z)(b)) : R;
              })(tt(p, b).map(Oe)).pipe((0, Be.U)(Pe));
            };
      }
      function ln(h) {
        return null != h ? Pt(Bt(h)) : null;
      }
      function Kt(h, b) {
        return null === h ? [b] : Array.isArray(h) ? [...h, b] : [h, b];
      }
      function Ge(h) {
        return h._rawValidators;
      }
      function Qe(h) {
        return h._rawAsyncValidators;
      }
      function ce(h) {
        return h ? (Array.isArray(h) ? h : [h]) : [];
      }
      function He(h, b) {
        return Array.isArray(h) ? h.includes(b) : h === b;
      }
      function Ct(h, b) {
        const p = ce(b);
        return (
          ce(h).forEach((R) => {
            He(p, R) || p.push(R);
          }),
          p
        );
      }
      function mn(h, b) {
        return ce(b).filter((p) => !He(h, p));
      }
      class cn {
        constructor() {
          (this._rawValidators = []),
            (this._rawAsyncValidators = []),
            (this._onDestroyCallbacks = []);
        }
        get value() {
          return this.control ? this.control.value : null;
        }
        get valid() {
          return this.control ? this.control.valid : null;
        }
        get invalid() {
          return this.control ? this.control.invalid : null;
        }
        get pending() {
          return this.control ? this.control.pending : null;
        }
        get disabled() {
          return this.control ? this.control.disabled : null;
        }
        get enabled() {
          return this.control ? this.control.enabled : null;
        }
        get errors() {
          return this.control ? this.control.errors : null;
        }
        get pristine() {
          return this.control ? this.control.pristine : null;
        }
        get dirty() {
          return this.control ? this.control.dirty : null;
        }
        get touched() {
          return this.control ? this.control.touched : null;
        }
        get status() {
          return this.control ? this.control.status : null;
        }
        get untouched() {
          return this.control ? this.control.untouched : null;
        }
        get statusChanges() {
          return this.control ? this.control.statusChanges : null;
        }
        get valueChanges() {
          return this.control ? this.control.valueChanges : null;
        }
        get path() {
          return null;
        }
        _setValidators(b) {
          (this._rawValidators = b || []),
            (this._composedValidatorFn = Tn(this._rawValidators));
        }
        _setAsyncValidators(b) {
          (this._rawAsyncValidators = b || []),
            (this._composedAsyncValidatorFn = ln(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn || null;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn || null;
        }
        _registerOnDestroy(b) {
          this._onDestroyCallbacks.push(b);
        }
        _invokeOnDestroyCallbacks() {
          this._onDestroyCallbacks.forEach((b) => b()),
            (this._onDestroyCallbacks = []);
        }
        reset(b = void 0) {
          this.control && this.control.reset(b);
        }
        hasError(b, p) {
          return !!this.control && this.control.hasError(b, p);
        }
        getError(b, p) {
          return this.control ? this.control.getError(b, p) : null;
        }
      }
      class $t extends cn {
        get formDirective() {
          return null;
        }
        get path() {
          return null;
        }
      }
      class Kn extends cn {
        constructor() {
          super(...arguments),
            (this._parent = null),
            (this.name = null),
            (this.valueAccessor = null);
        }
      }
      class Er {
        constructor(b) {
          this._cd = b;
        }
        get isTouched() {
          return !!this._cd?.control?.touched;
        }
        get isUntouched() {
          return !!this._cd?.control?.untouched;
        }
        get isPristine() {
          return !!this._cd?.control?.pristine;
        }
        get isDirty() {
          return !!this._cd?.control?.dirty;
        }
        get isValid() {
          return !!this._cd?.control?.valid;
        }
        get isInvalid() {
          return !!this._cd?.control?.invalid;
        }
        get isPending() {
          return !!this._cd?.control?.pending;
        }
        get isSubmitted() {
          return !!this._cd?.submitted;
        }
      }
      let dn = (() => {
          class h extends Er {
            constructor(p) {
              super(p);
            }
            static #e = (this.ɵfac = function (T) {
              return new (T || h)(l.Y36(Kn, 2));
            });
            static #t = (this.ɵdir = l.lG2({
              type: h,
              selectors: [
                ["", "formControlName", ""],
                ["", "ngModel", ""],
                ["", "formControl", ""],
              ],
              hostVars: 14,
              hostBindings: function (T, R) {
                2 & T &&
                  l.ekj("ng-untouched", R.isUntouched)(
                    "ng-touched",
                    R.isTouched
                  )("ng-pristine", R.isPristine)("ng-dirty", R.isDirty)(
                    "ng-valid",
                    R.isValid
                  )("ng-invalid", R.isInvalid)("ng-pending", R.isPending);
              },
              features: [l.qOj],
            }));
          }
          return h;
        })(),
        zt = (() => {
          class h extends Er {
            constructor(p) {
              super(p);
            }
            static #e = (this.ɵfac = function (T) {
              return new (T || h)(l.Y36($t, 10));
            });
            static #t = (this.ɵdir = l.lG2({
              type: h,
              selectors: [
                ["", "formGroupName", ""],
                ["", "formArrayName", ""],
                ["", "ngModelGroup", ""],
                ["", "formGroup", ""],
                ["form", 3, "ngNoForm", ""],
                ["", "ngForm", ""],
              ],
              hostVars: 16,
              hostBindings: function (T, R) {
                2 & T &&
                  l.ekj("ng-untouched", R.isUntouched)(
                    "ng-touched",
                    R.isTouched
                  )("ng-pristine", R.isPristine)("ng-dirty", R.isDirty)(
                    "ng-valid",
                    R.isValid
                  )("ng-invalid", R.isInvalid)("ng-pending", R.isPending)(
                    "ng-submitted",
                    R.isSubmitted
                  );
              },
              features: [l.qOj],
            }));
          }
          return h;
        })();
      const Tr = "VALID",
        ur = "INVALID",
        z = "PENDING",
        le = "DISABLED";
      function be(h) {
        return (ee(h) ? h.validators : h) || null;
      }
      function ae(h, b) {
        return (ee(b) ? b.asyncValidators : h) || null;
      }
      function ee(h) {
        return null != h && !Array.isArray(h) && "object" == typeof h;
      }
      class vt {
        constructor(b, p) {
          (this._pendingDirty = !1),
            (this._hasOwnPendingAsyncValidator = !1),
            (this._pendingTouched = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            this._assignValidators(b),
            this._assignAsyncValidators(p);
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(b) {
          this._rawValidators = this._composedValidatorFn = b;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(b) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = b;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === Tr;
        }
        get invalid() {
          return this.status === ur;
        }
        get pending() {
          return this.status == z;
        }
        get disabled() {
          return this.status === le;
        }
        get enabled() {
          return this.status !== le;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn
            ? this._updateOn
            : this.parent
            ? this.parent.updateOn
            : "change";
        }
        setValidators(b) {
          this._assignValidators(b);
        }
        setAsyncValidators(b) {
          this._assignAsyncValidators(b);
        }
        addValidators(b) {
          this.setValidators(Ct(b, this._rawValidators));
        }
        addAsyncValidators(b) {
          this.setAsyncValidators(Ct(b, this._rawAsyncValidators));
        }
        removeValidators(b) {
          this.setValidators(mn(b, this._rawValidators));
        }
        removeAsyncValidators(b) {
          this.setAsyncValidators(mn(b, this._rawAsyncValidators));
        }
        hasValidator(b) {
          return He(this._rawValidators, b);
        }
        hasAsyncValidator(b) {
          return He(this._rawAsyncValidators, b);
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(b = {}) {
          (this.touched = !0),
            this._parent && !b.onlySelf && this._parent.markAsTouched(b);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }),
            this._forEachChild((b) => b.markAllAsTouched());
        }
        markAsUntouched(b = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((p) => {
              p.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !b.onlySelf && this._parent._updateTouched(b);
        }
        markAsDirty(b = {}) {
          (this.pristine = !1),
            this._parent && !b.onlySelf && this._parent.markAsDirty(b);
        }
        markAsPristine(b = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((p) => {
              p.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !b.onlySelf && this._parent._updatePristine(b);
        }
        markAsPending(b = {}) {
          (this.status = z),
            !1 !== b.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !b.onlySelf && this._parent.markAsPending(b);
        }
        disable(b = {}) {
          const p = this._parentMarkedDirty(b.onlySelf);
          (this.status = le),
            (this.errors = null),
            this._forEachChild((T) => {
              T.disable({ ...b, onlySelf: !0 });
            }),
            this._updateValue(),
            !1 !== b.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._updateAncestors({ ...b, skipPristineCheck: p }),
            this._onDisabledChange.forEach((T) => T(!0));
        }
        enable(b = {}) {
          const p = this._parentMarkedDirty(b.onlySelf);
          (this.status = Tr),
            this._forEachChild((T) => {
              T.enable({ ...b, onlySelf: !0 });
            }),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: b.emitEvent,
            }),
            this._updateAncestors({ ...b, skipPristineCheck: p }),
            this._onDisabledChange.forEach((T) => T(!1));
        }
        _updateAncestors(b) {
          this._parent &&
            !b.onlySelf &&
            (this._parent.updateValueAndValidity(b),
            b.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(b) {
          this._parent = b;
        }
        getRawValue() {
          return this.value;
        }
        updateValueAndValidity(b = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status === Tr || this.status === z) &&
                this._runAsyncValidator(b.emitEvent)),
            !1 !== b.emitEvent &&
              (this.valueChanges.emit(this.value),
              this.statusChanges.emit(this.status)),
            this._parent &&
              !b.onlySelf &&
              this._parent.updateValueAndValidity(b);
        }
        _updateTreeValidity(b = { emitEvent: !0 }) {
          this._forEachChild((p) => p._updateTreeValidity(b)),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: b.emitEvent,
            });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? le : Tr;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(b) {
          if (this.asyncValidator) {
            (this.status = z), (this._hasOwnPendingAsyncValidator = !0);
            const p = Oe(this.asyncValidator(this));
            this._asyncValidationSubscription = p.subscribe((T) => {
              (this._hasOwnPendingAsyncValidator = !1),
                this.setErrors(T, { emitEvent: b });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(),
            (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(b, p = {}) {
          (this.errors = b), this._updateControlsErrors(!1 !== p.emitEvent);
        }
        get(b) {
          let p = b;
          return null == p ||
            (Array.isArray(p) || (p = p.split(".")), 0 === p.length)
            ? null
            : p.reduce((T, R) => T && T._find(R), this);
        }
        getError(b, p) {
          const T = p ? this.get(p) : this;
          return T && T.errors ? T.errors[b] : null;
        }
        hasError(b, p) {
          return !!this.getError(b, p);
        }
        get root() {
          let b = this;
          for (; b._parent; ) b = b._parent;
          return b;
        }
        _updateControlsErrors(b) {
          (this.status = this._calculateStatus()),
            b && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(b);
        }
        _initObservables() {
          (this.valueChanges = new l.vpe()), (this.statusChanges = new l.vpe());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? le
            : this.errors
            ? ur
            : this._hasOwnPendingAsyncValidator ||
              this._anyControlsHaveStatus(z)
            ? z
            : this._anyControlsHaveStatus(ur)
            ? ur
            : Tr;
        }
        _anyControlsHaveStatus(b) {
          return this._anyControls((p) => p.status === b);
        }
        _anyControlsDirty() {
          return this._anyControls((b) => b.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((b) => b.touched);
        }
        _updatePristine(b = {}) {
          (this.pristine = !this._anyControlsDirty()),
            this._parent && !b.onlySelf && this._parent._updatePristine(b);
        }
        _updateTouched(b = {}) {
          (this.touched = this._anyControlsTouched()),
            this._parent && !b.onlySelf && this._parent._updateTouched(b);
        }
        _registerOnCollectionChange(b) {
          this._onCollectionChange = b;
        }
        _setUpdateStrategy(b) {
          ee(b) && null != b.updateOn && (this._updateOn = b.updateOn);
        }
        _parentMarkedDirty(b) {
          return (
            !b &&
            !(!this._parent || !this._parent.dirty) &&
            !this._parent._anyControlsDirty()
          );
        }
        _find(b) {
          return null;
        }
        _assignValidators(b) {
          (this._rawValidators = Array.isArray(b) ? b.slice() : b),
            (this._composedValidatorFn = (function Q(h) {
              return Array.isArray(h) ? Tn(h) : h || null;
            })(this._rawValidators));
        }
        _assignAsyncValidators(b) {
          (this._rawAsyncValidators = Array.isArray(b) ? b.slice() : b),
            (this._composedAsyncValidatorFn = (function W(h) {
              return Array.isArray(h) ? ln(h) : h || null;
            })(this._rawAsyncValidators));
        }
      }
      class Nt extends vt {
        constructor(b, p, T) {
          super(be(p), ae(T, p)),
            (this.controls = b),
            this._initObservables(),
            this._setUpdateStrategy(p),
            this._setUpControls(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            });
        }
        registerControl(b, p) {
          return this.controls[b]
            ? this.controls[b]
            : ((this.controls[b] = p),
              p.setParent(this),
              p._registerOnCollectionChange(this._onCollectionChange),
              p);
        }
        addControl(b, p, T = {}) {
          this.registerControl(b, p),
            this.updateValueAndValidity({ emitEvent: T.emitEvent }),
            this._onCollectionChange();
        }
        removeControl(b, p = {}) {
          this.controls[b] &&
            this.controls[b]._registerOnCollectionChange(() => {}),
            delete this.controls[b],
            this.updateValueAndValidity({ emitEvent: p.emitEvent }),
            this._onCollectionChange();
        }
        setControl(b, p, T = {}) {
          this.controls[b] &&
            this.controls[b]._registerOnCollectionChange(() => {}),
            delete this.controls[b],
            p && this.registerControl(b, p),
            this.updateValueAndValidity({ emitEvent: T.emitEvent }),
            this._onCollectionChange();
        }
        contains(b) {
          return this.controls.hasOwnProperty(b) && this.controls[b].enabled;
        }
        setValue(b, p = {}) {
          (function Xe(h, b, p) {
            h._forEachChild((T, R) => {
              if (void 0 === p[R]) throw new l.vHH(1002, "");
            });
          })(this, 0, b),
            Object.keys(b).forEach((T) => {
              (function Ee(h, b, p) {
                const T = h.controls;
                if (!(b ? Object.keys(T) : T).length) throw new l.vHH(1e3, "");
                if (!T[p]) throw new l.vHH(1001, "");
              })(this, !0, T),
                this.controls[T].setValue(b[T], {
                  onlySelf: !0,
                  emitEvent: p.emitEvent,
                });
            }),
            this.updateValueAndValidity(p);
        }
        patchValue(b, p = {}) {
          null != b &&
            (Object.keys(b).forEach((T) => {
              const R = this.controls[T];
              R && R.patchValue(b[T], { onlySelf: !0, emitEvent: p.emitEvent });
            }),
            this.updateValueAndValidity(p));
        }
        reset(b = {}, p = {}) {
          this._forEachChild((T, R) => {
            T.reset(b[R], { onlySelf: !0, emitEvent: p.emitEvent });
          }),
            this._updatePristine(p),
            this._updateTouched(p),
            this.updateValueAndValidity(p);
        }
        getRawValue() {
          return this._reduceChildren(
            {},
            (b, p, T) => ((b[T] = p.getRawValue()), b)
          );
        }
        _syncPendingControls() {
          let b = this._reduceChildren(
            !1,
            (p, T) => !!T._syncPendingControls() || p
          );
          return b && this.updateValueAndValidity({ onlySelf: !0 }), b;
        }
        _forEachChild(b) {
          Object.keys(this.controls).forEach((p) => {
            const T = this.controls[p];
            T && b(T, p);
          });
        }
        _setUpControls() {
          this._forEachChild((b) => {
            b.setParent(this),
              b._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(b) {
          for (const [p, T] of Object.entries(this.controls))
            if (this.contains(p) && b(T)) return !0;
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren(
            {},
            (p, T, R) => ((T.enabled || this.disabled) && (p[R] = T.value), p)
          );
        }
        _reduceChildren(b, p) {
          let T = b;
          return (
            this._forEachChild((R, Y) => {
              T = p(T, R, Y);
            }),
            T
          );
        }
        _allControlsDisabled() {
          for (const b of Object.keys(this.controls))
            if (this.controls[b].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _find(b) {
          return this.controls.hasOwnProperty(b) ? this.controls[b] : null;
        }
      }
      const Ce = new l.OlP("CallSetDisabledState", {
          providedIn: "root",
          factory: () => se,
        }),
        se = "always";
      function je(h, b, p = se) {
        On(h, b),
          b.valueAccessor.writeValue(h.value),
          (h.disabled || "always" === p) &&
            b.valueAccessor.setDisabledState?.(h.disabled),
          (function sr(h, b) {
            b.valueAccessor.registerOnChange((p) => {
              (h._pendingValue = p),
                (h._pendingChange = !0),
                (h._pendingDirty = !0),
                "change" === h.updateOn && gr(h, b);
            });
          })(h, b),
          (function er(h, b) {
            const p = (T, R) => {
              b.valueAccessor.writeValue(T), R && b.viewToModelUpdate(T);
            };
            h.registerOnChange(p),
              b._registerOnDestroy(() => {
                h._unregisterOnChange(p);
              });
          })(h, b),
          (function Ln(h, b) {
            b.valueAccessor.registerOnTouched(() => {
              (h._pendingTouched = !0),
                "blur" === h.updateOn && h._pendingChange && gr(h, b),
                "submit" !== h.updateOn && h.markAsTouched();
            });
          })(h, b),
          (function St(h, b) {
            if (b.valueAccessor.setDisabledState) {
              const p = (T) => {
                b.valueAccessor.setDisabledState(T);
              };
              h.registerOnDisabledChange(p),
                b._registerOnDestroy(() => {
                  h._unregisterOnDisabledChange(p);
                });
            }
          })(h, b);
      }
      function Et(h, b, p = !0) {
        const T = () => {};
        b.valueAccessor &&
          (b.valueAccessor.registerOnChange(T),
          b.valueAccessor.registerOnTouched(T)),
          en(h, b),
          h &&
            (b._invokeOnDestroyCallbacks(),
            h._registerOnCollectionChange(() => {}));
      }
      function Dt(h, b) {
        h.forEach((p) => {
          p.registerOnValidatorChange && p.registerOnValidatorChange(b);
        });
      }
      function On(h, b) {
        const p = Ge(h);
        null !== b.validator
          ? h.setValidators(Kt(p, b.validator))
          : "function" == typeof p && h.setValidators([p]);
        const T = Qe(h);
        null !== b.asyncValidator
          ? h.setAsyncValidators(Kt(T, b.asyncValidator))
          : "function" == typeof T && h.setAsyncValidators([T]);
        const R = () => h.updateValueAndValidity();
        Dt(b._rawValidators, R), Dt(b._rawAsyncValidators, R);
      }
      function en(h, b) {
        let p = !1;
        if (null !== h) {
          if (null !== b.validator) {
            const R = Ge(h);
            if (Array.isArray(R) && R.length > 0) {
              const Y = R.filter((te) => te !== b.validator);
              Y.length !== R.length && ((p = !0), h.setValidators(Y));
            }
          }
          if (null !== b.asyncValidator) {
            const R = Qe(h);
            if (Array.isArray(R) && R.length > 0) {
              const Y = R.filter((te) => te !== b.asyncValidator);
              Y.length !== R.length && ((p = !0), h.setAsyncValidators(Y));
            }
          }
        }
        const T = () => {};
        return Dt(b._rawValidators, T), Dt(b._rawAsyncValidators, T), p;
      }
      function gr(h, b) {
        h._pendingDirty && h.markAsDirty(),
          h.setValue(h._pendingValue, { emitModelToViewChange: !1 }),
          b.viewToModelUpdate(h._pendingValue),
          (h._pendingChange = !1);
      }
      function jn(h, b) {
        On(h, b);
      }
      function mi(h, b) {
        h._syncPendingControls(),
          b.forEach((p) => {
            const T = p.control;
            "submit" === T.updateOn &&
              T._pendingChange &&
              (p.viewToModelUpdate(T._pendingValue), (T._pendingChange = !1));
          });
      }
      const Ai = { provide: $t, useExisting: (0, l.Gpc)(() => ni) },
        tr = (() => Promise.resolve())();
      let ni = (() => {
        class h extends $t {
          constructor(p, T, R) {
            super(),
              (this.callSetDisabledState = R),
              (this.submitted = !1),
              (this._directives = new Set()),
              (this.ngSubmit = new l.vpe()),
              (this.form = new Nt({}, Tn(p), ln(T)));
          }
          ngAfterViewInit() {
            this._setUpdateStrategy();
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          get controls() {
            return this.form.controls;
          }
          addControl(p) {
            tr.then(() => {
              const T = this._findContainer(p.path);
              (p.control = T.registerControl(p.name, p.control)),
                je(p.control, p, this.callSetDisabledState),
                p.control.updateValueAndValidity({ emitEvent: !1 }),
                this._directives.add(p);
            });
          }
          getControl(p) {
            return this.form.get(p.path);
          }
          removeControl(p) {
            tr.then(() => {
              const T = this._findContainer(p.path);
              T && T.removeControl(p.name), this._directives.delete(p);
            });
          }
          addFormGroup(p) {
            tr.then(() => {
              const T = this._findContainer(p.path),
                R = new Nt({});
              jn(R, p),
                T.registerControl(p.name, R),
                R.updateValueAndValidity({ emitEvent: !1 });
            });
          }
          removeFormGroup(p) {
            tr.then(() => {
              const T = this._findContainer(p.path);
              T && T.removeControl(p.name);
            });
          }
          getFormGroup(p) {
            return this.form.get(p.path);
          }
          updateModel(p, T) {
            tr.then(() => {
              this.form.get(p.path).setValue(T);
            });
          }
          setValue(p) {
            this.control.setValue(p);
          }
          onSubmit(p) {
            return (
              (this.submitted = !0),
              mi(this.form, this._directives),
              this.ngSubmit.emit(p),
              "dialog" === p?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(p = void 0) {
            this.form.reset(p), (this.submitted = !1);
          }
          _setUpdateStrategy() {
            this.options &&
              null != this.options.updateOn &&
              (this.form._updateOn = this.options.updateOn);
          }
          _findContainer(p) {
            return p.pop(), p.length ? this.form.get(p) : this.form;
          }
          static #e = (this.ɵfac = function (T) {
            return new (T || h)(l.Y36(De, 10), l.Y36(ye, 10), l.Y36(Ce, 8));
          });
          static #t = (this.ɵdir = l.lG2({
            type: h,
            selectors: [
              ["form", 3, "ngNoForm", "", 3, "formGroup", ""],
              ["ng-form"],
              ["", "ngForm", ""],
            ],
            hostBindings: function (T, R) {
              1 & T &&
                l.NdJ("submit", function (te) {
                  return R.onSubmit(te);
                })("reset", function () {
                  return R.onReset();
                });
            },
            inputs: { options: ["ngFormOptions", "options"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [l._Bn([Ai]), l.qOj],
          }));
        }
        return h;
      })();
      function Cs(h, b) {
        const p = h.indexOf(b);
        p > -1 && h.splice(p, 1);
      }
      function Ur(h) {
        return (
          "object" == typeof h &&
          null !== h &&
          2 === Object.keys(h).length &&
          "value" in h &&
          "disabled" in h
        );
      }
      const Ii = class extends vt {
        constructor(b = null, p, T) {
          super(be(p), ae(T, p)),
            (this.defaultValue = null),
            (this._onChange = []),
            (this._pendingChange = !1),
            this._applyFormState(b),
            this._setUpdateStrategy(p),
            this._initObservables(),
            this.updateValueAndValidity({
              onlySelf: !0,
              emitEvent: !!this.asyncValidator,
            }),
            ee(p) &&
              (p.nonNullable || p.initialValueIsDefault) &&
              (this.defaultValue = Ur(b) ? b.value : b);
        }
        setValue(b, p = {}) {
          (this.value = this._pendingValue = b),
            this._onChange.length &&
              !1 !== p.emitModelToViewChange &&
              this._onChange.forEach((T) =>
                T(this.value, !1 !== p.emitViewToModelChange)
              ),
            this.updateValueAndValidity(p);
        }
        patchValue(b, p = {}) {
          this.setValue(b, p);
        }
        reset(b = this.defaultValue, p = {}) {
          this._applyFormState(b),
            this.markAsPristine(p),
            this.markAsUntouched(p),
            this.setValue(this.value, p),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(b) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(b) {
          this._onChange.push(b);
        }
        _unregisterOnChange(b) {
          Cs(this._onChange, b);
        }
        registerOnDisabledChange(b) {
          this._onDisabledChange.push(b);
        }
        _unregisterOnDisabledChange(b) {
          Cs(this._onDisabledChange, b);
        }
        _forEachChild(b) {}
        _syncPendingControls() {
          return !(
            "submit" !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, {
              onlySelf: !0,
              emitModelToViewChange: !1,
            }),
            0)
          );
        }
        _applyFormState(b) {
          Ur(b)
            ? ((this.value = this._pendingValue = b.value),
              b.disabled
                ? this.disable({ onlySelf: !0, emitEvent: !1 })
                : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = b);
        }
      };
      let $i = (() => {
          class h {
            static #e = (this.ɵfac = function (T) {
              return new (T || h)();
            });
            static #t = (this.ɵdir = l.lG2({
              type: h,
              selectors: [
                ["form", 3, "ngNoForm", "", 3, "ngNativeValidate", ""],
              ],
              hostAttrs: ["novalidate", ""],
            }));
          }
          return h;
        })(),
        _i = (() => {
          class h {
            static #e = (this.ɵfac = function (T) {
              return new (T || h)();
            });
            static #t = (this.ɵmod = l.oAB({ type: h }));
            static #n = (this.ɵinj = l.cJS({}));
          }
          return h;
        })();
      const xn = new l.OlP("NgModelWithFormControlWarning"),
        Ir = { provide: $t, useExisting: (0, l.Gpc)(() => Or) };
      let Or = (() => {
        class h extends $t {
          constructor(p, T, R) {
            super(),
              (this.callSetDisabledState = R),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new l.vpe()),
              this._setValidators(p),
              this._setAsyncValidators(T);
          }
          ngOnChanges(p) {
            this._checkFormPresent(),
              p.hasOwnProperty("form") &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (en(this.form, this),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(p) {
            const T = this.form.get(p.path);
            return (
              je(T, p, this.callSetDisabledState),
              T.updateValueAndValidity({ emitEvent: !1 }),
              this.directives.push(p),
              T
            );
          }
          getControl(p) {
            return this.form.get(p.path);
          }
          removeControl(p) {
            Et(p.control || null, p, !1),
              (function Mr(h, b) {
                const p = h.indexOf(b);
                p > -1 && h.splice(p, 1);
              })(this.directives, p);
          }
          addFormGroup(p) {
            this._setUpFormContainer(p);
          }
          removeFormGroup(p) {
            this._cleanUpFormContainer(p);
          }
          getFormGroup(p) {
            return this.form.get(p.path);
          }
          addFormArray(p) {
            this._setUpFormContainer(p);
          }
          removeFormArray(p) {
            this._cleanUpFormContainer(p);
          }
          getFormArray(p) {
            return this.form.get(p.path);
          }
          updateModel(p, T) {
            this.form.get(p.path).setValue(T);
          }
          onSubmit(p) {
            return (
              (this.submitted = !0),
              mi(this.form, this.directives),
              this.ngSubmit.emit(p),
              "dialog" === p?.target?.method
            );
          }
          onReset() {
            this.resetForm();
          }
          resetForm(p = void 0) {
            this.form.reset(p), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((p) => {
              const T = p.control,
                R = this.form.get(p.path);
              T !== R &&
                (Et(T || null, p),
                ((h) => h instanceof Ii)(R) &&
                  (je(R, p, this.callSetDisabledState), (p.control = R)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(p) {
            const T = this.form.get(p.path);
            jn(T, p), T.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(p) {
            if (this.form) {
              const T = this.form.get(p.path);
              T &&
                (function Xt(h, b) {
                  return en(h, b);
                })(T, p) &&
                T.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm &&
                this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            On(this.form, this), this._oldForm && en(this._oldForm, this);
          }
          _checkFormPresent() {}
          static #e = (this.ɵfac = function (T) {
            return new (T || h)(l.Y36(De, 10), l.Y36(ye, 10), l.Y36(Ce, 8));
          });
          static #t = (this.ɵdir = l.lG2({
            type: h,
            selectors: [["", "formGroup", ""]],
            hostBindings: function (T, R) {
              1 & T &&
                l.NdJ("submit", function (te) {
                  return R.onSubmit(te);
                })("reset", function () {
                  return R.onReset();
                });
            },
            inputs: { form: ["formGroup", "form"] },
            outputs: { ngSubmit: "ngSubmit" },
            exportAs: ["ngForm"],
            features: [l._Bn([Ir]), l.qOj, l.TTD],
          }));
        }
        return h;
      })();
      const Rt = { provide: Kn, useExisting: (0, l.Gpc)(() => Qt) };
      let Qt = (() => {
          class h extends Kn {
            set isDisabled(p) {}
            static #e = (this._ngModelWarningSentOnce = !1);
            constructor(p, T, R, Y, te) {
              super(),
                (this._ngModelWarningConfig = te),
                (this._added = !1),
                (this.name = null),
                (this.update = new l.vpe()),
                (this._ngModelWarningSent = !1),
                (this._parent = p),
                this._setValidators(T),
                this._setAsyncValidators(R),
                (this.valueAccessor = (function Br(h, b) {
                  if (!b) return null;
                  let p, T, R;
                  return (
                    Array.isArray(b),
                    b.forEach((Y) => {
                      Y.constructor === K
                        ? (p = Y)
                        : (function fi(h) {
                            return Object.getPrototypeOf(h.constructor) === Ye;
                          })(Y)
                        ? (T = Y)
                        : (R = Y);
                    }),
                    R || T || p || null
                  );
                })(0, Y));
            }
            ngOnChanges(p) {
              this._added || this._setUpControl(),
                (function qn(h, b) {
                  if (!h.hasOwnProperty("model")) return !1;
                  const p = h.model;
                  return !!p.isFirstChange() || !Object.is(b, p.currentValue);
                })(p, this.viewModel) &&
                  ((this.viewModel = this.model),
                  this.formDirective.updateModel(this, this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            viewToModelUpdate(p) {
              (this.viewModel = p), this.update.emit(p);
            }
            get path() {
              return (function he(h, b) {
                return [...b.path, h];
              })(
                null == this.name ? this.name : this.name.toString(),
                this._parent
              );
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            _checkParentType() {}
            _setUpControl() {
              this._checkParentType(),
                (this.control = this.formDirective.addControl(this)),
                (this._added = !0);
            }
            static #t = (this.ɵfac = function (T) {
              return new (T || h)(
                l.Y36($t, 13),
                l.Y36(De, 10),
                l.Y36(ye, 10),
                l.Y36(ot, 10),
                l.Y36(xn, 8)
              );
            });
            static #n = (this.ɵdir = l.lG2({
              type: h,
              selectors: [["", "formControlName", ""]],
              inputs: {
                name: ["formControlName", "name"],
                isDisabled: ["disabled", "isDisabled"],
                model: ["ngModel", "model"],
              },
              outputs: { update: "ngModelChange" },
              features: [l._Bn([Rt]), l.qOj, l.TTD],
            }));
          }
          return h;
        })(),
        Xr = (() => {
          class h {
            constructor() {
              this._validator = re;
            }
            ngOnChanges(p) {
              if (this.inputName in p) {
                const T = this.normalizeInput(p[this.inputName].currentValue);
                (this._enabled = this.enabled(T)),
                  (this._validator = this._enabled
                    ? this.createValidator(T)
                    : re),
                  this._onChange && this._onChange();
              }
            }
            validate(p) {
              return this._validator(p);
            }
            registerOnValidatorChange(p) {
              this._onChange = p;
            }
            enabled(p) {
              return null != p;
            }
            static #e = (this.ɵfac = function (T) {
              return new (T || h)();
            });
            static #t = (this.ɵdir = l.lG2({ type: h, features: [l.TTD] }));
          }
          return h;
        })();
      const Nn = { provide: De, useExisting: (0, l.Gpc)(() => Si), multi: !0 },
        xr = { provide: De, useExisting: (0, l.Gpc)(() => ki), multi: !0 };
      let Si = (() => {
          class h extends Xr {
            constructor() {
              super(...arguments),
                (this.inputName = "required"),
                (this.normalizeInput = l.VuI),
                (this.createValidator = (p) => At);
            }
            enabled(p) {
              return p;
            }
            static #e = (this.ɵfac = (function () {
              let p;
              return function (R) {
                return (p || (p = l.n5z(h)))(R || h);
              };
            })());
            static #t = (this.ɵdir = l.lG2({
              type: h,
              selectors: [
                [
                  "",
                  "required",
                  "",
                  "formControlName",
                  "",
                  3,
                  "type",
                  "checkbox",
                ],
                ["", "required", "", "formControl", "", 3, "type", "checkbox"],
                ["", "required", "", "ngModel", "", 3, "type", "checkbox"],
              ],
              hostVars: 1,
              hostBindings: function (T, R) {
                2 & T && l.uIk("required", R._enabled ? "" : null);
              },
              inputs: { required: "required" },
              features: [l._Bn([Nn]), l.qOj],
            }));
          }
          return h;
        })(),
        ki = (() => {
          class h extends Si {
            constructor() {
              super(...arguments), (this.createValidator = (p) => Vt);
            }
            static #e = (this.ɵfac = (function () {
              let p;
              return function (R) {
                return (p || (p = l.n5z(h)))(R || h);
              };
            })());
            static #t = (this.ɵdir = l.lG2({
              type: h,
              selectors: [
                [
                  "input",
                  "type",
                  "checkbox",
                  "required",
                  "",
                  "formControlName",
                  "",
                ],
                [
                  "input",
                  "type",
                  "checkbox",
                  "required",
                  "",
                  "formControl",
                  "",
                ],
                ["input", "type", "checkbox", "required", "", "ngModel", ""],
              ],
              hostVars: 1,
              hostBindings: function (T, R) {
                2 & T && l.uIk("required", R._enabled ? "" : null);
              },
              features: [l._Bn([xr]), l.qOj],
            }));
          }
          return h;
        })(),
        w = (() => {
          class h {
            static #e = (this.ɵfac = function (T) {
              return new (T || h)();
            });
            static #t = (this.ɵmod = l.oAB({ type: h }));
            static #n = (this.ɵinj = l.cJS({ imports: [_i] }));
          }
          return h;
        })(),
        G = (() => {
          class h {
            static withConfig(p) {
              return {
                ngModule: h,
                providers: [
                  { provide: Ce, useValue: p.callSetDisabledState ?? se },
                ],
              };
            }
            static #e = (this.ɵfac = function (T) {
              return new (T || h)();
            });
            static #t = (this.ɵmod = l.oAB({ type: h }));
            static #n = (this.ɵinj = l.cJS({ imports: [w] }));
          }
          return h;
        })(),
        k = (() => {
          class h {
            static withConfig(p) {
              return {
                ngModule: h,
                providers: [
                  {
                    provide: xn,
                    useValue: p.warnOnNgModelWithFormControl ?? "always",
                  },
                  { provide: Ce, useValue: p.callSetDisabledState ?? se },
                ],
              };
            }
            static #e = (this.ɵfac = function (T) {
              return new (T || h)();
            });
            static #t = (this.ɵmod = l.oAB({ type: h }));
            static #n = (this.ɵinj = l.cJS({ imports: [w] }));
          }
          return h;
        })();
    },
    6593: (Lt, Fe, N) => {
      N.d(Fe, {
        Dx: () => Kn,
        H7: () => Yr,
        b2: () => He,
        q6: () => Kt,
        se: () => me,
      });
      var l = N(4769),
        L = N(6814);
      class B extends L.w_ {
        constructor() {
          super(...arguments), (this.supportsDOMEvents = !0);
        }
      }
      class Me extends B {
        static makeCurrent() {
          (0, L.HT)(new Me());
        }
        onAndCancel(ae, W, ee) {
          return (
            ae.addEventListener(W, ee),
            () => {
              ae.removeEventListener(W, ee);
            }
          );
        }
        dispatchEvent(ae, W) {
          ae.dispatchEvent(W);
        }
        remove(ae) {
          ae.parentNode && ae.parentNode.removeChild(ae);
        }
        createElement(ae, W) {
          return (W = W || this.getDefaultDocument()).createElement(ae);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument("fakeTitle");
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(ae) {
          return ae.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(ae) {
          return ae instanceof DocumentFragment;
        }
        getGlobalEventTarget(ae, W) {
          return "window" === W
            ? window
            : "document" === W
            ? ae
            : "body" === W
            ? ae.body
            : null;
        }
        getBaseHref(ae) {
          const W = (function we() {
            return (
              (_e = _e || document.querySelector("base")),
              _e ? _e.getAttribute("href") : null
            );
          })();
          return null == W
            ? null
            : (function Re(Q) {
                (Ie = Ie || document.createElement("a")),
                  Ie.setAttribute("href", Q);
                const ae = Ie.pathname;
                return "/" === ae.charAt(0) ? ae : `/${ae}`;
              })(W);
        }
        resetBaseElement() {
          _e = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        getCookie(ae) {
          return (0, L.Mx)(document.cookie, ae);
        }
      }
      let Ie,
        _e = null,
        oe = (() => {
          class Q {
            build() {
              return new XMLHttpRequest();
            }
            static #e = (this.ɵfac = function (ee) {
              return new (ee || Q)();
            });
            static #t = (this.ɵprov = l.Yz7({ token: Q, factory: Q.ɵfac }));
          }
          return Q;
        })();
      const ge = new l.OlP("EventManagerPlugins");
      let Be = (() => {
        class Q {
          constructor(W, ee) {
            (this._zone = ee),
              (this._eventNameToPlugin = new Map()),
              W.forEach((Ee) => {
                Ee.manager = this;
              }),
              (this._plugins = W.slice().reverse());
          }
          addEventListener(W, ee, Ee) {
            return this._findPluginFor(ee).addEventListener(W, ee, Ee);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(W) {
            let ee = this._eventNameToPlugin.get(W);
            if (ee) return ee;
            if (((ee = this._plugins.find((Xe) => Xe.supports(W))), !ee))
              throw new l.vHH(5101, !1);
            return this._eventNameToPlugin.set(W, ee), ee;
          }
          static #e = (this.ɵfac = function (ee) {
            return new (ee || Q)(l.LFG(ge), l.LFG(l.R0b));
          });
          static #t = (this.ɵprov = l.Yz7({ token: Q, factory: Q.ɵfac }));
        }
        return Q;
      })();
      class et {
        constructor(ae) {
          this._doc = ae;
        }
      }
      const Ye = "ng-app-id";
      let ot = (() => {
        class Q {
          constructor(W, ee, Ee, Xe = {}) {
            (this.doc = W),
              (this.appId = ee),
              (this.nonce = Ee),
              (this.platformId = Xe),
              (this.styleRef = new Map()),
              (this.hostNodes = new Set()),
              (this.styleNodesInDOM = this.collectServerRenderedStyles()),
              (this.platformIsServer = (0, L.PM)(Xe)),
              this.resetHostNodes();
          }
          addStyles(W) {
            for (const ee of W)
              1 === this.changeUsageCount(ee, 1) && this.onStyleAdded(ee);
          }
          removeStyles(W) {
            for (const ee of W)
              this.changeUsageCount(ee, -1) <= 0 && this.onStyleRemoved(ee);
          }
          ngOnDestroy() {
            const W = this.styleNodesInDOM;
            W && (W.forEach((ee) => ee.remove()), W.clear());
            for (const ee of this.getAllStyles()) this.onStyleRemoved(ee);
            this.resetHostNodes();
          }
          addHost(W) {
            this.hostNodes.add(W);
            for (const ee of this.getAllStyles()) this.addStyleToHost(W, ee);
          }
          removeHost(W) {
            this.hostNodes.delete(W);
          }
          getAllStyles() {
            return this.styleRef.keys();
          }
          onStyleAdded(W) {
            for (const ee of this.hostNodes) this.addStyleToHost(ee, W);
          }
          onStyleRemoved(W) {
            const ee = this.styleRef;
            ee.get(W)?.elements?.forEach((Ee) => Ee.remove()), ee.delete(W);
          }
          collectServerRenderedStyles() {
            const W = this.doc.head?.querySelectorAll(
              `style[${Ye}="${this.appId}"]`
            );
            if (W?.length) {
              const ee = new Map();
              return (
                W.forEach((Ee) => {
                  null != Ee.textContent && ee.set(Ee.textContent, Ee);
                }),
                ee
              );
            }
            return null;
          }
          changeUsageCount(W, ee) {
            const Ee = this.styleRef;
            if (Ee.has(W)) {
              const Xe = Ee.get(W);
              return (Xe.usage += ee), Xe.usage;
            }
            return Ee.set(W, { usage: ee, elements: [] }), ee;
          }
          getStyleElement(W, ee) {
            const Ee = this.styleNodesInDOM,
              Xe = Ee?.get(ee);
            if (Xe?.parentNode === W)
              return Ee.delete(ee), Xe.removeAttribute(Ye), Xe;
            {
              const vt = this.doc.createElement("style");
              return (
                this.nonce && vt.setAttribute("nonce", this.nonce),
                (vt.textContent = ee),
                this.platformIsServer && vt.setAttribute(Ye, this.appId),
                vt
              );
            }
          }
          addStyleToHost(W, ee) {
            const Ee = this.getStyleElement(W, ee);
            W.appendChild(Ee);
            const Xe = this.styleRef,
              vt = Xe.get(ee)?.elements;
            vt ? vt.push(Ee) : Xe.set(ee, { elements: [Ee], usage: 1 });
          }
          resetHostNodes() {
            const W = this.hostNodes;
            W.clear(), W.add(this.doc.head);
          }
          static #e = (this.ɵfac = function (ee) {
            return new (ee || Q)(
              l.LFG(L.K0),
              l.LFG(l.AFp),
              l.LFG(l.Ojb, 8),
              l.LFG(l.Lbi)
            );
          });
          static #t = (this.ɵprov = l.Yz7({ token: Q, factory: Q.ɵfac }));
        }
        return Q;
      })();
      const pt = {
          svg: "http://www.w3.org/2000/svg",
          xhtml: "http://www.w3.org/1999/xhtml",
          xlink: "http://www.w3.org/1999/xlink",
          xml: "http://www.w3.org/XML/1998/namespace",
          xmlns: "http://www.w3.org/2000/xmlns/",
          math: "http://www.w3.org/1998/MathML/",
        },
        Ue = /%COMP%/g,
        Se = new l.OlP("RemoveStylesOnCompDestroy", {
          providedIn: "root",
          factory: () => !1,
        });
      function ye(Q, ae) {
        return ae.map((W) => W.replace(Ue, Q));
      }
      let me = (() => {
        class Q {
          constructor(W, ee, Ee, Xe, vt, Nt, nn, fn = null) {
            (this.eventManager = W),
              (this.sharedStylesHost = ee),
              (this.appId = Ee),
              (this.removeStylesOnCompDestroy = Xe),
              (this.doc = vt),
              (this.platformId = Nt),
              (this.ngZone = nn),
              (this.nonce = fn),
              (this.rendererByCompId = new Map()),
              (this.platformIsServer = (0, L.PM)(Nt)),
              (this.defaultRenderer = new dt(W, vt, nn, this.platformIsServer));
          }
          createRenderer(W, ee) {
            if (!W || !ee) return this.defaultRenderer;
            this.platformIsServer &&
              ee.encapsulation === l.ifc.ShadowDom &&
              (ee = { ...ee, encapsulation: l.ifc.Emulated });
            const Ee = this.getOrCreateRenderer(W, ee);
            return (
              Ee instanceof qt
                ? Ee.applyToHost(W)
                : Ee instanceof In && Ee.applyStyles(),
              Ee
            );
          }
          getOrCreateRenderer(W, ee) {
            const Ee = this.rendererByCompId;
            let Xe = Ee.get(ee.id);
            if (!Xe) {
              const vt = this.doc,
                Nt = this.ngZone,
                nn = this.eventManager,
                fn = this.sharedStylesHost,
                En = this.removeStylesOnCompDestroy,
                Dn = this.platformIsServer;
              switch (ee.encapsulation) {
                case l.ifc.Emulated:
                  Xe = new qt(nn, fn, ee, this.appId, En, vt, Nt, Dn);
                  break;
                case l.ifc.ShadowDom:
                  return new Vt(nn, fn, W, ee, vt, Nt, this.nonce, Dn);
                default:
                  Xe = new In(nn, fn, ee, En, vt, Nt, Dn);
              }
              Ee.set(ee.id, Xe);
            }
            return Xe;
          }
          ngOnDestroy() {
            this.rendererByCompId.clear();
          }
          static #e = (this.ɵfac = function (ee) {
            return new (ee || Q)(
              l.LFG(Be),
              l.LFG(ot),
              l.LFG(l.AFp),
              l.LFG(Se),
              l.LFG(L.K0),
              l.LFG(l.Lbi),
              l.LFG(l.R0b),
              l.LFG(l.Ojb)
            );
          });
          static #t = (this.ɵprov = l.Yz7({ token: Q, factory: Q.ɵfac }));
        }
        return Q;
      })();
      class dt {
        constructor(ae, W, ee, Ee) {
          (this.eventManager = ae),
            (this.doc = W),
            (this.ngZone = ee),
            (this.platformIsServer = Ee),
            (this.data = Object.create(null)),
            (this.destroyNode = null);
        }
        destroy() {}
        createElement(ae, W) {
          return W
            ? this.doc.createElementNS(pt[W] || W, ae)
            : this.doc.createElement(ae);
        }
        createComment(ae) {
          return this.doc.createComment(ae);
        }
        createText(ae) {
          return this.doc.createTextNode(ae);
        }
        appendChild(ae, W) {
          (At(ae) ? ae.content : ae).appendChild(W);
        }
        insertBefore(ae, W, ee) {
          ae && (At(ae) ? ae.content : ae).insertBefore(W, ee);
        }
        removeChild(ae, W) {
          ae && ae.removeChild(W);
        }
        selectRootElement(ae, W) {
          let ee = "string" == typeof ae ? this.doc.querySelector(ae) : ae;
          if (!ee) throw new l.vHH(-5104, !1);
          return W || (ee.textContent = ""), ee;
        }
        parentNode(ae) {
          return ae.parentNode;
        }
        nextSibling(ae) {
          return ae.nextSibling;
        }
        setAttribute(ae, W, ee, Ee) {
          if (Ee) {
            W = Ee + ":" + W;
            const Xe = pt[Ee];
            Xe ? ae.setAttributeNS(Xe, W, ee) : ae.setAttribute(W, ee);
          } else ae.setAttribute(W, ee);
        }
        removeAttribute(ae, W, ee) {
          if (ee) {
            const Ee = pt[ee];
            Ee ? ae.removeAttributeNS(Ee, W) : ae.removeAttribute(`${ee}:${W}`);
          } else ae.removeAttribute(W);
        }
        addClass(ae, W) {
          ae.classList.add(W);
        }
        removeClass(ae, W) {
          ae.classList.remove(W);
        }
        setStyle(ae, W, ee, Ee) {
          Ee & (l.JOm.DashCase | l.JOm.Important)
            ? ae.style.setProperty(
                W,
                ee,
                Ee & l.JOm.Important ? "important" : ""
              )
            : (ae.style[W] = ee);
        }
        removeStyle(ae, W, ee) {
          ee & l.JOm.DashCase ? ae.style.removeProperty(W) : (ae.style[W] = "");
        }
        setProperty(ae, W, ee) {
          ae[W] = ee;
        }
        setValue(ae, W) {
          ae.nodeValue = W;
        }
        listen(ae, W, ee) {
          if (
            "string" == typeof ae &&
            !(ae = (0, L.q)().getGlobalEventTarget(this.doc, ae))
          )
            throw new Error(`Unsupported event target ${ae} for event ${W}`);
          return this.eventManager.addEventListener(
            ae,
            W,
            this.decoratePreventDefault(ee)
          );
        }
        decoratePreventDefault(ae) {
          return (W) => {
            if ("__ngUnwrap__" === W) return ae;
            !1 ===
              (this.platformIsServer
                ? this.ngZone.runGuarded(() => ae(W))
                : ae(W)) && W.preventDefault();
          };
        }
      }
      function At(Q) {
        return "TEMPLATE" === Q.tagName && void 0 !== Q.content;
      }
      class Vt extends dt {
        constructor(ae, W, ee, Ee, Xe, vt, Nt, nn) {
          super(ae, Xe, vt, nn),
            (this.sharedStylesHost = W),
            (this.hostEl = ee),
            (this.shadowRoot = ee.attachShadow({ mode: "open" })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const fn = ye(Ee.id, Ee.styles);
          for (const En of fn) {
            const Dn = document.createElement("style");
            Nt && Dn.setAttribute("nonce", Nt),
              (Dn.textContent = En),
              this.shadowRoot.appendChild(Dn);
          }
        }
        nodeOrShadowRoot(ae) {
          return ae === this.hostEl ? this.shadowRoot : ae;
        }
        appendChild(ae, W) {
          return super.appendChild(this.nodeOrShadowRoot(ae), W);
        }
        insertBefore(ae, W, ee) {
          return super.insertBefore(this.nodeOrShadowRoot(ae), W, ee);
        }
        removeChild(ae, W) {
          return super.removeChild(this.nodeOrShadowRoot(ae), W);
        }
        parentNode(ae) {
          return this.nodeOrShadowRoot(
            super.parentNode(this.nodeOrShadowRoot(ae))
          );
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
      }
      class In extends dt {
        constructor(ae, W, ee, Ee, Xe, vt, Nt, nn) {
          super(ae, Xe, vt, Nt),
            (this.sharedStylesHost = W),
            (this.removeStylesOnCompDestroy = Ee),
            (this.styles = nn ? ye(nn, ee.styles) : ee.styles);
        }
        applyStyles() {
          this.sharedStylesHost.addStyles(this.styles);
        }
        destroy() {
          this.removeStylesOnCompDestroy &&
            this.sharedStylesHost.removeStyles(this.styles);
        }
      }
      class qt extends In {
        constructor(ae, W, ee, Ee, Xe, vt, Nt, nn) {
          const fn = Ee + "-" + ee.id;
          super(ae, W, ee, Xe, vt, Nt, nn, fn),
            (this.contentAttr = (function J(Q) {
              return "_ngcontent-%COMP%".replace(Ue, Q);
            })(fn)),
            (this.hostAttr = (function De(Q) {
              return "_nghost-%COMP%".replace(Ue, Q);
            })(fn));
        }
        applyToHost(ae) {
          this.applyStyles(), this.setAttribute(ae, this.hostAttr, "");
        }
        createElement(ae, W) {
          const ee = super.createElement(ae, W);
          return super.setAttribute(ee, this.contentAttr, ""), ee;
        }
      }
      let Ot = (() => {
        class Q extends et {
          constructor(W) {
            super(W);
          }
          supports(W) {
            return !0;
          }
          addEventListener(W, ee, Ee) {
            return (
              W.addEventListener(ee, Ee, !1),
              () => this.removeEventListener(W, ee, Ee)
            );
          }
          removeEventListener(W, ee, Ee) {
            return W.removeEventListener(ee, Ee);
          }
          static #e = (this.ɵfac = function (ee) {
            return new (ee || Q)(l.LFG(L.K0));
          });
          static #t = (this.ɵprov = l.Yz7({ token: Q, factory: Q.ɵfac }));
        }
        return Q;
      })();
      const qe = ["alt", "control", "meta", "shift"],
        re = {
          "\b": "Backspace",
          "\t": "Tab",
          "\x7f": "Delete",
          "\x1b": "Escape",
          Del: "Delete",
          Esc: "Escape",
          Left: "ArrowLeft",
          Right: "ArrowRight",
          Up: "ArrowUp",
          Down: "ArrowDown",
          Menu: "ContextMenu",
          Scroll: "ScrollLock",
          Win: "OS",
        },
        ue = {
          alt: (Q) => Q.altKey,
          control: (Q) => Q.ctrlKey,
          meta: (Q) => Q.metaKey,
          shift: (Q) => Q.shiftKey,
        };
      let Oe = (() => {
        class Q extends et {
          constructor(W) {
            super(W);
          }
          supports(W) {
            return null != Q.parseEventName(W);
          }
          addEventListener(W, ee, Ee) {
            const Xe = Q.parseEventName(ee),
              vt = Q.eventCallback(Xe.fullKey, Ee, this.manager.getZone());
            return this.manager
              .getZone()
              .runOutsideAngular(() =>
                (0, L.q)().onAndCancel(W, Xe.domEventName, vt)
              );
          }
          static parseEventName(W) {
            const ee = W.toLowerCase().split("."),
              Ee = ee.shift();
            if (0 === ee.length || ("keydown" !== Ee && "keyup" !== Ee))
              return null;
            const Xe = Q._normalizeKey(ee.pop());
            let vt = "",
              Nt = ee.indexOf("code");
            if (
              (Nt > -1 && (ee.splice(Nt, 1), (vt = "code.")),
              qe.forEach((fn) => {
                const En = ee.indexOf(fn);
                En > -1 && (ee.splice(En, 1), (vt += fn + "."));
              }),
              (vt += Xe),
              0 != ee.length || 0 === Xe.length)
            )
              return null;
            const nn = {};
            return (nn.domEventName = Ee), (nn.fullKey = vt), nn;
          }
          static matchEventFullKeyCode(W, ee) {
            let Ee = re[W.key] || W.key,
              Xe = "";
            return (
              ee.indexOf("code.") > -1 && ((Ee = W.code), (Xe = "code.")),
              !(null == Ee || !Ee) &&
                ((Ee = Ee.toLowerCase()),
                " " === Ee ? (Ee = "space") : "." === Ee && (Ee = "dot"),
                qe.forEach((vt) => {
                  vt !== Ee && (0, ue[vt])(W) && (Xe += vt + ".");
                }),
                (Xe += Ee),
                Xe === ee)
            );
          }
          static eventCallback(W, ee, Ee) {
            return (Xe) => {
              Q.matchEventFullKeyCode(Xe, W) && Ee.runGuarded(() => ee(Xe));
            };
          }
          static _normalizeKey(W) {
            return "esc" === W ? "escape" : W;
          }
          static #e = (this.ɵfac = function (ee) {
            return new (ee || Q)(l.LFG(L.K0));
          });
          static #t = (this.ɵprov = l.Yz7({ token: Q, factory: Q.ɵfac }));
        }
        return Q;
      })();
      const Kt = (0, l.eFA)(l._c5, "browser", [
          { provide: l.Lbi, useValue: L.bD },
          {
            provide: l.g9A,
            useValue: function an() {
              Me.makeCurrent();
            },
            multi: !0,
          },
          {
            provide: L.K0,
            useFactory: function Pt() {
              return (0, l.RDi)(document), document;
            },
            deps: [],
          },
        ]),
        Ge = new l.OlP(""),
        Qe = [
          {
            provide: l.rWj,
            useClass: class xe {
              addToWindow(ae) {
                (l.dqk.getAngularTestability = (ee, Ee = !0) => {
                  const Xe = ae.findTestabilityInTree(ee, Ee);
                  if (null == Xe) throw new l.vHH(5103, !1);
                  return Xe;
                }),
                  (l.dqk.getAllAngularTestabilities = () =>
                    ae.getAllTestabilities()),
                  (l.dqk.getAllAngularRootElements = () =>
                    ae.getAllRootElements()),
                  l.dqk.frameworkStabilizers ||
                    (l.dqk.frameworkStabilizers = []),
                  l.dqk.frameworkStabilizers.push((ee) => {
                    const Ee = l.dqk.getAllAngularTestabilities();
                    let Xe = Ee.length,
                      vt = !1;
                    const Nt = function (nn) {
                      (vt = vt || nn), Xe--, 0 == Xe && ee(vt);
                    };
                    Ee.forEach((nn) => {
                      nn.whenStable(Nt);
                    });
                  });
              }
              findTestabilityInTree(ae, W, ee) {
                return null == W
                  ? null
                  : ae.getTestability(W) ??
                      (ee
                        ? (0, L.q)().isShadowRoot(W)
                          ? this.findTestabilityInTree(ae, W.host, !0)
                          : this.findTestabilityInTree(ae, W.parentElement, !0)
                        : null);
              }
            },
            deps: [],
          },
          { provide: l.lri, useClass: l.dDg, deps: [l.R0b, l.eoX, l.rWj] },
          { provide: l.dDg, useClass: l.dDg, deps: [l.R0b, l.eoX, l.rWj] },
        ],
        ce = [
          { provide: l.zSh, useValue: "root" },
          {
            provide: l.qLn,
            useFactory: function Tn() {
              return new l.qLn();
            },
            deps: [],
          },
          { provide: ge, useClass: Ot, multi: !0, deps: [L.K0, l.R0b, l.Lbi] },
          { provide: ge, useClass: Oe, multi: !0, deps: [L.K0] },
          me,
          ot,
          Be,
          { provide: l.FYo, useExisting: me },
          { provide: L.JF, useClass: oe, deps: [] },
          [],
        ];
      let He = (() => {
          class Q {
            constructor(W) {}
            static withServerTransition(W) {
              return {
                ngModule: Q,
                providers: [{ provide: l.AFp, useValue: W.appId }],
              };
            }
            static #e = (this.ɵfac = function (ee) {
              return new (ee || Q)(l.LFG(Ge, 12));
            });
            static #t = (this.ɵmod = l.oAB({ type: Q }));
            static #n = (this.ɵinj = l.cJS({
              providers: [...ce, ...Qe],
              imports: [L.ez, l.hGG],
            }));
          }
          return Q;
        })(),
        Kn = (() => {
          class Q {
            constructor(W) {
              this._doc = W;
            }
            getTitle() {
              return this._doc.title;
            }
            setTitle(W) {
              this._doc.title = W || "";
            }
            static #e = (this.ɵfac = function (ee) {
              return new (ee || Q)(l.LFG(L.K0));
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Q,
              factory: function (ee) {
                let Ee = null;
                return (
                  (Ee = ee
                    ? new ee()
                    : (function $t() {
                        return new Kn((0, l.LFG)(L.K0));
                      })()),
                  Ee
                );
              },
              providedIn: "root",
            }));
          }
          return Q;
        })();
      typeof window < "u" && window;
      let Yr = (() => {
          class Q {
            static #e = (this.ɵfac = function (ee) {
              return new (ee || Q)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Q,
              factory: function (ee) {
                let Ee = null;
                return (Ee = ee ? new (ee || Q)() : l.LFG(rn)), Ee;
              },
              providedIn: "root",
            }));
          }
          return Q;
        })(),
        rn = (() => {
          class Q extends Yr {
            constructor(W) {
              super(), (this._doc = W);
            }
            sanitize(W, ee) {
              if (null == ee) return null;
              switch (W) {
                case l.q3G.NONE:
                  return ee;
                case l.q3G.HTML:
                  return (0, l.qzn)(ee, "HTML")
                    ? (0, l.z3N)(ee)
                    : (0, l.EiD)(this._doc, String(ee)).toString();
                case l.q3G.STYLE:
                  return (0, l.qzn)(ee, "Style") ? (0, l.z3N)(ee) : ee;
                case l.q3G.SCRIPT:
                  if ((0, l.qzn)(ee, "Script")) return (0, l.z3N)(ee);
                  throw new l.vHH(5200, !1);
                case l.q3G.URL:
                  return (0, l.qzn)(ee, "URL")
                    ? (0, l.z3N)(ee)
                    : (0, l.mCW)(String(ee));
                case l.q3G.RESOURCE_URL:
                  if ((0, l.qzn)(ee, "ResourceURL")) return (0, l.z3N)(ee);
                  throw new l.vHH(5201, !1);
                default:
                  throw new l.vHH(5202, !1);
              }
            }
            bypassSecurityTrustHtml(W) {
              return (0, l.JVY)(W);
            }
            bypassSecurityTrustStyle(W) {
              return (0, l.L6k)(W);
            }
            bypassSecurityTrustScript(W) {
              return (0, l.eBb)(W);
            }
            bypassSecurityTrustUrl(W) {
              return (0, l.LAX)(W);
            }
            bypassSecurityTrustResourceUrl(W) {
              return (0, l.pB0)(W);
            }
            static #e = (this.ɵfac = function (ee) {
              return new (ee || Q)(l.LFG(L.K0));
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Q,
              factory: function (ee) {
                let Ee = null;
                return (
                  (Ee = ee
                    ? new ee()
                    : (function wr(Q) {
                        return new rn(Q.get(L.K0));
                      })(l.LFG(l.zs3))),
                  Ee
                );
              },
              providedIn: "root",
            }));
          }
          return Q;
        })();
    },
    7553: (Lt, Fe, N) => {
      N.d(Fe, {
        gz: () => Cn,
        m2: () => wi,
        F0: () => Yt,
        rH: () => hr,
        Bz: () => qo,
        lC: () => Kr,
      });
      var l = N(4769),
        L = N(5592),
        B = N(4674),
        _e = N(7715),
        we = N(2096),
        Ie = N(5619),
        Re = N(7453),
        xe = N(2737),
        oe = N(7400),
        ge = N(4564),
        Be = N(2714),
        et = N(8251),
        Ye = N(7103);
      function ot(...v) {
        const D = (0, ge.yG)(v),
          m = (0, ge.jO)(v),
          { args: S, keys: x } = (0, Re.D)(v);
        if (0 === S.length) return (0, _e.D)([], D);
        const $ = new L.y(
          (function pt(v, D, m = xe.y) {
            return (S) => {
              Ue(
                D,
                () => {
                  const { length: x } = v,
                    $ = new Array(x);
                  let ie = x,
                    Ve = x;
                  for (let Ae = 0; Ae < x; Ae++)
                    Ue(
                      D,
                      () => {
                        const Tt = (0, _e.D)(v[Ae], D);
                        let hn = !1;
                        Tt.subscribe(
                          (0, et.x)(
                            S,
                            (ir) => {
                              ($[Ae] = ir),
                                hn || ((hn = !0), Ve--),
                                Ve || S.next(m($.slice()));
                            },
                            () => {
                              --ie || S.complete();
                            }
                          )
                        );
                      },
                      S
                    );
                },
                S
              );
            };
          })(S, D, x ? (ie) => (0, Be.n)(x, ie) : xe.y)
        );
        return m ? $.pipe((0, oe.Z)(m)) : $;
      }
      function Ue(v, D, m) {
        v ? (0, Ye.f)(m, v, D) : D();
      }
      const It = (0, N(2306).d)(
        (v) =>
          function () {
            v(this),
              (this.name = "EmptyError"),
              (this.message = "no elements in sequence");
          }
      );
      var $e = N(7537);
      function Se(...v) {
        return (function K() {
          return (0, $e.J)(1);
        })()((0, _e.D)(v, (0, ge.yG)(v)));
      }
      var J = N(4829);
      function De(v) {
        return new L.y((D) => {
          (0, J.Xf)(v()).subscribe(D);
        });
      }
      var ye = N(8407),
        me = N(8504),
        dt = N(6232),
        Ne = N(7394),
        Mt = N(9360);
      function At() {
        return (0, Mt.e)((v, D) => {
          let m = null;
          v._refCount++;
          const S = (0, et.x)(D, void 0, void 0, void 0, () => {
            if (!v || v._refCount <= 0 || 0 < --v._refCount)
              return void (m = null);
            const x = v._connection,
              $ = m;
            (m = null),
              x && (!$ || x === $) && x.unsubscribe(),
              D.unsubscribe();
          });
          v.subscribe(S), S.closed || (m = v.connect());
        });
      }
      class Vt extends L.y {
        constructor(D, m) {
          super(),
            (this.source = D),
            (this.subjectFactory = m),
            (this._subject = null),
            (this._refCount = 0),
            (this._connection = null),
            (0, Mt.A)(D) && (this.lift = D.lift);
        }
        _subscribe(D) {
          return this.getSubject().subscribe(D);
        }
        getSubject() {
          const D = this._subject;
          return (
            (!D || D.isStopped) && (this._subject = this.subjectFactory()),
            this._subject
          );
        }
        _teardown() {
          this._refCount = 0;
          const { _connection: D } = this;
          (this._subject = this._connection = null), D?.unsubscribe();
        }
        connect() {
          let D = this._connection;
          if (!D) {
            D = this._connection = new Ne.w0();
            const m = this.getSubject();
            D.add(
              this.source.subscribe(
                (0, et.x)(
                  m,
                  void 0,
                  () => {
                    this._teardown(), m.complete();
                  },
                  (S) => {
                    this._teardown(), m.error(S);
                  },
                  () => this._teardown()
                )
              )
            ),
              D.closed && ((this._connection = null), (D = Ne.w0.EMPTY));
          }
          return D;
        }
        refCount() {
          return At()(this);
        }
      }
      var In = N(8645),
        qt = N(6814),
        Ot = N(7398),
        qe = N(4664),
        re = N(8180),
        Oe = N(2181),
        Pe = N(1631);
      function tt(v) {
        return (0, Mt.e)((D, m) => {
          let S = !1;
          D.subscribe(
            (0, et.x)(
              m,
              (x) => {
                (S = !0), m.next(x);
              },
              () => {
                S || m.next(v), m.complete();
              }
            )
          );
        });
      }
      function lt(v = Bt) {
        return (0, Mt.e)((D, m) => {
          let S = !1;
          D.subscribe(
            (0, et.x)(
              m,
              (x) => {
                (S = !0), m.next(x);
              },
              () => (S ? m.complete() : m.error(v()))
            )
          );
        });
      }
      function Bt() {
        return new It();
      }
      function an(v, D) {
        const m = arguments.length >= 2;
        return (S) =>
          S.pipe(
            v ? (0, Oe.h)((x, $) => v(x, $, S)) : xe.y,
            (0, re.q)(1),
            m ? tt(D) : lt(() => new It())
          );
      }
      var Tn = N(6328);
      function Pt(v, D, m) {
        const S =
          (0, B.m)(v) || D || m ? { next: v, error: D, complete: m } : v;
        return S
          ? (0, Mt.e)((x, $) => {
              var ie;
              null === (ie = S.subscribe) || void 0 === ie || ie.call(S);
              let Ve = !0;
              x.subscribe(
                (0, et.x)(
                  $,
                  (Ae) => {
                    var Tt;
                    null === (Tt = S.next) || void 0 === Tt || Tt.call(S, Ae),
                      $.next(Ae);
                  },
                  () => {
                    var Ae;
                    (Ve = !1),
                      null === (Ae = S.complete) || void 0 === Ae || Ae.call(S),
                      $.complete();
                  },
                  (Ae) => {
                    var Tt;
                    (Ve = !1),
                      null === (Tt = S.error) ||
                        void 0 === Tt ||
                        Tt.call(S, Ae),
                      $.error(Ae);
                  },
                  () => {
                    var Ae, Tt;
                    Ve &&
                      (null === (Ae = S.unsubscribe) ||
                        void 0 === Ae ||
                        Ae.call(S)),
                      null === (Tt = S.finalize) || void 0 === Tt || Tt.call(S);
                  }
                )
              );
            })
          : xe.y;
      }
      var ln = N(6306);
      function Qe(v) {
        return v <= 0
          ? () => dt.E
          : (0, Mt.e)((D, m) => {
              let S = [];
              D.subscribe(
                (0, et.x)(
                  m,
                  (x) => {
                    S.push(x), v < S.length && S.shift();
                  },
                  () => {
                    for (const x of S) m.next(x);
                    m.complete();
                  },
                  void 0,
                  () => {
                    S = null;
                  }
                )
              );
            });
      }
      var Ct = N(4716),
        mn = N(9773),
        cn = N(6593);
      const $t = "primary",
        Kn = Symbol("RouteTitle");
      class Er {
        constructor(D) {
          this.params = D || {};
        }
        has(D) {
          return Object.prototype.hasOwnProperty.call(this.params, D);
        }
        get(D) {
          if (this.has(D)) {
            const m = this.params[D];
            return Array.isArray(m) ? m[0] : m;
          }
          return null;
        }
        getAll(D) {
          if (this.has(D)) {
            const m = this.params[D];
            return Array.isArray(m) ? m : [m];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function pr(v) {
        return new Er(v);
      }
      function ar(v, D, m) {
        const S = m.path.split("/");
        if (
          S.length > v.length ||
          ("full" === m.pathMatch && (D.hasChildren() || S.length < v.length))
        )
          return null;
        const x = {};
        for (let $ = 0; $ < S.length; $++) {
          const ie = S[$],
            Ve = v[$];
          if (ie.startsWith(":")) x[ie.substring(1)] = Ve;
          else if (ie !== Ve.path) return null;
        }
        return { consumed: v.slice(0, S.length), posParams: x };
      }
      function zt(v, D) {
        const m = v ? Object.keys(v) : void 0,
          S = D ? Object.keys(D) : void 0;
        if (!m || !S || m.length != S.length) return !1;
        let x;
        for (let $ = 0; $ < m.length; $++)
          if (((x = m[$]), !Rr(v[x], D[x]))) return !1;
        return !0;
      }
      function Rr(v, D) {
        if (Array.isArray(v) && Array.isArray(D)) {
          if (v.length !== D.length) return !1;
          const m = [...v].sort(),
            S = [...D].sort();
          return m.every((x, $) => S[$] === x);
        }
        return v === D;
      }
      function Dr(v) {
        return v.length > 0 ? v[v.length - 1] : null;
      }
      function Bn(v) {
        return (function Me(v) {
          return (
            !!v &&
            (v instanceof L.y || ((0, B.m)(v.lift) && (0, B.m)(v.subscribe)))
          );
        })(v)
          ? v
          : (0, l.QGY)(v)
          ? (0, _e.D)(Promise.resolve(v))
          : (0, we.of)(v);
      }
      const kr = {
          exact: function lr(v, D, m) {
            if (
              !Cr(v.segments, D.segments) ||
              !Yr(v.segments, D.segments, m) ||
              v.numberOfChildren !== D.numberOfChildren
            )
              return !1;
            for (const S in D.children)
              if (!v.children[S] || !lr(v.children[S], D.children[S], m))
                return !1;
            return !0;
          },
          subset: gi,
        },
        Wt = {
          exact: function Vn(v, D) {
            return zt(v, D);
          },
          subset: function _n(v, D) {
            return (
              Object.keys(D).length <= Object.keys(v).length &&
              Object.keys(D).every((m) => Rr(v[m], D[m]))
            );
          },
          ignored: () => !0,
        };
      function Wr(v, D, m) {
        return (
          kr[m.paths](v.root, D.root, m.matrixParams) &&
          Wt[m.queryParams](v.queryParams, D.queryParams) &&
          !("exact" === m.fragment && v.fragment !== D.fragment)
        );
      }
      function gi(v, D, m) {
        return wn(v, D, D.segments, m);
      }
      function wn(v, D, m, S) {
        if (v.segments.length > m.length) {
          const x = v.segments.slice(0, m.length);
          return !(!Cr(x, m) || D.hasChildren() || !Yr(x, m, S));
        }
        if (v.segments.length === m.length) {
          if (!Cr(v.segments, m) || !Yr(v.segments, m, S)) return !1;
          for (const x in D.children)
            if (!v.children[x] || !gi(v.children[x], D.children[x], S))
              return !1;
          return !0;
        }
        {
          const x = m.slice(0, v.segments.length),
            $ = m.slice(v.segments.length);
          return (
            !!(Cr(v.segments, x) && Yr(v.segments, x, S) && v.children[$t]) &&
            wn(v.children[$t], D, $, S)
          );
        }
      }
      function Yr(v, D, m) {
        return D.every((S, x) => Wt[m](v[x].parameters, S.parameters));
      }
      class wr {
        constructor(D = new rn([], {}), m = {}, S = null) {
          (this.root = D), (this.queryParams = m), (this.fragment = S);
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = pr(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return le.serialize(this);
        }
      }
      class rn {
        constructor(D, m) {
          (this.segments = D),
            (this.children = m),
            (this.parent = null),
            Object.values(m).forEach((S) => (S.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return be(this);
        }
      }
      class Yn {
        constructor(D, m) {
          (this.path = D), (this.parameters = m);
        }
        get parameterMap() {
          return (
            this._parameterMap || (this._parameterMap = pr(this.parameters)),
            this._parameterMap
          );
        }
        toString() {
          return Nt(this);
        }
      }
      function Cr(v, D) {
        return v.length === D.length && v.every((m, S) => m.path === D[S].path);
      }
      let ur = (() => {
        class v {
          static #e = (this.ɵfac = function (S) {
            return new (S || v)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: v,
            factory: function () {
              return new z();
            },
            providedIn: "root",
          }));
        }
        return v;
      })();
      class z {
        parse(D) {
          const m = new St(D);
          return new wr(
            m.parseRootSegment(),
            m.parseQueryParams(),
            m.parseFragment()
          );
        }
        serialize(D) {
          const m = `/${Q(D.root, !0)}`,
            S = (function fn(v) {
              const D = Object.keys(v)
                .map((m) => {
                  const S = v[m];
                  return Array.isArray(S)
                    ? S.map((x) => `${W(m)}=${W(x)}`).join("&")
                    : `${W(m)}=${W(S)}`;
                })
                .filter((m) => !!m);
              return D.length ? `?${D.join("&")}` : "";
            })(D.queryParams);
          return `${m}${S}${
            "string" == typeof D.fragment
              ? `#${(function ee(v) {
                  return encodeURI(v);
                })(D.fragment)}`
              : ""
          }`;
        }
      }
      const le = new z();
      function be(v) {
        return v.segments.map((D) => Nt(D)).join("/");
      }
      function Q(v, D) {
        if (!v.hasChildren()) return be(v);
        if (D) {
          const m = v.children[$t] ? Q(v.children[$t], !1) : "",
            S = [];
          return (
            Object.entries(v.children).forEach(([x, $]) => {
              x !== $t && S.push(`${x}:${Q($, !1)}`);
            }),
            S.length > 0 ? `${m}(${S.join("//")})` : m
          );
        }
        {
          const m = (function Tr(v, D) {
            let m = [];
            return (
              Object.entries(v.children).forEach(([S, x]) => {
                S === $t && (m = m.concat(D(x, S)));
              }),
              Object.entries(v.children).forEach(([S, x]) => {
                S !== $t && (m = m.concat(D(x, S)));
              }),
              m
            );
          })(v, (S, x) =>
            x === $t ? [Q(v.children[$t], !1)] : [`${x}:${Q(S, !1)}`]
          );
          return 1 === Object.keys(v.children).length && null != v.children[$t]
            ? `${be(v)}/${m[0]}`
            : `${be(v)}/(${m.join("//")})`;
        }
      }
      function ae(v) {
        return encodeURIComponent(v)
          .replace(/%40/g, "@")
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",");
      }
      function W(v) {
        return ae(v).replace(/%3B/gi, ";");
      }
      function Ee(v) {
        return ae(v)
          .replace(/\(/g, "%28")
          .replace(/\)/g, "%29")
          .replace(/%26/gi, "&");
      }
      function Xe(v) {
        return decodeURIComponent(v);
      }
      function vt(v) {
        return Xe(v.replace(/\+/g, "%20"));
      }
      function Nt(v) {
        return `${Ee(v.path)}${(function nn(v) {
          return Object.keys(v)
            .map((D) => `;${Ee(D)}=${Ee(v[D])}`)
            .join("");
        })(v.parameters)}`;
      }
      const En = /^[^\/()?;#]+/;
      function Dn(v) {
        const D = v.match(En);
        return D ? D[0] : "";
      }
      const Ce = /^[^\/()?;=#]+/,
        he = /^[^=?&#]+/,
        Et = /^[^&#]+/;
      class St {
        constructor(D) {
          (this.url = D), (this.remaining = D);
        }
        parseRootSegment() {
          return (
            this.consumeOptional("/"),
            "" === this.remaining ||
            this.peekStartsWith("?") ||
            this.peekStartsWith("#")
              ? new rn([], {})
              : new rn([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const D = {};
          if (this.consumeOptional("?"))
            do {
              this.parseQueryParam(D);
            } while (this.consumeOptional("&"));
          return D;
        }
        parseFragment() {
          return this.consumeOptional("#")
            ? decodeURIComponent(this.remaining)
            : null;
        }
        parseChildren() {
          if ("" === this.remaining) return {};
          this.consumeOptional("/");
          const D = [];
          for (
            this.peekStartsWith("(") || D.push(this.parseSegment());
            this.peekStartsWith("/") &&
            !this.peekStartsWith("//") &&
            !this.peekStartsWith("/(");

          )
            this.capture("/"), D.push(this.parseSegment());
          let m = {};
          this.peekStartsWith("/(") &&
            (this.capture("/"), (m = this.parseParens(!0)));
          let S = {};
          return (
            this.peekStartsWith("(") && (S = this.parseParens(!1)),
            (D.length > 0 || Object.keys(m).length > 0) &&
              (S[$t] = new rn(D, m)),
            S
          );
        }
        parseSegment() {
          const D = Dn(this.remaining);
          if ("" === D && this.peekStartsWith(";")) throw new l.vHH(4009, !1);
          return this.capture(D), new Yn(Xe(D), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const D = {};
          for (; this.consumeOptional(";"); ) this.parseParam(D);
          return D;
        }
        parseParam(D) {
          const m = (function se(v) {
            const D = v.match(Ce);
            return D ? D[0] : "";
          })(this.remaining);
          if (!m) return;
          this.capture(m);
          let S = "";
          if (this.consumeOptional("=")) {
            const x = Dn(this.remaining);
            x && ((S = x), this.capture(S));
          }
          D[Xe(m)] = Xe(S);
        }
        parseQueryParam(D) {
          const m = (function je(v) {
            const D = v.match(he);
            return D ? D[0] : "";
          })(this.remaining);
          if (!m) return;
          this.capture(m);
          let S = "";
          if (this.consumeOptional("=")) {
            const ie = (function Dt(v) {
              const D = v.match(Et);
              return D ? D[0] : "";
            })(this.remaining);
            ie && ((S = ie), this.capture(S));
          }
          const x = vt(m),
            $ = vt(S);
          if (D.hasOwnProperty(x)) {
            let ie = D[x];
            Array.isArray(ie) || ((ie = [ie]), (D[x] = ie)), ie.push($);
          } else D[x] = $;
        }
        parseParens(D) {
          const m = {};
          for (
            this.capture("(");
            !this.consumeOptional(")") && this.remaining.length > 0;

          ) {
            const S = Dn(this.remaining),
              x = this.remaining[S.length];
            if ("/" !== x && ")" !== x && ";" !== x) throw new l.vHH(4010, !1);
            let $;
            S.indexOf(":") > -1
              ? (($ = S.slice(0, S.indexOf(":"))),
                this.capture($),
                this.capture(":"))
              : D && ($ = $t);
            const ie = this.parseChildren();
            (m[$] = 1 === Object.keys(ie).length ? ie[$t] : new rn([], ie)),
              this.consumeOptional("//");
          }
          return m;
        }
        peekStartsWith(D) {
          return this.remaining.startsWith(D);
        }
        consumeOptional(D) {
          return (
            !!this.peekStartsWith(D) &&
            ((this.remaining = this.remaining.substring(D.length)), !0)
          );
        }
        capture(D) {
          if (!this.consumeOptional(D)) throw new l.vHH(4011, !1);
        }
      }
      function On(v) {
        return v.segments.length > 0 ? new rn([], { [$t]: v }) : v;
      }
      function en(v) {
        const D = {};
        for (const S of Object.keys(v.children)) {
          const $ = en(v.children[S]);
          if (S === $t && 0 === $.segments.length && $.hasChildren())
            for (const [ie, Ve] of Object.entries($.children)) D[ie] = Ve;
          else ($.segments.length > 0 || $.hasChildren()) && (D[S] = $);
        }
        return (function sr(v) {
          if (1 === v.numberOfChildren && v.children[$t]) {
            const D = v.children[$t];
            return new rn(v.segments.concat(D.segments), D.children);
          }
          return v;
        })(new rn(v.segments, D));
      }
      function Ln(v) {
        return v instanceof wr;
      }
      function er(v) {
        let D;
        const x = On(
          (function m($) {
            const ie = {};
            for (const Ae of $.children) {
              const Tt = m(Ae);
              ie[Ae.outlet] = Tt;
            }
            const Ve = new rn($.url, ie);
            return $ === v && (D = Ve), Ve;
          })(v.root)
        );
        return D ?? x;
      }
      function jn(v, D, m, S) {
        let x = v;
        for (; x.parent; ) x = x.parent;
        if (0 === D.length) return Mn(x, x, x, m, S);
        const $ = (function zn(v) {
          if ("string" == typeof v[0] && 1 === v.length && "/" === v[0])
            return new qr(!0, 0, v);
          let D = 0,
            m = !1;
          const S = v.reduce((x, $, ie) => {
            if ("object" == typeof $ && null != $) {
              if ($.outlets) {
                const Ve = {};
                return (
                  Object.entries($.outlets).forEach(([Ae, Tt]) => {
                    Ve[Ae] = "string" == typeof Tt ? Tt.split("/") : Tt;
                  }),
                  [...x, { outlets: Ve }]
                );
              }
              if ($.segmentPath) return [...x, $.segmentPath];
            }
            return "string" != typeof $
              ? [...x, $]
              : 0 === ie
              ? ($.split("/").forEach((Ve, Ae) => {
                  (0 == Ae && "." === Ve) ||
                    (0 == Ae && "" === Ve
                      ? (m = !0)
                      : ".." === Ve
                      ? D++
                      : "" != Ve && x.push(Ve));
                }),
                x)
              : [...x, $];
          }, []);
          return new qr(m, D, S);
        })(D);
        if ($.toRoot()) return Mn(x, x, new rn([], {}), m, S);
        const ie = (function fi(v, D, m) {
            if (v.isAbsolute) return new qn(D, !0, 0);
            if (!m) return new qn(D, !1, NaN);
            if (null === m.parent) return new qn(m, !0, 0);
            const S = Xt(v.commands[0]) ? 0 : 1;
            return (function mi(v, D, m) {
              let S = v,
                x = D,
                $ = m;
              for (; $ > x; ) {
                if ((($ -= x), (S = S.parent), !S)) throw new l.vHH(4005, !1);
                x = S.segments.length;
              }
              return new qn(S, !1, x - $);
            })(m, m.segments.length - 1 + S, v.numberOfDoubleDots);
          })($, x, v),
          Ve = ie.processChildren
            ? yi(ie.segmentGroup, ie.index, $.commands)
            : Mr(ie.segmentGroup, ie.index, $.commands);
        return Mn(x, ie.segmentGroup, Ve, m, S);
      }
      function Xt(v) {
        return (
          "object" == typeof v && null != v && !v.outlets && !v.segmentPath
        );
      }
      function pn(v) {
        return "object" == typeof v && null != v && v.outlets;
      }
      function Mn(v, D, m, S, x) {
        let ie,
          $ = {};
        S &&
          Object.entries(S).forEach(([Ae, Tt]) => {
            $[Ae] = Array.isArray(Tt) ? Tt.map((hn) => `${hn}`) : `${Tt}`;
          }),
          (ie = v === D ? m : Lr(v, D, m));
        const Ve = On(en(ie));
        return new wr(Ve, $, x);
      }
      function Lr(v, D, m) {
        const S = {};
        return (
          Object.entries(v.children).forEach(([x, $]) => {
            S[x] = $ === D ? m : Lr($, D, m);
          }),
          new rn(v.segments, S)
        );
      }
      class qr {
        constructor(D, m, S) {
          if (
            ((this.isAbsolute = D),
            (this.numberOfDoubleDots = m),
            (this.commands = S),
            D && S.length > 0 && Xt(S[0]))
          )
            throw new l.vHH(4003, !1);
          const x = S.find(pn);
          if (x && x !== Dr(S)) throw new l.vHH(4004, !1);
        }
        toRoot() {
          return (
            this.isAbsolute &&
            1 === this.commands.length &&
            "/" == this.commands[0]
          );
        }
      }
      class qn {
        constructor(D, m, S) {
          (this.segmentGroup = D), (this.processChildren = m), (this.index = S);
        }
      }
      function Mr(v, D, m) {
        if (
          (v || (v = new rn([], {})),
          0 === v.segments.length && v.hasChildren())
        )
          return yi(v, D, m);
        const S = (function Ai(v, D, m) {
            let S = 0,
              x = D;
            const $ = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; x < v.segments.length; ) {
              if (S >= m.length) return $;
              const ie = v.segments[x],
                Ve = m[S];
              if (pn(Ve)) break;
              const Ae = `${Ve}`,
                Tt = S < m.length - 1 ? m[S + 1] : null;
              if (x > 0 && void 0 === Ae) break;
              if (Ae && Tt && "object" == typeof Tt && void 0 === Tt.outlets) {
                if (!Ur(Ae, Tt, ie)) return $;
                S += 2;
              } else {
                if (!Ur(Ae, {}, ie)) return $;
                S++;
              }
              x++;
            }
            return { match: !0, pathIndex: x, commandIndex: S };
          })(v, D, m),
          x = m.slice(S.commandIndex);
        if (S.match && S.pathIndex < v.segments.length) {
          const $ = new rn(v.segments.slice(0, S.pathIndex), {});
          return (
            ($.children[$t] = new rn(
              v.segments.slice(S.pathIndex),
              v.children
            )),
            yi($, 0, x)
          );
        }
        return S.match && 0 === x.length
          ? new rn(v.segments, {})
          : S.match && !v.hasChildren()
          ? tr(v, D, m)
          : S.match
          ? yi(v, 0, x)
          : tr(v, D, m);
      }
      function yi(v, D, m) {
        if (0 === m.length) return new rn(v.segments, {});
        {
          const S = (function Br(v) {
              return pn(v[0]) ? v[0].outlets : { [$t]: v };
            })(m),
            x = {};
          if (
            Object.keys(S).some(($) => $ !== $t) &&
            v.children[$t] &&
            1 === v.numberOfChildren &&
            0 === v.children[$t].segments.length
          ) {
            const $ = yi(v.children[$t], D, m);
            return new rn(v.segments, $.children);
          }
          return (
            Object.entries(S).forEach(([$, ie]) => {
              "string" == typeof ie && (ie = [ie]),
                null !== ie && (x[$] = Mr(v.children[$], D, ie));
            }),
            Object.entries(v.children).forEach(([$, ie]) => {
              void 0 === S[$] && (x[$] = ie);
            }),
            new rn(v.segments, x)
          );
        }
      }
      function tr(v, D, m) {
        const S = v.segments.slice(0, D);
        let x = 0;
        for (; x < m.length; ) {
          const $ = m[x];
          if (pn($)) {
            const Ae = ni($.outlets);
            return new rn(S, Ae);
          }
          if (0 === x && Xt(m[0])) {
            S.push(new Yn(v.segments[D].path, Cs(m[0]))), x++;
            continue;
          }
          const ie = pn($) ? $.outlets[$t] : `${$}`,
            Ve = x < m.length - 1 ? m[x + 1] : null;
          ie && Ve && Xt(Ve)
            ? (S.push(new Yn(ie, Cs(Ve))), (x += 2))
            : (S.push(new Yn(ie, {})), x++);
        }
        return new rn(S, {});
      }
      function ni(v) {
        const D = {};
        return (
          Object.entries(v).forEach(([m, S]) => {
            "string" == typeof S && (S = [S]),
              null !== S && (D[m] = tr(new rn([], {}), 0, S));
          }),
          D
        );
      }
      function Cs(v) {
        const D = {};
        return Object.entries(v).forEach(([m, S]) => (D[m] = `${S}`)), D;
      }
      function Ur(v, D, m) {
        return v == m.path && zt(D, m.parameters);
      }
      const Ii = "imperative";
      class vi {
        constructor(D, m) {
          (this.id = D), (this.url = m);
        }
      }
      class Sr extends vi {
        constructor(D, m, S = "imperative", x = null) {
          super(D, m),
            (this.type = 0),
            (this.navigationTrigger = S),
            (this.restoredState = x);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class wi extends vi {
        constructor(D, m, S) {
          super(D, m), (this.urlAfterRedirects = S), (this.type = 1);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class hi extends vi {
        constructor(D, m, S, x) {
          super(D, m), (this.reason = S), (this.code = x), (this.type = 2);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class Ar extends vi {
        constructor(D, m, S, x) {
          super(D, m), (this.reason = S), (this.code = x), (this.type = 16);
        }
      }
      class ds extends vi {
        constructor(D, m, S, x) {
          super(D, m), (this.error = S), (this.target = x), (this.type = 3);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class fs extends vi {
        constructor(D, m, S, x) {
          super(D, m),
            (this.urlAfterRedirects = S),
            (this.state = x),
            (this.type = 4);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Ki extends vi {
        constructor(D, m, S, x) {
          super(D, m),
            (this.urlAfterRedirects = S),
            (this.state = x),
            (this.type = 7);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class bi extends vi {
        constructor(D, m, S, x, $) {
          super(D, m),
            (this.urlAfterRedirects = S),
            (this.state = x),
            (this.shouldActivate = $),
            (this.type = 8);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class Ss extends vi {
        constructor(D, m, S, x) {
          super(D, m),
            (this.urlAfterRedirects = S),
            (this.state = x),
            (this.type = 5);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class hs extends vi {
        constructor(D, m, S, x) {
          super(D, m),
            (this.urlAfterRedirects = S),
            (this.state = x),
            (this.type = 6);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class Xi {
        constructor(D) {
          (this.route = D), (this.type = 9);
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class $i {
        constructor(D) {
          (this.route = D), (this.type = 10);
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class Qi {
        constructor(D) {
          (this.snapshot = D), (this.type = 11);
        }
        toString() {
          return `ChildActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class Ts {
        constructor(D) {
          (this.snapshot = D), (this.type = 12);
        }
        toString() {
          return `ChildActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class Fs {
        constructor(D) {
          (this.snapshot = D), (this.type = 13);
        }
        toString() {
          return `ActivationStart(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class Ji {
        constructor(D) {
          (this.snapshot = D), (this.type = 14);
        }
        toString() {
          return `ActivationEnd(path: '${
            (this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ""
          }')`;
        }
      }
      class _i {
        constructor(D, m, S) {
          (this.routerEvent = D),
            (this.position = m),
            (this.anchor = S),
            (this.type = 15);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      class ri {}
      class Ei {
        constructor(D) {
          this.url = D;
        }
      }
      class gn {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.injector = null),
            (this.children = new xn()),
            (this.attachRef = null);
        }
      }
      let xn = (() => {
        class v {
          constructor() {
            this.contexts = new Map();
          }
          onChildOutletCreated(m, S) {
            const x = this.getOrCreateContext(m);
            (x.outlet = S), this.contexts.set(m, x);
          }
          onChildOutletDestroyed(m) {
            const S = this.getContext(m);
            S && ((S.outlet = null), (S.attachRef = null));
          }
          onOutletDeactivated() {
            const m = this.contexts;
            return (this.contexts = new Map()), m;
          }
          onOutletReAttached(m) {
            this.contexts = m;
          }
          getOrCreateContext(m) {
            let S = this.getContext(m);
            return S || ((S = new gn()), this.contexts.set(m, S)), S;
          }
          getContext(m) {
            return this.contexts.get(m) || null;
          }
          static #e = (this.ɵfac = function (S) {
            return new (S || v)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: v,
            factory: v.ɵfac,
            providedIn: "root",
          }));
        }
        return v;
      })();
      class or {
        constructor(D) {
          this._root = D;
        }
        get root() {
          return this._root.value;
        }
        parent(D) {
          const m = this.pathFromRoot(D);
          return m.length > 1 ? m[m.length - 2] : null;
        }
        children(D) {
          const m = ii(D, this._root);
          return m ? m.children.map((S) => S.value) : [];
        }
        firstChild(D) {
          const m = ii(D, this._root);
          return m && m.children.length > 0 ? m.children[0].value : null;
        }
        siblings(D) {
          const m = Ir(D, this._root);
          return m.length < 2
            ? []
            : m[m.length - 2].children
                .map((x) => x.value)
                .filter((x) => x !== D);
        }
        pathFromRoot(D) {
          return Ir(D, this._root).map((m) => m.value);
        }
      }
      function ii(v, D) {
        if (v === D.value) return D;
        for (const m of D.children) {
          const S = ii(v, m);
          if (S) return S;
        }
        return null;
      }
      function Ir(v, D) {
        if (v === D.value) return [D];
        for (const m of D.children) {
          const S = Ir(v, m);
          if (S.length) return S.unshift(D), S;
        }
        return [];
      }
      class Or {
        constructor(D, m) {
          (this.value = D), (this.children = m);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function Oi(v) {
        const D = {};
        return v && v.children.forEach((m) => (D[m.value.outlet] = m)), D;
      }
      class Fr extends or {
        constructor(D, m) {
          super(D), (this.snapshot = m), Ci(this, D);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function Zr(v, D) {
        const m = (function es(v, D) {
            const ie = new Un([], {}, {}, "", {}, $t, D, null, {});
            return new br("", new Or(ie, []));
          })(0, D),
          S = new Ie.X([new Yn("", {})]),
          x = new Ie.X({}),
          $ = new Ie.X({}),
          ie = new Ie.X({}),
          Ve = new Ie.X(""),
          Ae = new Cn(S, x, ie, Ve, $, $t, D, m.root);
        return (Ae.snapshot = m.root), new Fr(new Or(Ae, []), m);
      }
      class Cn {
        constructor(D, m, S, x, $, ie, Ve, Ae) {
          (this.urlSubject = D),
            (this.paramsSubject = m),
            (this.queryParamsSubject = S),
            (this.fragmentSubject = x),
            (this.dataSubject = $),
            (this.outlet = ie),
            (this.component = Ve),
            (this._futureSnapshot = Ae),
            (this.title =
              this.dataSubject?.pipe((0, Ot.U)((Tt) => Tt[Kn])) ??
              (0, we.of)(void 0)),
            (this.url = D),
            (this.params = m),
            (this.queryParams = S),
            (this.fragment = x),
            (this.data = $);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap ||
              (this._paramMap = this.params.pipe((0, Ot.U)((D) => pr(D)))),
            this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap ||
              (this._queryParamMap = this.queryParams.pipe(
                (0, Ot.U)((D) => pr(D))
              )),
            this._queryParamMap
          );
        }
        toString() {
          return this.snapshot
            ? this.snapshot.toString()
            : `Future(${this._futureSnapshot})`;
        }
      }
      function Rt(v, D = "emptyOnly") {
        const m = v.pathFromRoot;
        let S = 0;
        if ("always" !== D)
          for (S = m.length - 1; S >= 1; ) {
            const x = m[S],
              $ = m[S - 1];
            if (x.routeConfig && "" === x.routeConfig.path) S--;
            else {
              if ($.component) break;
              S--;
            }
          }
        return (function Qt(v) {
          return v.reduce(
            (D, m) => ({
              params: { ...D.params, ...m.params },
              data: { ...D.data, ...m.data },
              resolve: {
                ...m.data,
                ...D.resolve,
                ...m.routeConfig?.data,
                ...m._resolvedData,
              },
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(m.slice(S));
      }
      class Un {
        get title() {
          return this.data?.[Kn];
        }
        constructor(D, m, S, x, $, ie, Ve, Ae, Tt) {
          (this.url = D),
            (this.params = m),
            (this.queryParams = S),
            (this.fragment = x),
            (this.data = $),
            (this.outlet = ie),
            (this.component = Ve),
            (this.routeConfig = Ae),
            (this._resolve = Tt);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return (
            this._paramMap || (this._paramMap = pr(this.params)), this._paramMap
          );
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = pr(this.queryParams)),
            this._queryParamMap
          );
        }
        toString() {
          return `Route(url:'${this.url
            .map((S) => S.toString())
            .join("/")}', path:'${
            this.routeConfig ? this.routeConfig.path : ""
          }')`;
        }
      }
      class br extends or {
        constructor(D, m) {
          super(m), (this.url = D), Ci(this, m);
        }
        toString() {
          return mr(this._root);
        }
      }
      function Ci(v, D) {
        (D.value._routerState = v), D.children.forEach((m) => Ci(v, m));
      }
      function mr(v) {
        const D =
          v.children.length > 0 ? ` { ${v.children.map(mr).join(", ")} } ` : "";
        return `${v.value}${D}`;
      }
      function Vr(v) {
        if (v.snapshot) {
          const D = v.snapshot,
            m = v._futureSnapshot;
          (v.snapshot = m),
            zt(D.queryParams, m.queryParams) ||
              v.queryParamsSubject.next(m.queryParams),
            D.fragment !== m.fragment && v.fragmentSubject.next(m.fragment),
            zt(D.params, m.params) || v.paramsSubject.next(m.params),
            (function dn(v, D) {
              if (v.length !== D.length) return !1;
              for (let m = 0; m < v.length; ++m) if (!zt(v[m], D[m])) return !1;
              return !0;
            })(D.url, m.url) || v.urlSubject.next(m.url),
            zt(D.data, m.data) || v.dataSubject.next(m.data);
        } else
          (v.snapshot = v._futureSnapshot),
            v.dataSubject.next(v._futureSnapshot.data);
      }
      function nr(v, D) {
        const m =
          zt(v.params, D.params) &&
          (function cr(v, D) {
            return (
              Cr(v, D) && v.every((m, S) => zt(m.parameters, D[S].parameters))
            );
          })(v.url, D.url);
        return (
          m &&
          !(!v.parent != !D.parent) &&
          (!v.parent || nr(v.parent, D.parent))
        );
      }
      let Kr = (() => {
        class v {
          constructor() {
            (this.activated = null),
              (this._activatedRoute = null),
              (this.name = $t),
              (this.activateEvents = new l.vpe()),
              (this.deactivateEvents = new l.vpe()),
              (this.attachEvents = new l.vpe()),
              (this.detachEvents = new l.vpe()),
              (this.parentContexts = (0, l.f3M)(xn)),
              (this.location = (0, l.f3M)(l.s_b)),
              (this.changeDetector = (0, l.f3M)(l.sBO)),
              (this.environmentInjector = (0, l.f3M)(l.lqb)),
              (this.inputBinder = (0, l.f3M)(sn, { optional: !0 })),
              (this.supportsBindingToComponentInputs = !0);
          }
          get activatedComponentRef() {
            return this.activated;
          }
          ngOnChanges(m) {
            if (m.name) {
              const { firstChange: S, previousValue: x } = m.name;
              if (S) return;
              this.isTrackedInParentContexts(x) &&
                (this.deactivate(),
                this.parentContexts.onChildOutletDestroyed(x)),
                this.initializeOutletWithName();
            }
          }
          ngOnDestroy() {
            this.isTrackedInParentContexts(this.name) &&
              this.parentContexts.onChildOutletDestroyed(this.name),
              this.inputBinder?.unsubscribeFromRouteData(this);
          }
          isTrackedInParentContexts(m) {
            return this.parentContexts.getContext(m)?.outlet === this;
          }
          ngOnInit() {
            this.initializeOutletWithName();
          }
          initializeOutletWithName() {
            if (
              (this.parentContexts.onChildOutletCreated(this.name, this),
              this.activated)
            )
              return;
            const m = this.parentContexts.getContext(this.name);
            m?.route &&
              (m.attachRef
                ? this.attach(m.attachRef, m.route)
                : this.activateWith(m.route, m.injector));
          }
          get isActivated() {
            return !!this.activated;
          }
          get component() {
            if (!this.activated) throw new l.vHH(4012, !1);
            return this.activated.instance;
          }
          get activatedRoute() {
            if (!this.activated) throw new l.vHH(4012, !1);
            return this._activatedRoute;
          }
          get activatedRouteData() {
            return this._activatedRoute
              ? this._activatedRoute.snapshot.data
              : {};
          }
          detach() {
            if (!this.activated) throw new l.vHH(4012, !1);
            this.location.detach();
            const m = this.activated;
            return (
              (this.activated = null),
              (this._activatedRoute = null),
              this.detachEvents.emit(m.instance),
              m
            );
          }
          attach(m, S) {
            (this.activated = m),
              (this._activatedRoute = S),
              this.location.insert(m.hostView),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.attachEvents.emit(m.instance);
          }
          deactivate() {
            if (this.activated) {
              const m = this.component;
              this.activated.destroy(),
                (this.activated = null),
                (this._activatedRoute = null),
                this.deactivateEvents.emit(m);
            }
          }
          activateWith(m, S) {
            if (this.isActivated) throw new l.vHH(4013, !1);
            this._activatedRoute = m;
            const x = this.location,
              ie = m.snapshot.component,
              Ve = this.parentContexts.getOrCreateContext(this.name).children,
              Ae = new xi(m, Ve, x.injector);
            (this.activated = x.createComponent(ie, {
              index: x.length,
              injector: Ae,
              environmentInjector: S ?? this.environmentInjector,
            })),
              this.changeDetector.markForCheck(),
              this.inputBinder?.bindActivatedRouteToOutletComponent(this),
              this.activateEvents.emit(this.activated.instance);
          }
          static #e = (this.ɵfac = function (S) {
            return new (S || v)();
          });
          static #t = (this.ɵdir = l.lG2({
            type: v,
            selectors: [["router-outlet"]],
            inputs: { name: "name" },
            outputs: {
              activateEvents: "activate",
              deactivateEvents: "deactivate",
              attachEvents: "attach",
              detachEvents: "detach",
            },
            exportAs: ["outlet"],
            standalone: !0,
            features: [l.TTD],
          }));
        }
        return v;
      })();
      class xi {
        constructor(D, m, S) {
          (this.route = D), (this.childContexts = m), (this.parent = S);
        }
        get(D, m) {
          return D === Cn
            ? this.route
            : D === xn
            ? this.childContexts
            : this.parent.get(D, m);
        }
      }
      const sn = new l.OlP("");
      let $r = (() => {
        class v {
          constructor() {
            this.outletDataSubscriptions = new Map();
          }
          bindActivatedRouteToOutletComponent(m) {
            this.unsubscribeFromRouteData(m), this.subscribeToRouteData(m);
          }
          unsubscribeFromRouteData(m) {
            this.outletDataSubscriptions.get(m)?.unsubscribe(),
              this.outletDataSubscriptions.delete(m);
          }
          subscribeToRouteData(m) {
            const { activatedRoute: S } = m,
              x = ot([S.queryParams, S.params, S.data])
                .pipe(
                  (0, qe.w)(
                    ([$, ie, Ve], Ae) => (
                      (Ve = { ...$, ...ie, ...Ve }),
                      0 === Ae ? (0, we.of)(Ve) : Promise.resolve(Ve)
                    )
                  )
                )
                .subscribe(($) => {
                  if (
                    !m.isActivated ||
                    !m.activatedComponentRef ||
                    m.activatedRoute !== S ||
                    null === S.component
                  )
                    return void this.unsubscribeFromRouteData(m);
                  const ie = (0, l.qFp)(S.component);
                  if (ie)
                    for (const { templateName: Ve } of ie.inputs)
                      m.activatedComponentRef.setInput(Ve, $[Ve]);
                  else this.unsubscribeFromRouteData(m);
                });
            this.outletDataSubscriptions.set(m, x);
          }
          static #e = (this.ɵfac = function (S) {
            return new (S || v)();
          });
          static #t = (this.ɵprov = l.Yz7({ token: v, factory: v.ɵfac }));
        }
        return v;
      })();
      function si(v, D, m) {
        if (m && v.shouldReuseRoute(D.value, m.value.snapshot)) {
          const S = m.value;
          S._futureSnapshot = D.value;
          const x = (function Gn(v, D, m) {
            return D.children.map((S) => {
              for (const x of m.children)
                if (v.shouldReuseRoute(S.value, x.value.snapshot))
                  return si(v, S, x);
              return si(v, S);
            });
          })(v, D, m);
          return new Or(S, x);
        }
        {
          if (v.shouldAttach(D.value)) {
            const $ = v.retrieve(D.value);
            if (null !== $) {
              const ie = $.route;
              return (
                (ie.value._futureSnapshot = D.value),
                (ie.children = D.children.map((Ve) => si(v, Ve))),
                ie
              );
            }
          }
          const S = (function Xr(v) {
              return new Cn(
                new Ie.X(v.url),
                new Ie.X(v.params),
                new Ie.X(v.queryParams),
                new Ie.X(v.fragment),
                new Ie.X(v.data),
                v.outlet,
                v.component,
                v
              );
            })(D.value),
            x = D.children.map(($) => si(v, $));
          return new Or(S, x);
        }
      }
      const Hr = "ngNavigationCancelingError";
      function Qr(v, D) {
        const { redirectTo: m, navigationBehaviorOptions: S } = Ln(D)
            ? { redirectTo: D, navigationBehaviorOptions: void 0 }
            : D,
          x = Fi(!1, 0, D);
        return (x.url = m), (x.navigationBehaviorOptions = S), x;
      }
      function Fi(v, D, m) {
        const S = new Error("NavigationCancelingError: " + (v || ""));
        return (S[Hr] = !0), (S.cancellationCode = D), m && (S.url = m), S;
      }
      function Nn(v) {
        return v && v[Hr];
      }
      let xr = (() => {
        class v {
          static #e = (this.ɵfac = function (S) {
            return new (S || v)();
          });
          static #t = (this.ɵcmp = l.Xpm({
            type: v,
            selectors: [["ng-component"]],
            standalone: !0,
            features: [l.jDz],
            decls: 1,
            vars: 0,
            template: function (S, x) {
              1 & S && l._UZ(0, "router-outlet");
            },
            dependencies: [Kr],
            encapsulation: 2,
          }));
        }
        return v;
      })();
      function oi(v) {
        const D = v.children && v.children.map(oi),
          m = D ? { ...v, children: D } : { ...v };
        return (
          !m.component &&
            !m.loadComponent &&
            (D || m.loadChildren) &&
            m.outlet &&
            m.outlet !== $t &&
            (m.component = xr),
          m
        );
      }
      function bn(v) {
        return v.outlet || $t;
      }
      function Xn(v) {
        if (!v) return null;
        if (v.routeConfig?._injector) return v.routeConfig._injector;
        for (let D = v.parent; D; D = D.parent) {
          const m = D.routeConfig;
          if (m?._loadedInjector) return m._loadedInjector;
          if (m?._injector) return m._injector;
        }
        return null;
      }
      class _ {
        constructor(D, m, S, x, $) {
          (this.routeReuseStrategy = D),
            (this.futureState = m),
            (this.currState = S),
            (this.forwardEvent = x),
            (this.inputBindingEnabled = $);
        }
        activate(D) {
          const m = this.futureState._root,
            S = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(m, S, D),
            Vr(this.futureState.root),
            this.activateChildRoutes(m, S, D);
        }
        deactivateChildRoutes(D, m, S) {
          const x = Oi(m);
          D.children.forEach(($) => {
            const ie = $.value.outlet;
            this.deactivateRoutes($, x[ie], S), delete x[ie];
          }),
            Object.values(x).forEach(($) => {
              this.deactivateRouteAndItsChildren($, S);
            });
        }
        deactivateRoutes(D, m, S) {
          const x = D.value,
            $ = m ? m.value : null;
          if (x === $)
            if (x.component) {
              const ie = S.getContext(x.outlet);
              ie && this.deactivateChildRoutes(D, m, ie.children);
            } else this.deactivateChildRoutes(D, m, S);
          else $ && this.deactivateRouteAndItsChildren(m, S);
        }
        deactivateRouteAndItsChildren(D, m) {
          D.value.component &&
          this.routeReuseStrategy.shouldDetach(D.value.snapshot)
            ? this.detachAndStoreRouteSubtree(D, m)
            : this.deactivateRouteAndOutlet(D, m);
        }
        detachAndStoreRouteSubtree(D, m) {
          const S = m.getContext(D.value.outlet),
            x = S && D.value.component ? S.children : m,
            $ = Oi(D);
          for (const ie of Object.keys($))
            this.deactivateRouteAndItsChildren($[ie], x);
          if (S && S.outlet) {
            const ie = S.outlet.detach(),
              Ve = S.children.onOutletDeactivated();
            this.routeReuseStrategy.store(D.value.snapshot, {
              componentRef: ie,
              route: D,
              contexts: Ve,
            });
          }
        }
        deactivateRouteAndOutlet(D, m) {
          const S = m.getContext(D.value.outlet),
            x = S && D.value.component ? S.children : m,
            $ = Oi(D);
          for (const ie of Object.keys($))
            this.deactivateRouteAndItsChildren($[ie], x);
          S &&
            (S.outlet &&
              (S.outlet.deactivate(), S.children.onOutletDeactivated()),
            (S.attachRef = null),
            (S.route = null));
        }
        activateChildRoutes(D, m, S) {
          const x = Oi(m);
          D.children.forEach(($) => {
            this.activateRoutes($, x[$.value.outlet], S),
              this.forwardEvent(new Ji($.value.snapshot));
          }),
            D.children.length && this.forwardEvent(new Ts(D.value.snapshot));
        }
        activateRoutes(D, m, S) {
          const x = D.value,
            $ = m ? m.value : null;
          if ((Vr(x), x === $))
            if (x.component) {
              const ie = S.getOrCreateContext(x.outlet);
              this.activateChildRoutes(D, m, ie.children);
            } else this.activateChildRoutes(D, m, S);
          else if (x.component) {
            const ie = S.getOrCreateContext(x.outlet);
            if (this.routeReuseStrategy.shouldAttach(x.snapshot)) {
              const Ve = this.routeReuseStrategy.retrieve(x.snapshot);
              this.routeReuseStrategy.store(x.snapshot, null),
                ie.children.onOutletReAttached(Ve.contexts),
                (ie.attachRef = Ve.componentRef),
                (ie.route = Ve.route.value),
                ie.outlet && ie.outlet.attach(Ve.componentRef, Ve.route.value),
                Vr(Ve.route.value),
                this.activateChildRoutes(D, null, ie.children);
            } else {
              const Ve = Xn(x.snapshot);
              (ie.attachRef = null),
                (ie.route = x),
                (ie.injector = Ve),
                ie.outlet && ie.outlet.activateWith(x, ie.injector),
                this.activateChildRoutes(D, null, ie.children);
            }
          } else this.activateChildRoutes(D, null, S);
        }
      }
      class E {
        constructor(D) {
          (this.path = D), (this.route = this.path[this.path.length - 1]);
        }
      }
      class A {
        constructor(D, m) {
          (this.component = D), (this.route = m);
        }
      }
      function I(v, D, m) {
        const S = v._root;
        return P(S, D ? D._root : null, m, [S.value]);
      }
      function j(v, D) {
        const m = Symbol(),
          S = D.get(v, m);
        return S === m
          ? "function" != typeof v || (0, l.Z0I)(v)
            ? D.get(v)
            : v
          : S;
      }
      function P(
        v,
        D,
        m,
        S,
        x = { canDeactivateChecks: [], canActivateChecks: [] }
      ) {
        const $ = Oi(D);
        return (
          v.children.forEach((ie) => {
            (function G(
              v,
              D,
              m,
              S,
              x = { canDeactivateChecks: [], canActivateChecks: [] }
            ) {
              const $ = v.value,
                ie = D ? D.value : null,
                Ve = m ? m.getContext(v.value.outlet) : null;
              if (ie && $.routeConfig === ie.routeConfig) {
                const Ae = (function k(v, D, m) {
                  if ("function" == typeof m) return m(v, D);
                  switch (m) {
                    case "pathParamsChange":
                      return !Cr(v.url, D.url);
                    case "pathParamsOrQueryParamsChange":
                      return (
                        !Cr(v.url, D.url) || !zt(v.queryParams, D.queryParams)
                      );
                    case "always":
                      return !0;
                    case "paramsOrQueryParamsChange":
                      return !nr(v, D) || !zt(v.queryParams, D.queryParams);
                    default:
                      return !nr(v, D);
                  }
                })(ie, $, $.routeConfig.runGuardsAndResolvers);
                Ae
                  ? x.canActivateChecks.push(new E(S))
                  : (($.data = ie.data), ($._resolvedData = ie._resolvedData)),
                  P(v, D, $.component ? (Ve ? Ve.children : null) : m, S, x),
                  Ae &&
                    Ve &&
                    Ve.outlet &&
                    Ve.outlet.isActivated &&
                    x.canDeactivateChecks.push(new A(Ve.outlet.component, ie));
              } else
                ie && h(D, Ve, x),
                  x.canActivateChecks.push(new E(S)),
                  P(v, null, $.component ? (Ve ? Ve.children : null) : m, S, x);
            })(ie, $[ie.value.outlet], m, S.concat([ie.value]), x),
              delete $[ie.value.outlet];
          }),
          Object.entries($).forEach(([ie, Ve]) => h(Ve, m.getContext(ie), x)),
          x
        );
      }
      function h(v, D, m) {
        const S = Oi(v),
          x = v.value;
        Object.entries(S).forEach(([$, ie]) => {
          h(ie, x.component ? (D ? D.children.getContext($) : null) : D, m);
        }),
          m.canDeactivateChecks.push(
            new A(
              x.component && D && D.outlet && D.outlet.isActivated
                ? D.outlet.component
                : null,
              x
            )
          );
      }
      function b(v) {
        return "function" == typeof v;
      }
      function nt(v) {
        return v instanceof It || "EmptyError" === v?.name;
      }
      const Je = Symbol("INITIAL_VALUE");
      function _t() {
        return (0, qe.w)((v) =>
          ot(
            v.map((D) =>
              D.pipe(
                (0, re.q)(1),
                (function ue(...v) {
                  const D = (0, ge.yG)(v);
                  return (0, Mt.e)((m, S) => {
                    (D ? Se(v, m, D) : Se(v, m)).subscribe(S);
                  });
                })(Je)
              )
            )
          ).pipe(
            (0, Ot.U)((D) => {
              for (const m of D)
                if (!0 !== m) {
                  if (m === Je) return Je;
                  if (!1 === m || m instanceof wr) return m;
                }
              return !0;
            }),
            (0, Oe.h)((D) => D !== Je),
            (0, re.q)(1)
          )
        );
      }
      function ht(v) {
        return (0, ye.z)(
          Pt((D) => {
            if (Ln(D)) throw Qr(0, D);
          }),
          (0, Ot.U)((D) => !0 === D)
        );
      }
      class ft {
        constructor(D) {
          this.segmentGroup = D || null;
        }
      }
      class Jt {
        constructor(D) {
          this.urlTree = D;
        }
      }
      function An(v) {
        return (0, me._)(new ft(v));
      }
      function Pr(v) {
        return (0, me._)(new Jt(v));
      }
      class Nr {
        constructor(D, m) {
          (this.urlSerializer = D), (this.urlTree = m);
        }
        noMatchError(D) {
          return new l.vHH(4002, !1);
        }
        lineralizeSegments(D, m) {
          let S = [],
            x = m.root;
          for (;;) {
            if (((S = S.concat(x.segments)), 0 === x.numberOfChildren))
              return (0, we.of)(S);
            if (x.numberOfChildren > 1 || !x.children[$t])
              return (0, me._)(new l.vHH(4e3, !1));
            x = x.children[$t];
          }
        }
        applyRedirectCommands(D, m, S) {
          return this.applyRedirectCreateUrlTree(
            m,
            this.urlSerializer.parse(m),
            D,
            S
          );
        }
        applyRedirectCreateUrlTree(D, m, S, x) {
          const $ = this.createSegmentGroup(D, m.root, S, x);
          return new wr(
            $,
            this.createQueryParams(m.queryParams, this.urlTree.queryParams),
            m.fragment
          );
        }
        createQueryParams(D, m) {
          const S = {};
          return (
            Object.entries(D).forEach(([x, $]) => {
              if ("string" == typeof $ && $.startsWith(":")) {
                const Ve = $.substring(1);
                S[x] = m[Ve];
              } else S[x] = $;
            }),
            S
          );
        }
        createSegmentGroup(D, m, S, x) {
          const $ = this.createSegments(D, m.segments, S, x);
          let ie = {};
          return (
            Object.entries(m.children).forEach(([Ve, Ae]) => {
              ie[Ve] = this.createSegmentGroup(D, Ae, S, x);
            }),
            new rn($, ie)
          );
        }
        createSegments(D, m, S, x) {
          return m.map(($) =>
            $.path.startsWith(":")
              ? this.findPosParam(D, $, x)
              : this.findOrReturn($, S)
          );
        }
        findPosParam(D, m, S) {
          const x = S[m.path.substring(1)];
          if (!x) throw new l.vHH(4001, !1);
          return x;
        }
        findOrReturn(D, m) {
          let S = 0;
          for (const x of m) {
            if (x.path === D.path) return m.splice(S), x;
            S++;
          }
          return D;
        }
      }
      const ai = {
        matched: !1,
        consumedSegments: [],
        remainingSegments: [],
        parameters: {},
        positionalParamSegments: {},
      };
      function Bi(v, D, m, S, x) {
        const $ = ns(v, D, m);
        return $.matched
          ? ((S = (function Si(v, D) {
              return (
                v.providers &&
                  !v._injector &&
                  (v._injector = (0, l.MMx)(
                    v.providers,
                    D,
                    `Route: ${v.path}`
                  )),
                v._injector ?? D
              );
            })(D, S)),
            (function rt(v, D, m, S) {
              const x = D.canMatch;
              if (!x || 0 === x.length) return (0, we.of)(!0);
              const $ = x.map((ie) => {
                const Ve = j(ie, v);
                return Bn(
                  (function X(v) {
                    return v && b(v.canMatch);
                  })(Ve)
                    ? Ve.canMatch(D, m)
                    : v.runInContext(() => Ve(D, m))
                );
              });
              return (0, we.of)($).pipe(_t(), ht());
            })(S, D, m).pipe((0, Ot.U)((ie) => (!0 === ie ? $ : { ...ai }))))
          : (0, we.of)($);
      }
      function ns(v, D, m) {
        if ("" === D.path)
          return "full" === D.pathMatch && (v.hasChildren() || m.length > 0)
            ? { ...ai }
            : {
                matched: !0,
                consumedSegments: [],
                remainingSegments: m,
                parameters: {},
                positionalParamSegments: {},
              };
        const x = (D.matcher || ar)(m, v, D);
        if (!x) return { ...ai };
        const $ = {};
        Object.entries(x.posParams ?? {}).forEach(([Ve, Ae]) => {
          $[Ve] = Ae.path;
        });
        const ie =
          x.consumed.length > 0
            ? { ...$, ...x.consumed[x.consumed.length - 1].parameters }
            : $;
        return {
          matched: !0,
          consumedSegments: x.consumed,
          remainingSegments: m.slice(x.consumed.length),
          parameters: ie,
          positionalParamSegments: x.posParams ?? {},
        };
      }
      function $s(v, D, m, S) {
        return m.length > 0 &&
          (function zi(v, D, m) {
            return m.some((S) => is(v, D, S) && bn(S) !== $t);
          })(v, m, S)
          ? {
              segmentGroup: new rn(D, Is(S, new rn(m, v.children))),
              slicedSegments: [],
            }
          : 0 === m.length &&
            (function rs(v, D, m) {
              return m.some((S) => is(v, D, S));
            })(v, m, S)
          ? {
              segmentGroup: new rn(v.segments, ji(v, 0, m, S, v.children)),
              slicedSegments: m,
            }
          : { segmentGroup: new rn(v.segments, v.children), slicedSegments: m };
      }
      function ji(v, D, m, S, x) {
        const $ = {};
        for (const ie of S)
          if (is(v, m, ie) && !x[bn(ie)]) {
            const Ve = new rn([], {});
            $[bn(ie)] = Ve;
          }
        return { ...x, ...$ };
      }
      function Is(v, D) {
        const m = {};
        m[$t] = D;
        for (const S of v)
          if ("" === S.path && bn(S) !== $t) {
            const x = new rn([], {});
            m[bn(S)] = x;
          }
        return m;
      }
      function is(v, D, m) {
        return (
          (!(v.hasChildren() || D.length > 0) || "full" !== m.pathMatch) &&
          "" === m.path
        );
      }
      class ss {
        constructor(D, m, S, x, $, ie, Ve) {
          (this.injector = D),
            (this.configLoader = m),
            (this.rootComponentType = S),
            (this.config = x),
            (this.urlTree = $),
            (this.paramsInheritanceStrategy = ie),
            (this.urlSerializer = Ve),
            (this.allowRedirects = !0),
            (this.applyRedirects = new Nr(this.urlSerializer, this.urlTree));
        }
        noMatchError(D) {
          return new l.vHH(4002, !1);
        }
        recognize() {
          const D = $s(this.urlTree.root, [], [], this.config).segmentGroup;
          return this.processSegmentGroup(
            this.injector,
            this.config,
            D,
            $t
          ).pipe(
            (0, ln.K)((m) => {
              if (m instanceof Jt)
                return (
                  (this.allowRedirects = !1),
                  (this.urlTree = m.urlTree),
                  this.match(m.urlTree)
                );
              throw m instanceof ft ? this.noMatchError(m) : m;
            }),
            (0, Ot.U)((m) => {
              const S = new Un(
                  [],
                  Object.freeze({}),
                  Object.freeze({ ...this.urlTree.queryParams }),
                  this.urlTree.fragment,
                  {},
                  $t,
                  this.rootComponentType,
                  null,
                  {}
                ),
                x = new Or(S, m),
                $ = new br("", x),
                ie = (function gr(v, D, m = null, S = null) {
                  return jn(er(v), D, m, S);
                })(S, [], this.urlTree.queryParams, this.urlTree.fragment);
              return (
                (ie.queryParams = this.urlTree.queryParams),
                ($.url = this.urlSerializer.serialize(ie)),
                this.inheritParamsAndData($._root),
                { state: $, tree: ie }
              );
            })
          );
        }
        match(D) {
          return this.processSegmentGroup(
            this.injector,
            this.config,
            D.root,
            $t
          ).pipe(
            (0, ln.K)((S) => {
              throw S instanceof ft ? this.noMatchError(S) : S;
            })
          );
        }
        inheritParamsAndData(D) {
          const m = D.value,
            S = Rt(m, this.paramsInheritanceStrategy);
          (m.params = Object.freeze(S.params)),
            (m.data = Object.freeze(S.data)),
            D.children.forEach((x) => this.inheritParamsAndData(x));
        }
        processSegmentGroup(D, m, S, x) {
          return 0 === S.segments.length && S.hasChildren()
            ? this.processChildren(D, m, S)
            : this.processSegment(D, m, S, S.segments, x, !0);
        }
        processChildren(D, m, S) {
          const x = [];
          for (const $ of Object.keys(S.children))
            "primary" === $ ? x.unshift($) : x.push($);
          return (0, _e.D)(x).pipe(
            (0, Tn.b)(($) => {
              const ie = S.children[$],
                Ve = (function ks(v, D) {
                  const m = v.filter((S) => bn(S) === D);
                  return m.push(...v.filter((S) => bn(S) !== D)), m;
                })(m, $);
              return this.processSegmentGroup(D, Ve, ie, $);
            }),
            (function Ge(v, D) {
              return (0, Mt.e)(
                (function Kt(v, D, m, S, x) {
                  return ($, ie) => {
                    let Ve = m,
                      Ae = D,
                      Tt = 0;
                    $.subscribe(
                      (0, et.x)(
                        ie,
                        (hn) => {
                          const ir = Tt++;
                          (Ae = Ve ? v(Ae, hn, ir) : ((Ve = !0), hn)),
                            S && ie.next(Ae);
                        },
                        x &&
                          (() => {
                            Ve && ie.next(Ae), ie.complete();
                          })
                      )
                    );
                  };
                })(v, D, arguments.length >= 2, !0)
              );
            })(($, ie) => ($.push(...ie), $)),
            tt(null),
            (function ce(v, D) {
              const m = arguments.length >= 2;
              return (S) =>
                S.pipe(
                  v ? (0, Oe.h)((x, $) => v(x, $, S)) : xe.y,
                  Qe(1),
                  m ? tt(D) : lt(() => new It())
                );
            })(),
            (0, Pe.z)(($) => {
              if (null === $) return An(S);
              const ie = a($);
              return (
                (function Gi(v) {
                  v.sort((D, m) =>
                    D.value.outlet === $t
                      ? -1
                      : m.value.outlet === $t
                      ? 1
                      : D.value.outlet.localeCompare(m.value.outlet)
                  );
                })(ie),
                (0, we.of)(ie)
              );
            })
          );
        }
        processSegment(D, m, S, x, $, ie) {
          return (0, _e.D)(m).pipe(
            (0, Tn.b)((Ve) =>
              this.processSegmentAgainstRoute(
                Ve._injector ?? D,
                m,
                Ve,
                S,
                x,
                $,
                ie
              ).pipe(
                (0, ln.K)((Ae) => {
                  if (Ae instanceof ft) return (0, we.of)(null);
                  throw Ae;
                })
              )
            ),
            an((Ve) => !!Ve),
            (0, ln.K)((Ve) => {
              if (nt(Ve))
                return (function qs(v, D, m) {
                  return 0 === D.length && !v.children[m];
                })(S, x, $)
                  ? (0, we.of)([])
                  : An(S);
              throw Ve;
            })
          );
        }
        processSegmentAgainstRoute(D, m, S, x, $, ie, Ve) {
          return (function Bs(v, D, m, S) {
            return (
              !!(bn(v) === S || (S !== $t && is(D, m, v))) &&
              ("**" === v.path || ns(D, v, m).matched)
            );
          })(S, x, $, ie)
            ? void 0 === S.redirectTo
              ? this.matchSegmentAgainstRoute(D, x, S, $, ie, Ve)
              : Ve && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(D, x, m, S, $, ie)
              : An(x)
            : An(x);
        }
        expandSegmentAgainstRouteUsingRedirect(D, m, S, x, $, ie) {
          return "**" === x.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(
                D,
                S,
                x,
                ie
              )
            : this.expandRegularSegmentAgainstRouteUsingRedirect(
                D,
                m,
                S,
                x,
                $,
                ie
              );
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(D, m, S, x) {
          const $ = this.applyRedirects.applyRedirectCommands(
            [],
            S.redirectTo,
            {}
          );
          return S.redirectTo.startsWith("/")
            ? Pr($)
            : this.applyRedirects.lineralizeSegments(S, $).pipe(
                (0, Pe.z)((ie) => {
                  const Ve = new rn(ie, {});
                  return this.processSegment(D, m, Ve, ie, x, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(D, m, S, x, $, ie) {
          const {
            matched: Ve,
            consumedSegments: Ae,
            remainingSegments: Tt,
            positionalParamSegments: hn,
          } = ns(m, x, $);
          if (!Ve) return An(m);
          const ir = this.applyRedirects.applyRedirectCommands(
            Ae,
            x.redirectTo,
            hn
          );
          return x.redirectTo.startsWith("/")
            ? Pr(ir)
            : this.applyRedirects
                .lineralizeSegments(x, ir)
                .pipe(
                  (0, Pe.z)((kn) =>
                    this.processSegment(D, S, m, kn.concat(Tt), ie, !1)
                  )
                );
        }
        matchSegmentAgainstRoute(D, m, S, x, $, ie) {
          let Ve;
          if ("**" === S.path) {
            const Ae = x.length > 0 ? Dr(x).parameters : {},
              Tt = new Un(
                x,
                Ae,
                Object.freeze({ ...this.urlTree.queryParams }),
                this.urlTree.fragment,
                d(S),
                bn(S),
                S.component ?? S._loadedComponent ?? null,
                S,
                g(S)
              );
            (Ve = (0, we.of)({
              snapshot: Tt,
              consumedSegments: [],
              remainingSegments: [],
            })),
              (m.children = {});
          } else
            Ve = Bi(m, S, x, D).pipe(
              (0, Ot.U)(
                ({
                  matched: Ae,
                  consumedSegments: Tt,
                  remainingSegments: hn,
                  parameters: ir,
                }) =>
                  Ae
                    ? {
                        snapshot: new Un(
                          Tt,
                          ir,
                          Object.freeze({ ...this.urlTree.queryParams }),
                          this.urlTree.fragment,
                          d(S),
                          bn(S),
                          S.component ?? S._loadedComponent ?? null,
                          S,
                          g(S)
                        ),
                        consumedSegments: Tt,
                        remainingSegments: hn,
                      }
                    : null
              )
            );
          return Ve.pipe(
            (0, qe.w)((Ae) =>
              null === Ae
                ? An(m)
                : this.getChildConfig((D = S._injector ?? D), S, x).pipe(
                    (0, qe.w)(({ routes: Tt }) => {
                      const hn = S._loadedInjector ?? D,
                        {
                          snapshot: ir,
                          consumedSegments: kn,
                          remainingSegments: Vs,
                        } = Ae,
                        { segmentGroup: ei, slicedSegments: Yi } = $s(
                          m,
                          kn,
                          Vs,
                          Tt
                        );
                      if (0 === Yi.length && ei.hasChildren())
                        return this.processChildren(hn, Tt, ei).pipe(
                          (0, Ot.U)((js) =>
                            null === js ? null : [new Or(ir, js)]
                          )
                        );
                      if (0 === Tt.length && 0 === Yi.length)
                        return (0, we.of)([new Or(ir, [])]);
                      const _r = bn(S) === $;
                      return this.processSegment(
                        hn,
                        Tt,
                        ei,
                        Yi,
                        _r ? $t : $,
                        !0
                      ).pipe((0, Ot.U)((js) => [new Or(ir, js)]));
                    })
                  )
            )
          );
        }
        getChildConfig(D, m, S) {
          return m.children
            ? (0, we.of)({ routes: m.children, injector: D })
            : m.loadChildren
            ? void 0 !== m._loadedRoutes
              ? (0, we.of)({
                  routes: m._loadedRoutes,
                  injector: m._loadedInjector,
                })
              : (function ut(v, D, m, S) {
                  const x = D.canLoad;
                  if (void 0 === x || 0 === x.length) return (0, we.of)(!0);
                  const $ = x.map((ie) => {
                    const Ve = j(ie, v);
                    return Bn(
                      (function T(v) {
                        return v && b(v.canLoad);
                      })(Ve)
                        ? Ve.canLoad(D, m)
                        : v.runInContext(() => Ve(D, m))
                    );
                  });
                  return (0, we.of)($).pipe(_t(), ht());
                })(D, m, S).pipe(
                  (0, Pe.z)((x) =>
                    x
                      ? this.configLoader.loadChildren(D, m).pipe(
                          Pt(($) => {
                            (m._loadedRoutes = $.routes),
                              (m._loadedInjector = $.injector);
                          })
                        )
                      : (function Fn(v) {
                          return (0, me._)(Fi(!1, 3));
                        })()
                  )
                )
            : (0, we.of)({ routes: [], injector: D });
        }
      }
      function F(v) {
        const D = v.value.routeConfig;
        return D && "" === D.path;
      }
      function a(v) {
        const D = [],
          m = new Set();
        for (const S of v) {
          if (!F(S)) {
            D.push(S);
            continue;
          }
          const x = D.find(($) => S.value.routeConfig === $.value.routeConfig);
          void 0 !== x ? (x.children.push(...S.children), m.add(x)) : D.push(S);
        }
        for (const S of m) {
          const x = a(S.children);
          D.push(new Or(S.value, x));
        }
        return D.filter((S) => !m.has(S));
      }
      function d(v) {
        return v.data || {};
      }
      function g(v) {
        return v.resolve || {};
      }
      function wt(v) {
        return "string" == typeof v.title || null === v.title;
      }
      function Ft(v) {
        return (0, qe.w)((D) => {
          const m = v(D);
          return m ? (0, _e.D)(m).pipe((0, Ot.U)(() => D)) : (0, we.of)(D);
        });
      }
      const Ut = new l.OlP("ROUTES");
      let xt = (() => {
        class v {
          constructor() {
            (this.componentLoaders = new WeakMap()),
              (this.childrenLoaders = new WeakMap()),
              (this.compiler = (0, l.f3M)(l.Sil));
          }
          loadComponent(m) {
            if (this.componentLoaders.get(m))
              return this.componentLoaders.get(m);
            if (m._loadedComponent) return (0, we.of)(m._loadedComponent);
            this.onLoadStartListener && this.onLoadStartListener(m);
            const S = Bn(m.loadComponent()).pipe(
                (0, Ot.U)(Zn),
                Pt(($) => {
                  this.onLoadEndListener && this.onLoadEndListener(m),
                    (m._loadedComponent = $);
                }),
                (0, Ct.x)(() => {
                  this.componentLoaders.delete(m);
                })
              ),
              x = new Vt(S, () => new In.x()).pipe(At());
            return this.componentLoaders.set(m, x), x;
          }
          loadChildren(m, S) {
            if (this.childrenLoaders.get(S)) return this.childrenLoaders.get(S);
            if (S._loadedRoutes)
              return (0, we.of)({
                routes: S._loadedRoutes,
                injector: S._loadedInjector,
              });
            this.onLoadStartListener && this.onLoadStartListener(S);
            const $ = (function jt(v, D, m, S) {
                return Bn(v.loadChildren()).pipe(
                  (0, Ot.U)(Zn),
                  (0, Pe.z)((x) =>
                    x instanceof l.YKP || Array.isArray(x)
                      ? (0, we.of)(x)
                      : (0, _e.D)(D.compileModuleAsync(x))
                  ),
                  (0, Ot.U)((x) => {
                    S && S(v);
                    let $,
                      ie,
                      Ve = !1;
                    return (
                      Array.isArray(x)
                        ? ((ie = x), !0)
                        : (($ = x.create(m).injector),
                          (ie = $.get(Ut, [], {
                            optional: !0,
                            self: !0,
                          }).flat())),
                      { routes: ie.map(oi), injector: $ }
                    );
                  })
                );
              })(S, this.compiler, m, this.onLoadEndListener).pipe(
                (0, Ct.x)(() => {
                  this.childrenLoaders.delete(S);
                })
              ),
              ie = new Vt($, () => new In.x()).pipe(At());
            return this.childrenLoaders.set(S, ie), ie;
          }
          static #e = (this.ɵfac = function (S) {
            return new (S || v)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: v,
            factory: v.ɵfac,
            providedIn: "root",
          }));
        }
        return v;
      })();
      function Zn(v) {
        return (function $n(v) {
          return v && "object" == typeof v && "default" in v;
        })(v)
          ? v.default
          : v;
      }
      let Hn = (() => {
        class v {
          get hasRequestedNavigation() {
            return 0 !== this.navigationId;
          }
          constructor() {
            (this.currentNavigation = null),
              (this.currentTransition = null),
              (this.lastSuccessfulNavigation = null),
              (this.events = new In.x()),
              (this.transitionAbortSubject = new In.x()),
              (this.configLoader = (0, l.f3M)(xt)),
              (this.environmentInjector = (0, l.f3M)(l.lqb)),
              (this.urlSerializer = (0, l.f3M)(ur)),
              (this.rootContexts = (0, l.f3M)(xn)),
              (this.inputBindingEnabled =
                null !== (0, l.f3M)(sn, { optional: !0 })),
              (this.navigationId = 0),
              (this.afterPreactivation = () => (0, we.of)(void 0)),
              (this.rootComponentType = null),
              (this.configLoader.onLoadEndListener = (x) =>
                this.events.next(new $i(x))),
              (this.configLoader.onLoadStartListener = (x) =>
                this.events.next(new Xi(x)));
          }
          complete() {
            this.transitions?.complete();
          }
          handleNavigationRequest(m) {
            const S = ++this.navigationId;
            this.transitions?.next({ ...this.transitions.value, ...m, id: S });
          }
          setupNavigations(m, S, x) {
            return (
              (this.transitions = new Ie.X({
                id: 0,
                currentUrlTree: S,
                currentRawUrl: S,
                currentBrowserUrl: S,
                extractedUrl: m.urlHandlingStrategy.extract(S),
                urlAfterRedirects: m.urlHandlingStrategy.extract(S),
                rawUrl: S,
                extras: {},
                resolve: null,
                reject: null,
                promise: Promise.resolve(!0),
                source: Ii,
                restoredState: null,
                currentSnapshot: x.snapshot,
                targetSnapshot: null,
                currentRouterState: x,
                targetRouterState: null,
                guards: { canActivateChecks: [], canDeactivateChecks: [] },
                guardsResult: null,
              })),
              this.transitions.pipe(
                (0, Oe.h)(($) => 0 !== $.id),
                (0, Ot.U)(($) => ({
                  ...$,
                  extractedUrl: m.urlHandlingStrategy.extract($.rawUrl),
                })),
                (0, qe.w)(($) => {
                  this.currentTransition = $;
                  let ie = !1,
                    Ve = !1;
                  return (0, we.of)($).pipe(
                    Pt((Ae) => {
                      this.currentNavigation = {
                        id: Ae.id,
                        initialUrl: Ae.rawUrl,
                        extractedUrl: Ae.extractedUrl,
                        trigger: Ae.source,
                        extras: Ae.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? {
                              ...this.lastSuccessfulNavigation,
                              previousNavigation: null,
                            }
                          : null,
                      };
                    }),
                    (0, qe.w)((Ae) => {
                      const Tt = Ae.currentBrowserUrl.toString(),
                        hn =
                          !m.navigated ||
                          Ae.extractedUrl.toString() !== Tt ||
                          Tt !== Ae.currentUrlTree.toString();
                      if (
                        !hn &&
                        "reload" !==
                          (Ae.extras.onSameUrlNavigation ??
                            m.onSameUrlNavigation)
                      ) {
                        const kn = "";
                        return (
                          this.events.next(
                            new Ar(
                              Ae.id,
                              this.urlSerializer.serialize(Ae.rawUrl),
                              kn,
                              0
                            )
                          ),
                          Ae.resolve(null),
                          dt.E
                        );
                      }
                      if (m.urlHandlingStrategy.shouldProcessUrl(Ae.rawUrl))
                        return (0, we.of)(Ae).pipe(
                          (0, qe.w)((kn) => {
                            const Vs = this.transitions?.getValue();
                            return (
                              this.events.next(
                                new Sr(
                                  kn.id,
                                  this.urlSerializer.serialize(kn.extractedUrl),
                                  kn.source,
                                  kn.restoredState
                                )
                              ),
                              Vs !== this.transitions?.getValue()
                                ? dt.E
                                : Promise.resolve(kn)
                            );
                          }),
                          (function M(v, D, m, S, x, $) {
                            return (0, Pe.z)((ie) =>
                              (function Hs(v, D, m, S, x, $, ie = "emptyOnly") {
                                return new ss(v, D, m, S, x, ie, $).recognize();
                              })(v, D, m, S, ie.extractedUrl, x, $).pipe(
                                (0, Ot.U)(({ state: Ve, tree: Ae }) => ({
                                  ...ie,
                                  targetSnapshot: Ve,
                                  urlAfterRedirects: Ae,
                                }))
                              )
                            );
                          })(
                            this.environmentInjector,
                            this.configLoader,
                            this.rootComponentType,
                            m.config,
                            this.urlSerializer,
                            m.paramsInheritanceStrategy
                          ),
                          Pt((kn) => {
                            ($.targetSnapshot = kn.targetSnapshot),
                              ($.urlAfterRedirects = kn.urlAfterRedirects),
                              (this.currentNavigation = {
                                ...this.currentNavigation,
                                finalUrl: kn.urlAfterRedirects,
                              });
                            const Vs = new fs(
                              kn.id,
                              this.urlSerializer.serialize(kn.extractedUrl),
                              this.urlSerializer.serialize(
                                kn.urlAfterRedirects
                              ),
                              kn.targetSnapshot
                            );
                            this.events.next(Vs);
                          })
                        );
                      if (
                        hn &&
                        m.urlHandlingStrategy.shouldProcessUrl(Ae.currentRawUrl)
                      ) {
                        const {
                            id: kn,
                            extractedUrl: Vs,
                            source: ei,
                            restoredState: Yi,
                            extras: _r,
                          } = Ae,
                          js = new Sr(
                            kn,
                            this.urlSerializer.serialize(Vs),
                            ei,
                            Yi
                          );
                        this.events.next(js);
                        const Nl = Zr(0, this.rootComponentType).snapshot;
                        return (
                          (this.currentTransition = $ =
                            {
                              ...Ae,
                              targetSnapshot: Nl,
                              urlAfterRedirects: Vs,
                              extras: {
                                ..._r,
                                skipLocationChange: !1,
                                replaceUrl: !1,
                              },
                            }),
                          (0, we.of)($)
                        );
                      }
                      {
                        const kn = "";
                        return (
                          this.events.next(
                            new Ar(
                              Ae.id,
                              this.urlSerializer.serialize(Ae.extractedUrl),
                              kn,
                              1
                            )
                          ),
                          Ae.resolve(null),
                          dt.E
                        );
                      }
                    }),
                    Pt((Ae) => {
                      const Tt = new Ki(
                        Ae.id,
                        this.urlSerializer.serialize(Ae.extractedUrl),
                        this.urlSerializer.serialize(Ae.urlAfterRedirects),
                        Ae.targetSnapshot
                      );
                      this.events.next(Tt);
                    }),
                    (0, Ot.U)(
                      (Ae) => (
                        (this.currentTransition = $ =
                          {
                            ...Ae,
                            guards: I(
                              Ae.targetSnapshot,
                              Ae.currentSnapshot,
                              this.rootContexts
                            ),
                          }),
                        $
                      )
                    ),
                    (function ct(v, D) {
                      return (0, Pe.z)((m) => {
                        const {
                          targetSnapshot: S,
                          currentSnapshot: x,
                          guards: {
                            canActivateChecks: $,
                            canDeactivateChecks: ie,
                          },
                        } = m;
                        return 0 === ie.length && 0 === $.length
                          ? (0, we.of)({ ...m, guardsResult: !0 })
                          : (function We(v, D, m, S) {
                              return (0, _e.D)(v).pipe(
                                (0, Pe.z)((x) =>
                                  (function ke(v, D, m, S, x) {
                                    const $ =
                                      D && D.routeConfig
                                        ? D.routeConfig.canDeactivate
                                        : null;
                                    if (!$ || 0 === $.length)
                                      return (0, we.of)(!0);
                                    const ie = $.map((Ve) => {
                                      const Ae = Xn(D) ?? x,
                                        Tt = j(Ve, Ae);
                                      return Bn(
                                        (function te(v) {
                                          return v && b(v.canDeactivate);
                                        })(Tt)
                                          ? Tt.canDeactivate(v, D, m, S)
                                          : Ae.runInContext(() =>
                                              Tt(v, D, m, S)
                                            )
                                      ).pipe(an());
                                    });
                                    return (0, we.of)(ie).pipe(_t());
                                  })(x.component, x.route, m, D, S)
                                ),
                                an((x) => !0 !== x, !0)
                              );
                            })(ie, S, x, v).pipe(
                              (0, Pe.z)((Ve) =>
                                Ve &&
                                (function p(v) {
                                  return "boolean" == typeof v;
                                })(Ve)
                                  ? (function Ze(v, D, m, S) {
                                      return (0, _e.D)(D).pipe(
                                        (0, Tn.b)((x) =>
                                          Se(
                                            (function Ke(v, D) {
                                              return (
                                                null !== v && D && D(new Qi(v)),
                                                (0, we.of)(!0)
                                              );
                                            })(x.route.parent, S),
                                            (function at(v, D) {
                                              return (
                                                null !== v && D && D(new Fs(v)),
                                                (0, we.of)(!0)
                                              );
                                            })(x.route, S),
                                            (function de(v, D, m) {
                                              const S = D[D.length - 1],
                                                $ = D.slice(0, D.length - 1)
                                                  .reverse()
                                                  .map((ie) =>
                                                    (function U(v) {
                                                      const D = v.routeConfig
                                                        ? v.routeConfig
                                                            .canActivateChild
                                                        : null;
                                                      return D && 0 !== D.length
                                                        ? { node: v, guards: D }
                                                        : null;
                                                    })(ie)
                                                  )
                                                  .filter((ie) => null !== ie)
                                                  .map((ie) =>
                                                    De(() => {
                                                      const Ve = ie.guards.map(
                                                        (Ae) => {
                                                          const Tt =
                                                              Xn(ie.node) ?? m,
                                                            hn = j(Ae, Tt);
                                                          return Bn(
                                                            (function Y(v) {
                                                              return (
                                                                v &&
                                                                b(
                                                                  v.canActivateChild
                                                                )
                                                              );
                                                            })(hn)
                                                              ? hn.canActivateChild(
                                                                  S,
                                                                  v
                                                                )
                                                              : Tt.runInContext(
                                                                  () => hn(S, v)
                                                                )
                                                          ).pipe(an());
                                                        }
                                                      );
                                                      return (0, we.of)(
                                                        Ve
                                                      ).pipe(_t());
                                                    })
                                                  );
                                              return (0, we.of)($).pipe(_t());
                                            })(v, x.path, m),
                                            (function Le(v, D, m) {
                                              const S = D.routeConfig
                                                ? D.routeConfig.canActivate
                                                : null;
                                              if (!S || 0 === S.length)
                                                return (0, we.of)(!0);
                                              const x = S.map(($) =>
                                                De(() => {
                                                  const ie = Xn(D) ?? m,
                                                    Ve = j($, ie);
                                                  return Bn(
                                                    (function R(v) {
                                                      return (
                                                        v && b(v.canActivate)
                                                      );
                                                    })(Ve)
                                                      ? Ve.canActivate(D, v)
                                                      : ie.runInContext(() =>
                                                          Ve(D, v)
                                                        )
                                                  ).pipe(an());
                                                })
                                              );
                                              return (0, we.of)(x).pipe(_t());
                                            })(v, x.route, m)
                                          )
                                        ),
                                        an((x) => !0 !== x, !0)
                                      );
                                    })(S, $, v, D)
                                  : (0, we.of)(Ve)
                              ),
                              (0, Ot.U)((Ve) => ({ ...m, guardsResult: Ve }))
                            );
                      });
                    })(this.environmentInjector, (Ae) => this.events.next(Ae)),
                    Pt((Ae) => {
                      if (
                        (($.guardsResult = Ae.guardsResult),
                        Ln(Ae.guardsResult))
                      )
                        throw Qr(0, Ae.guardsResult);
                      const Tt = new bi(
                        Ae.id,
                        this.urlSerializer.serialize(Ae.extractedUrl),
                        this.urlSerializer.serialize(Ae.urlAfterRedirects),
                        Ae.targetSnapshot,
                        !!Ae.guardsResult
                      );
                      this.events.next(Tt);
                    }),
                    (0, Oe.h)(
                      (Ae) =>
                        !!Ae.guardsResult ||
                        (this.cancelNavigationTransition(Ae, "", 3), !1)
                    ),
                    Ft((Ae) => {
                      if (Ae.guards.canActivateChecks.length)
                        return (0, we.of)(Ae).pipe(
                          Pt((Tt) => {
                            const hn = new Ss(
                              Tt.id,
                              this.urlSerializer.serialize(Tt.extractedUrl),
                              this.urlSerializer.serialize(
                                Tt.urlAfterRedirects
                              ),
                              Tt.targetSnapshot
                            );
                            this.events.next(hn);
                          }),
                          (0, qe.w)((Tt) => {
                            let hn = !1;
                            return (0, we.of)(Tt).pipe(
                              (function H(v, D) {
                                return (0, Pe.z)((m) => {
                                  const {
                                    targetSnapshot: S,
                                    guards: { canActivateChecks: x },
                                  } = m;
                                  if (!x.length) return (0, we.of)(m);
                                  let $ = 0;
                                  return (0, _e.D)(x).pipe(
                                    (0, Tn.b)((ie) =>
                                      (function q(v, D, m, S) {
                                        const x = v.routeConfig,
                                          $ = v._resolve;
                                        return (
                                          void 0 !== x?.title &&
                                            !wt(x) &&
                                            ($[Kn] = x.title),
                                          (function pe(v, D, m, S) {
                                            const x = (function ze(v) {
                                              return [
                                                ...Object.keys(v),
                                                ...Object.getOwnPropertySymbols(
                                                  v
                                                ),
                                              ];
                                            })(v);
                                            if (0 === x.length)
                                              return (0, we.of)({});
                                            const $ = {};
                                            return (0, _e.D)(x).pipe(
                                              (0, Pe.z)((ie) =>
                                                (function yt(v, D, m, S) {
                                                  const x = Xn(D) ?? S,
                                                    $ = j(v, x);
                                                  return Bn(
                                                    $.resolve
                                                      ? $.resolve(D, m)
                                                      : x.runInContext(() =>
                                                          $(D, m)
                                                        )
                                                  );
                                                })(v[ie], D, m, S).pipe(
                                                  an(),
                                                  Pt((Ve) => {
                                                    $[ie] = Ve;
                                                  })
                                                )
                                              ),
                                              Qe(1),
                                              (function He(v) {
                                                return (0, Ot.U)(() => v);
                                              })($),
                                              (0, ln.K)((ie) =>
                                                nt(ie) ? dt.E : (0, me._)(ie)
                                              )
                                            );
                                          })($, v, D, S).pipe(
                                            (0, Ot.U)(
                                              (ie) => (
                                                (v._resolvedData = ie),
                                                (v.data = Rt(v, m).resolve),
                                                x &&
                                                  wt(x) &&
                                                  (v.data[Kn] = x.title),
                                                null
                                              )
                                            )
                                          )
                                        );
                                      })(ie.route, S, v, D)
                                    ),
                                    Pt(() => $++),
                                    Qe(1),
                                    (0, Pe.z)((ie) =>
                                      $ === x.length ? (0, we.of)(m) : dt.E
                                    )
                                  );
                                });
                              })(
                                m.paramsInheritanceStrategy,
                                this.environmentInjector
                              ),
                              Pt({
                                next: () => (hn = !0),
                                complete: () => {
                                  hn ||
                                    this.cancelNavigationTransition(Tt, "", 2);
                                },
                              })
                            );
                          }),
                          Pt((Tt) => {
                            const hn = new hs(
                              Tt.id,
                              this.urlSerializer.serialize(Tt.extractedUrl),
                              this.urlSerializer.serialize(
                                Tt.urlAfterRedirects
                              ),
                              Tt.targetSnapshot
                            );
                            this.events.next(hn);
                          })
                        );
                    }),
                    Ft((Ae) => {
                      const Tt = (hn) => {
                        const ir = [];
                        hn.routeConfig?.loadComponent &&
                          !hn.routeConfig._loadedComponent &&
                          ir.push(
                            this.configLoader
                              .loadComponent(hn.routeConfig)
                              .pipe(
                                Pt((kn) => {
                                  hn.component = kn;
                                }),
                                (0, Ot.U)(() => {})
                              )
                          );
                        for (const kn of hn.children) ir.push(...Tt(kn));
                        return ir;
                      };
                      return ot(Tt(Ae.targetSnapshot.root)).pipe(
                        tt(),
                        (0, re.q)(1)
                      );
                    }),
                    Ft(() => this.afterPreactivation()),
                    (0, Ot.U)((Ae) => {
                      const Tt = (function ts(v, D, m) {
                        const S = si(v, D._root, m ? m._root : void 0);
                        return new Fr(S, D);
                      })(
                        m.routeReuseStrategy,
                        Ae.targetSnapshot,
                        Ae.currentRouterState
                      );
                      return (
                        (this.currentTransition = $ =
                          { ...Ae, targetRouterState: Tt }),
                        $
                      );
                    }),
                    Pt(() => {
                      this.events.next(new ri());
                    }),
                    ((v, D, m, S) =>
                      (0, Ot.U)(
                        (x) => (
                          new _(
                            D,
                            x.targetRouterState,
                            x.currentRouterState,
                            m,
                            S
                          ).activate(v),
                          x
                        )
                      ))(
                      this.rootContexts,
                      m.routeReuseStrategy,
                      (Ae) => this.events.next(Ae),
                      this.inputBindingEnabled
                    ),
                    (0, re.q)(1),
                    Pt({
                      next: (Ae) => {
                        (ie = !0),
                          (this.lastSuccessfulNavigation =
                            this.currentNavigation),
                          this.events.next(
                            new wi(
                              Ae.id,
                              this.urlSerializer.serialize(Ae.extractedUrl),
                              this.urlSerializer.serialize(Ae.urlAfterRedirects)
                            )
                          ),
                          m.titleStrategy?.updateTitle(
                            Ae.targetRouterState.snapshot
                          ),
                          Ae.resolve(!0);
                      },
                      complete: () => {
                        ie = !0;
                      },
                    }),
                    (0, mn.R)(
                      this.transitionAbortSubject.pipe(
                        Pt((Ae) => {
                          throw Ae;
                        })
                      )
                    ),
                    (0, Ct.x)(() => {
                      ie || Ve || this.cancelNavigationTransition($, "", 1),
                        this.currentNavigation?.id === $.id &&
                          (this.currentNavigation = null);
                    }),
                    (0, ln.K)((Ae) => {
                      if (((Ve = !0), Nn(Ae)))
                        this.events.next(
                          new hi(
                            $.id,
                            this.urlSerializer.serialize($.extractedUrl),
                            Ae.message,
                            Ae.cancellationCode
                          )
                        ),
                          (function Hi(v) {
                            return Nn(v) && Ln(v.url);
                          })(Ae)
                            ? this.events.next(new Ei(Ae.url))
                            : $.resolve(!1);
                      else {
                        this.events.next(
                          new ds(
                            $.id,
                            this.urlSerializer.serialize($.extractedUrl),
                            Ae,
                            $.targetSnapshot ?? void 0
                          )
                        );
                        try {
                          $.resolve(m.errorHandler(Ae));
                        } catch (Tt) {
                          $.reject(Tt);
                        }
                      }
                      return dt.E;
                    })
                  );
                })
              )
            );
          }
          cancelNavigationTransition(m, S, x) {
            const $ = new hi(
              m.id,
              this.urlSerializer.serialize(m.extractedUrl),
              S,
              x
            );
            this.events.next($), m.resolve(!1);
          }
          static #e = (this.ɵfac = function (S) {
            return new (S || v)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: v,
            factory: v.ɵfac,
            providedIn: "root",
          }));
        }
        return v;
      })();
      function Qn(v) {
        return v !== Ii;
      }
      let rr = (() => {
          class v {
            buildTitle(m) {
              let S,
                x = m.root;
              for (; void 0 !== x; )
                (S = this.getResolvedTitleForRoute(x) ?? S),
                  (x = x.children.find(($) => $.outlet === $t));
              return S;
            }
            getResolvedTitleForRoute(m) {
              return m.data[Kn];
            }
            static #e = (this.ɵfac = function (S) {
              return new (S || v)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: v,
              factory: function () {
                return (0, l.f3M)(Ti);
              },
              providedIn: "root",
            }));
          }
          return v;
        })(),
        Ti = (() => {
          class v extends rr {
            constructor(m) {
              super(), (this.title = m);
            }
            updateTitle(m) {
              const S = this.buildTitle(m);
              void 0 !== S && this.title.setTitle(S);
            }
            static #e = (this.ɵfac = function (S) {
              return new (S || v)(l.LFG(cn.Dx));
            });
            static #t = (this.ɵprov = l.Yz7({
              token: v,
              factory: v.ɵfac,
              providedIn: "root",
            }));
          }
          return v;
        })(),
        jr = (() => {
          class v {
            static #e = (this.ɵfac = function (S) {
              return new (S || v)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: v,
              factory: function () {
                return (0, l.f3M)(gs);
              },
              providedIn: "root",
            }));
          }
          return v;
        })();
      class zr {
        shouldDetach(D) {
          return !1;
        }
        store(D, m) {}
        shouldAttach(D) {
          return !1;
        }
        retrieve(D) {
          return null;
        }
        shouldReuseRoute(D, m) {
          return D.routeConfig === m.routeConfig;
        }
      }
      let gs = (() => {
        class v extends zr {
          static #e = (this.ɵfac = (function () {
            let m;
            return function (x) {
              return (m || (m = l.n5z(v)))(x || v);
            };
          })());
          static #t = (this.ɵprov = l.Yz7({
            token: v,
            factory: v.ɵfac,
            providedIn: "root",
          }));
        }
        return v;
      })();
      const li = new l.OlP("", { providedIn: "root", factory: () => ({}) });
      let ms = (() => {
          class v {
            static #e = (this.ɵfac = function (S) {
              return new (S || v)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: v,
              factory: function () {
                return (0, l.f3M)(Wi);
              },
              providedIn: "root",
            }));
          }
          return v;
        })(),
        Wi = (() => {
          class v {
            shouldProcessUrl(m) {
              return !0;
            }
            extract(m) {
              return m;
            }
            merge(m, S) {
              return m;
            }
            static #e = (this.ɵfac = function (S) {
              return new (S || v)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: v,
              factory: v.ɵfac,
              providedIn: "root",
            }));
          }
          return v;
        })();
      var Vi = (function (v) {
        return (
          (v[(v.COMPLETE = 0)] = "COMPLETE"),
          (v[(v.FAILED = 1)] = "FAILED"),
          (v[(v.REDIRECTING = 2)] = "REDIRECTING"),
          v
        );
      })(Vi || {});
      function ys(v, D) {
        v.events
          .pipe(
            (0, Oe.h)(
              (m) =>
                m instanceof wi ||
                m instanceof hi ||
                m instanceof ds ||
                m instanceof Ar
            ),
            (0, Ot.U)((m) =>
              m instanceof wi || m instanceof Ar
                ? Vi.COMPLETE
                : m instanceof hi && (0 === m.code || 1 === m.code)
                ? Vi.REDIRECTING
                : Vi.FAILED
            ),
            (0, Oe.h)((m) => m !== Vi.REDIRECTING),
            (0, re.q)(1)
          )
          .subscribe(() => {
            D();
          });
      }
      function Jn(v) {
        throw v;
      }
      function to(v, D, m) {
        return D.parse("/");
      }
      const Gt = {
          paths: "exact",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "exact",
        },
        Ht = {
          paths: "subset",
          fragment: "ignored",
          matrixParams: "ignored",
          queryParams: "subset",
        };
      let Yt = (() => {
        class v {
          get navigationId() {
            return this.navigationTransitions.navigationId;
          }
          get browserPageId() {
            return "computed" !== this.canceledNavigationResolution
              ? this.currentPageId
              : this.location.getState()?.ɵrouterPageId ?? this.currentPageId;
          }
          get events() {
            return this._events;
          }
          constructor() {
            (this.disposed = !1),
              (this.currentPageId = 0),
              (this.console = (0, l.f3M)(l.c2e)),
              (this.isNgZoneEnabled = !1),
              (this._events = new In.x()),
              (this.options = (0, l.f3M)(li, { optional: !0 }) || {}),
              (this.pendingTasks = (0, l.f3M)(l.HDt)),
              (this.errorHandler = this.options.errorHandler || Jn),
              (this.malformedUriErrorHandler =
                this.options.malformedUriErrorHandler || to),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1),
              (this.urlHandlingStrategy = (0, l.f3M)(ms)),
              (this.routeReuseStrategy = (0, l.f3M)(jr)),
              (this.titleStrategy = (0, l.f3M)(rr)),
              (this.onSameUrlNavigation =
                this.options.onSameUrlNavigation || "ignore"),
              (this.paramsInheritanceStrategy =
                this.options.paramsInheritanceStrategy || "emptyOnly"),
              (this.urlUpdateStrategy =
                this.options.urlUpdateStrategy || "deferred"),
              (this.canceledNavigationResolution =
                this.options.canceledNavigationResolution || "replace"),
              (this.config = (0, l.f3M)(Ut, { optional: !0 })?.flat() ?? []),
              (this.navigationTransitions = (0, l.f3M)(Hn)),
              (this.urlSerializer = (0, l.f3M)(ur)),
              (this.location = (0, l.f3M)(qt.Ye)),
              (this.componentInputBindingEnabled = !!(0, l.f3M)(sn, {
                optional: !0,
              })),
              (this.eventsSubscription = new Ne.w0()),
              (this.isNgZoneEnabled =
                (0, l.f3M)(l.R0b) instanceof l.R0b && l.R0b.isInAngularZone()),
              this.resetConfig(this.config),
              (this.currentUrlTree = new wr()),
              (this.rawUrlTree = this.currentUrlTree),
              (this.browserUrlTree = this.currentUrlTree),
              (this.routerState = Zr(0, null)),
              this.navigationTransitions
                .setupNavigations(this, this.currentUrlTree, this.routerState)
                .subscribe(
                  (m) => {
                    (this.lastSuccessfulId = m.id),
                      (this.currentPageId = this.browserPageId);
                  },
                  (m) => {
                    this.console.warn(`Unhandled Navigation Error: ${m}`);
                  }
                ),
              this.subscribeToNavigationEvents();
          }
          subscribeToNavigationEvents() {
            const m = this.navigationTransitions.events.subscribe((S) => {
              try {
                const { currentTransition: x } = this.navigationTransitions;
                if (null === x) return void (yr(S) && this._events.next(S));
                if (S instanceof Sr)
                  Qn(x.source) && (this.browserUrlTree = x.extractedUrl);
                else if (S instanceof Ar) this.rawUrlTree = x.rawUrl;
                else if (S instanceof fs) {
                  if ("eager" === this.urlUpdateStrategy) {
                    if (!x.extras.skipLocationChange) {
                      const $ = this.urlHandlingStrategy.merge(
                        x.urlAfterRedirects,
                        x.rawUrl
                      );
                      this.setBrowserUrl($, x);
                    }
                    this.browserUrlTree = x.urlAfterRedirects;
                  }
                } else if (S instanceof ri)
                  (this.currentUrlTree = x.urlAfterRedirects),
                    (this.rawUrlTree = this.urlHandlingStrategy.merge(
                      x.urlAfterRedirects,
                      x.rawUrl
                    )),
                    (this.routerState = x.targetRouterState),
                    "deferred" === this.urlUpdateStrategy &&
                      (x.extras.skipLocationChange ||
                        this.setBrowserUrl(this.rawUrlTree, x),
                      (this.browserUrlTree = x.urlAfterRedirects));
                else if (S instanceof hi)
                  0 !== S.code && 1 !== S.code && (this.navigated = !0),
                    (3 === S.code || 2 === S.code) && this.restoreHistory(x);
                else if (S instanceof Ei) {
                  const $ = this.urlHandlingStrategy.merge(
                      S.url,
                      x.currentRawUrl
                    ),
                    ie = {
                      skipLocationChange: x.extras.skipLocationChange,
                      replaceUrl:
                        "eager" === this.urlUpdateStrategy || Qn(x.source),
                    };
                  this.scheduleNavigation($, Ii, null, ie, {
                    resolve: x.resolve,
                    reject: x.reject,
                    promise: x.promise,
                  });
                }
                S instanceof ds && this.restoreHistory(x, !0),
                  S instanceof wi && (this.navigated = !0),
                  yr(S) && this._events.next(S);
              } catch (x) {
                this.navigationTransitions.transitionAbortSubject.next(x);
              }
            });
            this.eventsSubscription.add(m);
          }
          resetRootComponentType(m) {
            (this.routerState.root.component = m),
              (this.navigationTransitions.rootComponentType = m);
          }
          initialNavigation() {
            if (
              (this.setUpLocationChangeListener(),
              !this.navigationTransitions.hasRequestedNavigation)
            ) {
              const m = this.location.getState();
              this.navigateToSyncWithBrowser(this.location.path(!0), Ii, m);
            }
          }
          setUpLocationChangeListener() {
            this.locationSubscription ||
              (this.locationSubscription = this.location.subscribe((m) => {
                const S = "popstate" === m.type ? "popstate" : "hashchange";
                "popstate" === S &&
                  setTimeout(() => {
                    this.navigateToSyncWithBrowser(m.url, S, m.state);
                  }, 0);
              }));
          }
          navigateToSyncWithBrowser(m, S, x) {
            const $ = { replaceUrl: !0 },
              ie = x?.navigationId ? x : null;
            if (x) {
              const Ae = { ...x };
              delete Ae.navigationId,
                delete Ae.ɵrouterPageId,
                0 !== Object.keys(Ae).length && ($.state = Ae);
            }
            const Ve = this.parseUrl(m);
            this.scheduleNavigation(Ve, S, ie, $);
          }
          get url() {
            return this.serializeUrl(this.currentUrlTree);
          }
          getCurrentNavigation() {
            return this.navigationTransitions.currentNavigation;
          }
          get lastSuccessfulNavigation() {
            return this.navigationTransitions.lastSuccessfulNavigation;
          }
          resetConfig(m) {
            (this.config = m.map(oi)),
              (this.navigated = !1),
              (this.lastSuccessfulId = -1);
          }
          ngOnDestroy() {
            this.dispose();
          }
          dispose() {
            this.navigationTransitions.complete(),
              this.locationSubscription &&
                (this.locationSubscription.unsubscribe(),
                (this.locationSubscription = void 0)),
              (this.disposed = !0),
              this.eventsSubscription.unsubscribe();
          }
          createUrlTree(m, S = {}) {
            const {
                relativeTo: x,
                queryParams: $,
                fragment: ie,
                queryParamsHandling: Ve,
                preserveFragment: Ae,
              } = S,
              Tt = Ae ? this.currentUrlTree.fragment : ie;
            let ir,
              hn = null;
            switch (Ve) {
              case "merge":
                hn = { ...this.currentUrlTree.queryParams, ...$ };
                break;
              case "preserve":
                hn = this.currentUrlTree.queryParams;
                break;
              default:
                hn = $ || null;
            }
            null !== hn && (hn = this.removeEmptyProps(hn));
            try {
              ir = er(x ? x.snapshot : this.routerState.snapshot.root);
            } catch {
              ("string" != typeof m[0] || !m[0].startsWith("/")) && (m = []),
                (ir = this.currentUrlTree.root);
            }
            return jn(ir, m, hn, Tt ?? null);
          }
          navigateByUrl(m, S = { skipLocationChange: !1 }) {
            const x = Ln(m) ? m : this.parseUrl(m),
              $ = this.urlHandlingStrategy.merge(x, this.rawUrlTree);
            return this.scheduleNavigation($, Ii, null, S);
          }
          navigate(m, S = { skipLocationChange: !1 }) {
            return (
              (function Pn(v) {
                for (let D = 0; D < v.length; D++)
                  if (null == v[D]) throw new l.vHH(4008, !1);
              })(m),
              this.navigateByUrl(this.createUrlTree(m, S), S)
            );
          }
          serializeUrl(m) {
            return this.urlSerializer.serialize(m);
          }
          parseUrl(m) {
            let S;
            try {
              S = this.urlSerializer.parse(m);
            } catch (x) {
              S = this.malformedUriErrorHandler(x, this.urlSerializer, m);
            }
            return S;
          }
          isActive(m, S) {
            let x;
            if (((x = !0 === S ? { ...Gt } : !1 === S ? { ...Ht } : S), Ln(m)))
              return Wr(this.currentUrlTree, m, x);
            const $ = this.parseUrl(m);
            return Wr(this.currentUrlTree, $, x);
          }
          removeEmptyProps(m) {
            return Object.keys(m).reduce((S, x) => {
              const $ = m[x];
              return null != $ && (S[x] = $), S;
            }, {});
          }
          scheduleNavigation(m, S, x, $, ie) {
            if (this.disposed) return Promise.resolve(!1);
            let Ve, Ae, Tt;
            ie
              ? ((Ve = ie.resolve), (Ae = ie.reject), (Tt = ie.promise))
              : (Tt = new Promise((ir, kn) => {
                  (Ve = ir), (Ae = kn);
                }));
            const hn = this.pendingTasks.add();
            return (
              ys(this, () => {
                queueMicrotask(() => this.pendingTasks.remove(hn));
              }),
              this.navigationTransitions.handleNavigationRequest({
                source: S,
                restoredState: x,
                currentUrlTree: this.currentUrlTree,
                currentRawUrl: this.currentUrlTree,
                currentBrowserUrl: this.browserUrlTree,
                rawUrl: m,
                extras: $,
                resolve: Ve,
                reject: Ae,
                promise: Tt,
                currentSnapshot: this.routerState.snapshot,
                currentRouterState: this.routerState,
              }),
              Tt.catch((ir) => Promise.reject(ir))
            );
          }
          setBrowserUrl(m, S) {
            const x = this.urlSerializer.serialize(m);
            if (this.location.isCurrentPathEqualTo(x) || S.extras.replaceUrl) {
              const ie = {
                ...S.extras.state,
                ...this.generateNgRouterState(S.id, this.browserPageId),
              };
              this.location.replaceState(x, "", ie);
            } else {
              const $ = {
                ...S.extras.state,
                ...this.generateNgRouterState(S.id, this.browserPageId + 1),
              };
              this.location.go(x, "", $);
            }
          }
          restoreHistory(m, S = !1) {
            if ("computed" === this.canceledNavigationResolution) {
              const $ = this.currentPageId - this.browserPageId;
              0 !== $
                ? this.location.historyGo($)
                : this.currentUrlTree ===
                    this.getCurrentNavigation()?.finalUrl &&
                  0 === $ &&
                  (this.resetState(m),
                  (this.browserUrlTree = m.currentUrlTree),
                  this.resetUrlToCurrentUrlTree());
            } else
              "replace" === this.canceledNavigationResolution &&
                (S && this.resetState(m), this.resetUrlToCurrentUrlTree());
          }
          resetState(m) {
            (this.routerState = m.currentRouterState),
              (this.currentUrlTree = m.currentUrlTree),
              (this.rawUrlTree = this.urlHandlingStrategy.merge(
                this.currentUrlTree,
                m.rawUrl
              ));
          }
          resetUrlToCurrentUrlTree() {
            this.location.replaceState(
              this.urlSerializer.serialize(this.rawUrlTree),
              "",
              this.generateNgRouterState(
                this.lastSuccessfulId,
                this.currentPageId
              )
            );
          }
          generateNgRouterState(m, S) {
            return "computed" === this.canceledNavigationResolution
              ? { navigationId: m, ɵrouterPageId: S }
              : { navigationId: m };
          }
          static #e = (this.ɵfac = function (S) {
            return new (S || v)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: v,
            factory: v.ɵfac,
            providedIn: "root",
          }));
        }
        return v;
      })();
      function yr(v) {
        return !(v instanceof ri || v instanceof Ei);
      }
      let hr = (() => {
        class v {
          constructor(m, S, x, $, ie, Ve) {
            (this.router = m),
              (this.route = S),
              (this.tabIndexAttribute = x),
              (this.renderer = $),
              (this.el = ie),
              (this.locationStrategy = Ve),
              (this.href = null),
              (this.commands = null),
              (this.onChanges = new In.x()),
              (this.preserveFragment = !1),
              (this.skipLocationChange = !1),
              (this.replaceUrl = !1);
            const Ae = ie.nativeElement.tagName?.toLowerCase();
            (this.isAnchorElement = "a" === Ae || "area" === Ae),
              this.isAnchorElement
                ? (this.subscription = m.events.subscribe((Tt) => {
                    Tt instanceof wi && this.updateHref();
                  }))
                : this.setTabIndexIfNotOnNativeEl("0");
          }
          setTabIndexIfNotOnNativeEl(m) {
            null != this.tabIndexAttribute ||
              this.isAnchorElement ||
              this.applyAttributeValue("tabindex", m);
          }
          ngOnChanges(m) {
            this.isAnchorElement && this.updateHref(),
              this.onChanges.next(this);
          }
          set routerLink(m) {
            null != m
              ? ((this.commands = Array.isArray(m) ? m : [m]),
                this.setTabIndexIfNotOnNativeEl("0"))
              : ((this.commands = null), this.setTabIndexIfNotOnNativeEl(null));
          }
          onClick(m, S, x, $, ie) {
            return (
              !!(
                null === this.urlTree ||
                (this.isAnchorElement &&
                  (0 !== m ||
                    S ||
                    x ||
                    $ ||
                    ie ||
                    ("string" == typeof this.target && "_self" != this.target)))
              ) ||
              (this.router.navigateByUrl(this.urlTree, {
                skipLocationChange: this.skipLocationChange,
                replaceUrl: this.replaceUrl,
                state: this.state,
              }),
              !this.isAnchorElement)
            );
          }
          ngOnDestroy() {
            this.subscription?.unsubscribe();
          }
          updateHref() {
            this.href =
              null !== this.urlTree && this.locationStrategy
                ? this.locationStrategy?.prepareExternalUrl(
                    this.router.serializeUrl(this.urlTree)
                  )
                : null;
            const m =
              null === this.href
                ? null
                : (0, l.P3R)(
                    this.href,
                    this.el.nativeElement.tagName.toLowerCase(),
                    "href"
                  );
            this.applyAttributeValue("href", m);
          }
          applyAttributeValue(m, S) {
            const x = this.renderer,
              $ = this.el.nativeElement;
            null !== S ? x.setAttribute($, m, S) : x.removeAttribute($, m);
          }
          get urlTree() {
            return null === this.commands
              ? null
              : this.router.createUrlTree(this.commands, {
                  relativeTo:
                    void 0 !== this.relativeTo ? this.relativeTo : this.route,
                  queryParams: this.queryParams,
                  fragment: this.fragment,
                  queryParamsHandling: this.queryParamsHandling,
                  preserveFragment: this.preserveFragment,
                });
          }
          static #e = (this.ɵfac = function (S) {
            return new (S || v)(
              l.Y36(Yt),
              l.Y36(Cn),
              l.$8M("tabindex"),
              l.Y36(l.Qsj),
              l.Y36(l.SBq),
              l.Y36(qt.S$)
            );
          });
          static #t = (this.ɵdir = l.lG2({
            type: v,
            selectors: [["", "routerLink", ""]],
            hostVars: 1,
            hostBindings: function (S, x) {
              1 & S &&
                l.NdJ("click", function (ie) {
                  return x.onClick(
                    ie.button,
                    ie.ctrlKey,
                    ie.shiftKey,
                    ie.altKey,
                    ie.metaKey
                  );
                }),
                2 & S && l.uIk("target", x.target);
            },
            inputs: {
              target: "target",
              queryParams: "queryParams",
              fragment: "fragment",
              queryParamsHandling: "queryParamsHandling",
              state: "state",
              relativeTo: "relativeTo",
              preserveFragment: ["preserveFragment", "preserveFragment", l.VuI],
              skipLocationChange: [
                "skipLocationChange",
                "skipLocationChange",
                l.VuI,
              ],
              replaceUrl: ["replaceUrl", "replaceUrl", l.VuI],
              routerLink: "routerLink",
            },
            standalone: !0,
            features: [l.Xq5, l.TTD],
          }));
        }
        return v;
      })();
      class dr {}
      let Gr = (() => {
        class v {
          constructor(m, S, x, $, ie) {
            (this.router = m),
              (this.injector = x),
              (this.preloadingStrategy = $),
              (this.loader = ie);
          }
          setUpPreloading() {
            this.subscription = this.router.events
              .pipe(
                (0, Oe.h)((m) => m instanceof wi),
                (0, Tn.b)(() => this.preload())
              )
              .subscribe(() => {});
          }
          preload() {
            return this.processRoutes(this.injector, this.router.config);
          }
          ngOnDestroy() {
            this.subscription && this.subscription.unsubscribe();
          }
          processRoutes(m, S) {
            const x = [];
            for (const $ of S) {
              $.providers &&
                !$._injector &&
                ($._injector = (0, l.MMx)($.providers, m, `Route: ${$.path}`));
              const ie = $._injector ?? m,
                Ve = $._loadedInjector ?? ie;
              (($.loadChildren && !$._loadedRoutes && void 0 === $.canLoad) ||
                ($.loadComponent && !$._loadedComponent)) &&
                x.push(this.preloadConfig(ie, $)),
                ($.children || $._loadedRoutes) &&
                  x.push(this.processRoutes(Ve, $.children ?? $._loadedRoutes));
            }
            return (0, _e.D)(x).pipe((0, $e.J)());
          }
          preloadConfig(m, S) {
            return this.preloadingStrategy.preload(S, () => {
              let x;
              x =
                S.loadChildren && void 0 === S.canLoad
                  ? this.loader.loadChildren(m, S)
                  : (0, we.of)(null);
              const $ = x.pipe(
                (0, Pe.z)((ie) =>
                  null === ie
                    ? (0, we.of)(void 0)
                    : ((S._loadedRoutes = ie.routes),
                      (S._loadedInjector = ie.injector),
                      this.processRoutes(ie.injector ?? m, ie.routes))
                )
              );
              if (S.loadComponent && !S._loadedComponent) {
                const ie = this.loader.loadComponent(S);
                return (0, _e.D)([$, ie]).pipe((0, $e.J)());
              }
              return $;
            });
          }
          static #e = (this.ɵfac = function (S) {
            return new (S || v)(
              l.LFG(Yt),
              l.LFG(l.Sil),
              l.LFG(l.lqb),
              l.LFG(dr),
              l.LFG(xt)
            );
          });
          static #t = (this.ɵprov = l.Yz7({
            token: v,
            factory: v.ɵfac,
            providedIn: "root",
          }));
        }
        return v;
      })();
      const os = new l.OlP("");
      let ci = (() => {
        class v {
          constructor(m, S, x, $, ie = {}) {
            (this.urlSerializer = m),
              (this.transitions = S),
              (this.viewportScroller = x),
              (this.zone = $),
              (this.options = ie),
              (this.lastId = 0),
              (this.lastSource = "imperative"),
              (this.restoredId = 0),
              (this.store = {}),
              (ie.scrollPositionRestoration =
                ie.scrollPositionRestoration || "disabled"),
              (ie.anchorScrolling = ie.anchorScrolling || "disabled");
          }
          init() {
            "disabled" !== this.options.scrollPositionRestoration &&
              this.viewportScroller.setHistoryScrollRestoration("manual"),
              (this.routerEventsSubscription = this.createScrollEvents()),
              (this.scrollEventsSubscription = this.consumeScrollEvents());
          }
          createScrollEvents() {
            return this.transitions.events.subscribe((m) => {
              m instanceof Sr
                ? ((this.store[this.lastId] =
                    this.viewportScroller.getScrollPosition()),
                  (this.lastSource = m.navigationTrigger),
                  (this.restoredId = m.restoredState
                    ? m.restoredState.navigationId
                    : 0))
                : m instanceof wi
                ? ((this.lastId = m.id),
                  this.scheduleScrollEvent(
                    m,
                    this.urlSerializer.parse(m.urlAfterRedirects).fragment
                  ))
                : m instanceof Ar &&
                  0 === m.code &&
                  ((this.lastSource = void 0),
                  (this.restoredId = 0),
                  this.scheduleScrollEvent(
                    m,
                    this.urlSerializer.parse(m.url).fragment
                  ));
            });
          }
          consumeScrollEvents() {
            return this.transitions.events.subscribe((m) => {
              m instanceof _i &&
                (m.position
                  ? "top" === this.options.scrollPositionRestoration
                    ? this.viewportScroller.scrollToPosition([0, 0])
                    : "enabled" === this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition(m.position)
                  : m.anchor && "enabled" === this.options.anchorScrolling
                  ? this.viewportScroller.scrollToAnchor(m.anchor)
                  : "disabled" !== this.options.scrollPositionRestoration &&
                    this.viewportScroller.scrollToPosition([0, 0]));
            });
          }
          scheduleScrollEvent(m, S) {
            this.zone.runOutsideAngular(() => {
              setTimeout(() => {
                this.zone.run(() => {
                  this.transitions.events.next(
                    new _i(
                      m,
                      "popstate" === this.lastSource
                        ? this.store[this.restoredId]
                        : null,
                      S
                    )
                  );
                });
              }, 0);
            });
          }
          ngOnDestroy() {
            this.routerEventsSubscription?.unsubscribe(),
              this.scrollEventsSubscription?.unsubscribe();
          }
          static #e = (this.ɵfac = function (S) {
            l.$Z();
          });
          static #t = (this.ɵprov = l.Yz7({ token: v, factory: v.ɵfac }));
        }
        return v;
      })();
      function tn(v, D) {
        return { ɵkind: v, ɵproviders: D };
      }
      function _o() {
        const v = (0, l.f3M)(l.zs3);
        return (D) => {
          const m = v.get(l.z2F);
          if (D !== m.components[0]) return;
          const S = v.get(Yt),
            x = v.get(zo);
          1 === v.get(Ps) && S.initialNavigation(),
            v.get(Fa, null, l.XFs.Optional)?.setUpPreloading(),
            v.get(os, null, l.XFs.Optional)?.init(),
            S.resetRootComponentType(m.componentTypes[0]),
            x.closed || (x.next(), x.complete(), x.unsubscribe());
        };
      }
      const zo = new l.OlP("", { factory: () => new In.x() }),
        Ps = new l.OlP("", { providedIn: "root", factory: () => 1 }),
        Fa = new l.OlP("");
      function Go(v) {
        return tn(0, [
          { provide: Fa, useExisting: Gr },
          { provide: dr, useExisting: v },
        ]);
      }
      const Yo = new l.OlP("ROUTER_FORROOT_GUARD"),
        ho = [
          qt.Ye,
          { provide: ur, useClass: z },
          Yt,
          xn,
          {
            provide: Cn,
            useFactory: function ro(v) {
              return v.routerState.root;
            },
            deps: [Yt],
          },
          xt,
          [],
        ];
      function as() {
        return new l.PXZ("Router", Yt);
      }
      let qo = (() => {
        class v {
          constructor(m) {}
          static forRoot(m, S) {
            return {
              ngModule: v,
              providers: [
                ho,
                [],
                { provide: Ut, multi: !0, useValue: m },
                {
                  provide: Yo,
                  useFactory: Eo,
                  deps: [[Yt, new l.FiY(), new l.tp0()]],
                },
                { provide: li, useValue: S || {} },
                S?.useHash
                  ? { provide: qt.S$, useClass: qt.Do }
                  : { provide: qt.S$, useClass: qt.b0 },
                {
                  provide: os,
                  useFactory: () => {
                    const v = (0, l.f3M)(qt.EM),
                      D = (0, l.f3M)(l.R0b),
                      m = (0, l.f3M)(li),
                      S = (0, l.f3M)(Hn),
                      x = (0, l.f3M)(ur);
                    return (
                      m.scrollOffset && v.setOffset(m.scrollOffset),
                      new ci(x, S, v, D, m)
                    );
                  },
                },
                S?.preloadingStrategy
                  ? Go(S.preloadingStrategy).ɵproviders
                  : [],
                { provide: l.PXZ, multi: !0, useFactory: as },
                S?.initialNavigation ? Ri(S) : [],
                S?.bindToComponentInputs
                  ? tn(8, [$r, { provide: sn, useExisting: $r }]).ɵproviders
                  : [],
                [
                  { provide: ls, useFactory: _o },
                  { provide: l.tb, multi: !0, useExisting: ls },
                ],
              ],
            };
          }
          static forChild(m) {
            return {
              ngModule: v,
              providers: [{ provide: Ut, multi: !0, useValue: m }],
            };
          }
          static #e = (this.ɵfac = function (S) {
            return new (S || v)(l.LFG(Yo, 8));
          });
          static #t = (this.ɵmod = l.oAB({ type: v }));
          static #n = (this.ɵinj = l.cJS({}));
        }
        return v;
      })();
      function Eo(v) {
        return "guarded";
      }
      function Ri(v) {
        return [
          "disabled" === v.initialNavigation
            ? tn(3, [
                {
                  provide: l.ip1,
                  multi: !0,
                  useFactory: () => {
                    const D = (0, l.f3M)(Yt);
                    return () => {
                      D.setUpLocationChangeListener();
                    };
                  },
                },
                { provide: Ps, useValue: 2 },
              ]).ɵproviders
            : [],
          "enabledBlocking" === v.initialNavigation
            ? tn(2, [
                { provide: Ps, useValue: 0 },
                {
                  provide: l.ip1,
                  multi: !0,
                  deps: [l.zs3],
                  useFactory: (D) => {
                    const m = D.get(qt.V_, Promise.resolve());
                    return () =>
                      m.then(
                        () =>
                          new Promise((S) => {
                            const x = D.get(Yt),
                              $ = D.get(zo);
                            ys(x, () => {
                              S(!0);
                            }),
                              (D.get(Hn).afterPreactivation = () => (
                                S(!0), $.closed ? (0, we.of)(void 0) : $
                              )),
                              x.initialNavigation();
                          })
                      );
                  },
                },
              ]).ɵproviders
            : [],
        ];
      }
      const ls = new l.OlP("");
    },
    7509: (Lt, Fe, N) => {
      N.d(Fe, { Fy: () => st, bB: () => $e, o6: () => It });
      var l = N(4769),
        L = N(6814),
        B = N(3161);
      function Me(K, Se) {
        if (1 & K) {
          const J = l.EpF();
          l.TgZ(0, "li", 7),
            l.NdJ("click", function () {
              const me = l.CHM(J).index,
                dt = l.oxw(2);
              return l.KtG(dt.selectSlide(me));
            }),
            l.qZA();
        }
        2 & K && l.ekj("active", !0 === Se.$implicit.active);
      }
      function _e(K, Se) {
        if (
          (1 & K &&
            (l.ynx(0),
            l.TgZ(1, "ol", 5),
            l.YNc(2, Me, 1, 2, "li", 6),
            l.qZA(),
            l.BQk()),
          2 & K)
        ) {
          const J = l.oxw();
          l.xp6(2), l.Q6J("ngForOf", J.indicatorsSlides());
        }
      }
      function we(K, Se) {
        if (1 & K) {
          const J = l.EpF();
          l.TgZ(0, "button", 9),
            l.NdJ("click", function () {
              const me = l.CHM(J).index,
                dt = l.oxw(2);
              return l.KtG(dt.selectSlide(me));
            }),
            l.qZA();
        }
        if (2 & K) {
          const J = Se.$implicit,
            De = Se.index,
            ye = l.oxw(2);
          l.ekj("active", !0 === J.active),
            l.uIk("data-bs-target", "#carousel" + ye.currentId)(
              "data-bs-slide-to",
              De
            );
        }
      }
      function Ie(K, Se) {
        if (
          (1 & K &&
            (l.ynx(0),
            l.TgZ(1, "div", 5),
            l.YNc(2, we, 1, 4, "button", 8),
            l.qZA(),
            l.BQk()),
          2 & K)
        ) {
          const J = l.oxw();
          l.xp6(2), l.Q6J("ngForOf", J.indicatorsSlides());
        }
      }
      function Re(K, Se) {
        if (1 & K) {
          const J = l.EpF();
          l.TgZ(0, "a", 10),
            l.NdJ("click", function () {
              l.CHM(J);
              const ye = l.oxw();
              return l.KtG(ye.previousSlide());
            }),
            l._UZ(1, "span", 11),
            l.TgZ(2, "span", 12),
            l._uU(3, "Previous"),
            l.qZA()();
        }
        if (2 & K) {
          const J = l.oxw();
          l.ekj("disabled", J.checkDisabledClass("prev")),
            l.uIk("data-bs-target", "#carousel" + J.currentId);
        }
      }
      function xe(K, Se) {
        if (1 & K) {
          const J = l.EpF();
          l.TgZ(0, "a", 13),
            l.NdJ("click", function () {
              l.CHM(J);
              const ye = l.oxw();
              return l.KtG(ye.nextSlide());
            }),
            l._UZ(1, "span", 14),
            l.TgZ(2, "span", 12),
            l._uU(3, "Next"),
            l.qZA()();
        }
        if (2 & K) {
          const J = l.oxw();
          l.ekj("disabled", J.checkDisabledClass("next")),
            l.uIk("data-bs-target", "#carousel" + J.currentId);
        }
      }
      const oe = function (K) {
          return { display: K };
        },
        ge = ["*"];
      let Be = (() => {
        class K {
          constructor() {
            (this.interval = 5e3),
              (this.noPause = !1),
              (this.noWrap = !1),
              (this.showIndicators = !0),
              (this.pauseOnFocus = !1),
              (this.indicatorsByChunk = !1),
              (this.itemsPerSlide = 1),
              (this.singleSlideOffset = !1);
          }
          static #e = (this.ɵfac = function (De) {
            return new (De || K)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: K,
            factory: K.ɵfac,
            providedIn: "root",
          }));
        }
        return K;
      })();
      var pt = (function (K) {
        return (
          (K[(K.UNKNOWN = 0)] = "UNKNOWN"),
          (K[(K.NEXT = 1)] = "NEXT"),
          (K[(K.PREV = 2)] = "PREV"),
          K
        );
      })(pt || {});
      let Ue = 1,
        st = (() => {
          class K {
            set activeSlide(J) {
              this.multilist ||
                ((function ot(K) {
                  return (
                    "number" == typeof K ||
                    "[object Number]" === Object.prototype.toString.call(K)
                  );
                })(J) && (this.customActiveSlide = J),
                this._slides.length &&
                  J !== this._currentActiveSlide &&
                  this._select(J));
            }
            get activeSlide() {
              return this._currentActiveSlide || 0;
            }
            get interval() {
              return this._interval;
            }
            set interval(J) {
              (this._interval = J), this.restartTimer();
            }
            get slides() {
              return this._slides.toArray();
            }
            get isFirstSlideVisible() {
              const J = this.getVisibleIndexes();
              return (
                !(!J || (J instanceof Array && !J.length)) && J.includes(0)
              );
            }
            get isLastSlideVisible() {
              const J = this.getVisibleIndexes();
              return (
                !(!J || (J instanceof Array && !J.length)) &&
                J.includes(this._slides.length - 1)
              );
            }
            get _bsVer() {
              return (0, B.Wl)();
            }
            constructor(J, De, ye) {
              (this.ngZone = De),
                (this.platformId = ye),
                (this.noWrap = !1),
                (this.noPause = !1),
                (this.showIndicators = !0),
                (this.pauseOnFocus = !1),
                (this.indicatorsByChunk = !1),
                (this.itemsPerSlide = 1),
                (this.singleSlideOffset = !1),
                (this.isAnimated = !1),
                (this.activeSlideChange = new l.vpe(!1)),
                (this.slideRangeChange = new l.vpe()),
                (this.startFromIndex = 0),
                (this._interval = 5e3),
                (this._slides = new B.Su()),
                (this._currentVisibleSlidesIndex = 0),
                (this.isPlaying = !1),
                (this.destroyed = !1),
                (this.currentId = 0),
                (this.getActive = (me) => me.active),
                (this.makeSlidesConsistent = (me) => {
                  me.forEach((dt, Ne) => (dt.item.order = Ne));
                }),
                Object.assign(this, J),
                (this.currentId = Ue++);
            }
            ngAfterViewInit() {
              setTimeout(() => {
                this.singleSlideOffset && (this.indicatorsByChunk = !1),
                  this.multilist &&
                    ((this._chunkedSlides = (function Ye(K, Se) {
                      const J = [],
                        De = Math.ceil(K.length / Se);
                      let ye = 0;
                      for (; ye < De; ) {
                        const me = K.splice(
                          0,
                          ye === De - 1 && Se < K.length ? K.length : Se
                        );
                        J.push(me), ye++;
                      }
                      return J;
                    })(this.mapSlidesAndIndexes(), this.itemsPerSlide)),
                    this.selectInitialSlides()),
                  this.customActiveSlide &&
                    !this.multilist &&
                    this._select(this.customActiveSlide);
              }, 0);
            }
            ngOnDestroy() {
              this.destroyed = !0;
            }
            addSlide(J) {
              this._slides.add(J),
                this.multilist &&
                  this._slides.length <= this.itemsPerSlide &&
                  (J.active = !0),
                !this.multilist && this.isAnimated && (J.isAnimated = !0),
                !this.multilist &&
                  1 === this._slides.length &&
                  ((this._currentActiveSlide = void 0),
                  this.customActiveSlide || (this.activeSlide = 0),
                  this.play()),
                this.multilist &&
                  this._slides.length > this.itemsPerSlide &&
                  this.play();
            }
            removeSlide(J) {
              const De = this._slides.indexOf(J);
              if (this._currentActiveSlide === De) {
                let ye;
                this._slides.length > 1 &&
                  (ye = this.isLast(De) ? (this.noWrap ? De - 1 : 0) : De),
                  this._slides.remove(De),
                  setTimeout(() => {
                    this._select(ye);
                  }, 0);
              } else {
                this._slides.remove(De);
                const ye = this.getCurrentSlideIndex();
                setTimeout(() => {
                  (this._currentActiveSlide = ye),
                    this.activeSlideChange.emit(this._currentActiveSlide);
                }, 0);
              }
            }
            nextSlideFromInterval(J = !1) {
              this.move(pt.NEXT, J);
            }
            nextSlide(J = !1) {
              this.isPlaying && this.restartTimer(), this.move(pt.NEXT, J);
            }
            previousSlide(J = !1) {
              this.isPlaying && this.restartTimer(), this.move(pt.PREV, J);
            }
            getFirstVisibleIndex() {
              return this.slides.findIndex(this.getActive);
            }
            getLastVisibleIndex() {
              return (function et(K, Se) {
                let J = K.length;
                for (; J--; ) if (Se(K[J], J, K)) return J;
                return -1;
              })(this.slides, this.getActive);
            }
            move(J, De = !1) {
              const ye = this.getFirstVisibleIndex(),
                me = this.getLastVisibleIndex();
              (this.noWrap &&
                ((J === pt.NEXT && this.isLast(me)) ||
                  (J === pt.PREV && 0 === ye))) ||
                (this.multilist
                  ? this.moveMultilist(J)
                  : (this.activeSlide = this.findNextSlideIndex(J, De) || 0));
            }
            keydownPress(J) {
              if (
                13 === J.keyCode ||
                "Enter" === J.key ||
                32 === J.keyCode ||
                "Space" === J.key
              )
                return this.nextSlide(), void J.preventDefault();
              37 !== J.keyCode && "LeftArrow" !== J.key
                ? (39 !== J.keyCode && "RightArrow" !== J.key) ||
                  this.nextSlide()
                : this.previousSlide();
            }
            onMouseLeave() {
              this.pauseOnFocus || this.play();
            }
            onMouseUp() {
              this.pauseOnFocus || this.play();
            }
            pauseFocusIn() {
              this.pauseOnFocus && ((this.isPlaying = !1), this.resetTimer());
            }
            pauseFocusOut() {
              this.play();
            }
            selectSlide(J) {
              this.isPlaying && this.restartTimer(),
                this.multilist
                  ? this.selectSlideRange(
                      this.indicatorsByChunk ? J * this.itemsPerSlide : J
                    )
                  : (this.activeSlide = this.indicatorsByChunk
                      ? J * this.itemsPerSlide
                      : J);
            }
            play() {
              this.isPlaying || ((this.isPlaying = !0), this.restartTimer());
            }
            pause() {
              this.noPause || ((this.isPlaying = !1), this.resetTimer());
            }
            getCurrentSlideIndex() {
              return this._slides.findIndex(this.getActive);
            }
            isLast(J) {
              return J + 1 >= this._slides.length;
            }
            isFirst(J) {
              return 0 === J;
            }
            indicatorsSlides() {
              return this.slides.filter(
                (J, De) =>
                  !this.indicatorsByChunk || De % this.itemsPerSlide == 0
              );
            }
            selectInitialSlides() {
              const J =
                this.startFromIndex <= this._slides.length
                  ? this.startFromIndex
                  : 0;
              if ((this.hideSlides(), this.singleSlideOffset)) {
                if (
                  ((this._slidesWithIndexes = this.mapSlidesAndIndexes()),
                  this._slides.length - J < this.itemsPerSlide)
                ) {
                  const De = this._slidesWithIndexes.slice(0, J);
                  this._slidesWithIndexes = [...this._slidesWithIndexes, ...De]
                    .slice(De.length)
                    .slice(0, this.itemsPerSlide);
                } else
                  this._slidesWithIndexes = this._slidesWithIndexes.slice(
                    J,
                    J + this.itemsPerSlide
                  );
                this._slidesWithIndexes.forEach((De) => (De.item.active = !0)),
                  this.makeSlidesConsistent(this._slidesWithIndexes);
              } else this.selectRangeByNestedIndex(J);
              this.slideRangeChange.emit(this.getVisibleIndexes());
            }
            findNextSlideIndex(J, De) {
              let ye = 0;
              if (
                De ||
                !this.isLast(this.activeSlide) ||
                J === pt.PREV ||
                !this.noWrap
              ) {
                switch (J) {
                  case pt.NEXT:
                    if (typeof this._currentActiveSlide > "u") {
                      ye = 0;
                      break;
                    }
                    if (!this.isLast(this._currentActiveSlide)) {
                      ye = this._currentActiveSlide + 1;
                      break;
                    }
                    ye = !De && this.noWrap ? this._currentActiveSlide : 0;
                    break;
                  case pt.PREV:
                    if (typeof this._currentActiveSlide > "u") {
                      ye = 0;
                      break;
                    }
                    if (this._currentActiveSlide > 0) {
                      ye = this._currentActiveSlide - 1;
                      break;
                    }
                    if (!De && this.noWrap) {
                      ye = this._currentActiveSlide;
                      break;
                    }
                    ye = this._slides.length - 1;
                    break;
                  default:
                    throw new Error("Unknown direction");
                }
                return ye;
              }
            }
            mapSlidesAndIndexes() {
              return this.slides
                .slice()
                .map((J, De) => ({ index: De, item: J }));
            }
            selectSlideRange(J) {
              if (!this.isIndexInRange(J)) {
                if ((this.hideSlides(), this.singleSlideOffset)) {
                  const De = this.isIndexOnTheEdges(J)
                      ? J
                      : J - this.itemsPerSlide + 1,
                    ye = this.isIndexOnTheEdges(J)
                      ? J + this.itemsPerSlide
                      : J + 1;
                  (this._slidesWithIndexes = this.mapSlidesAndIndexes().slice(
                    De,
                    ye
                  )),
                    this.makeSlidesConsistent(this._slidesWithIndexes),
                    this._slidesWithIndexes.forEach(
                      (me) => (me.item.active = !0)
                    );
                } else this.selectRangeByNestedIndex(J);
                this.slideRangeChange.emit(this.getVisibleIndexes());
              }
            }
            selectRangeByNestedIndex(J) {
              if (!this._chunkedSlides) return;
              const De = this._chunkedSlides
                .map((ye, me) => ({ index: me, list: ye }))
                .find((ye) => void 0 !== ye.list.find((me) => me.index === J));
              De &&
                ((this._currentVisibleSlidesIndex = De.index),
                this._chunkedSlides[De.index].forEach((ye) => {
                  ye.item.active = !0;
                }));
            }
            isIndexOnTheEdges(J) {
              return (
                J + 1 - this.itemsPerSlide <= 0 ||
                J + this.itemsPerSlide <= this._slides.length
              );
            }
            isIndexInRange(J) {
              return this.singleSlideOffset && this._slidesWithIndexes
                ? this._slidesWithIndexes.map((ye) => ye.index).indexOf(J) >= 0
                : J <= this.getLastVisibleIndex() &&
                    J >= this.getFirstVisibleIndex();
            }
            hideSlides() {
              this.slides.forEach((J) => (J.active = !1));
            }
            isVisibleSlideListLast() {
              return (
                !!this._chunkedSlides &&
                this._currentVisibleSlidesIndex ===
                  this._chunkedSlides.length - 1
              );
            }
            isVisibleSlideListFirst() {
              return 0 === this._currentVisibleSlidesIndex;
            }
            moveSliderByOneItem(J) {
              let De, ye, me, dt, Ne;
              if (this.noWrap) {
                (De = this.getFirstVisibleIndex()),
                  (ye = this.getLastVisibleIndex()),
                  (me = J === pt.NEXT ? De : ye),
                  (dt = J !== pt.NEXT ? De - 1 : this.isLast(ye) ? 0 : ye + 1);
                const Mt = this._slides.get(me);
                Mt && (Mt.active = !1);
                const At = this._slides.get(dt);
                At && (At.active = !0);
                const Vt = this.mapSlidesAndIndexes().filter(
                  (In) => In.item.active
                );
                return (
                  this.makeSlidesConsistent(Vt),
                  this.singleSlideOffset && (this._slidesWithIndexes = Vt),
                  void this.slideRangeChange.emit(this.getVisibleIndexes())
                );
              }
              if (this._slidesWithIndexes && this._slidesWithIndexes[0]) {
                if (
                  ((De = this._slidesWithIndexes[0].index),
                  (ye =
                    this._slidesWithIndexes[this._slidesWithIndexes.length - 1]
                      .index),
                  J === pt.NEXT)
                ) {
                  this._slidesWithIndexes.shift(),
                    (Ne = this.isLast(ye) ? 0 : ye + 1);
                  const Mt = this._slides.get(Ne);
                  Mt && this._slidesWithIndexes.push({ index: Ne, item: Mt });
                } else {
                  this._slidesWithIndexes.pop(),
                    (Ne = this.isFirst(De) ? this._slides.length - 1 : De - 1);
                  const Mt = this._slides.get(Ne);
                  Mt &&
                    (this._slidesWithIndexes = [
                      { index: Ne, item: Mt },
                      ...this._slidesWithIndexes,
                    ]);
                }
                this.hideSlides(),
                  this._slidesWithIndexes.forEach(
                    (Mt) => (Mt.item.active = !0)
                  ),
                  this.makeSlidesConsistent(this._slidesWithIndexes),
                  this.slideRangeChange.emit(
                    this._slidesWithIndexes.map((Mt) => Mt.index)
                  );
              }
            }
            moveMultilist(J) {
              this.singleSlideOffset
                ? this.moveSliderByOneItem(J)
                : (this.hideSlides(),
                  (this._currentVisibleSlidesIndex = this.noWrap
                    ? J === pt.NEXT
                      ? this._currentVisibleSlidesIndex + 1
                      : this._currentVisibleSlidesIndex - 1
                    : J === pt.NEXT
                    ? this.isVisibleSlideListLast()
                      ? 0
                      : this._currentVisibleSlidesIndex + 1
                    : this.isVisibleSlideListFirst()
                    ? this._chunkedSlides
                      ? this._chunkedSlides.length - 1
                      : 0
                    : this._currentVisibleSlidesIndex - 1),
                  this._chunkedSlides &&
                    this._chunkedSlides[
                      this._currentVisibleSlidesIndex
                    ].forEach((De) => (De.item.active = !0)),
                  this.slideRangeChange.emit(this.getVisibleIndexes()));
            }
            getVisibleIndexes() {
              return !this.singleSlideOffset && this._chunkedSlides
                ? this._chunkedSlides[this._currentVisibleSlidesIndex].map(
                    (J) => J.index
                  )
                : this._slidesWithIndexes
                ? this._slidesWithIndexes.map((J) => J.index)
                : void 0;
            }
            _select(J) {
              if (isNaN(J)) return void this.pause();
              if (!this.multilist && typeof this._currentActiveSlide < "u") {
                const ye = this._slides.get(this._currentActiveSlide);
                typeof ye < "u" && (ye.active = !1);
              }
              const De = this._slides.get(J);
              typeof De < "u" &&
                ((this._currentActiveSlide = J),
                (De.active = !0),
                (this.activeSlide = J),
                this.activeSlideChange.emit(J));
            }
            restartTimer() {
              this.resetTimer();
              const J = +this.interval;
              !isNaN(J) &&
                J > 0 &&
                (0, L.NF)(this.platformId) &&
                (this.currentInterval = this.ngZone.runOutsideAngular(() =>
                  window.setInterval(() => {
                    const De = +this.interval;
                    this.ngZone.run(() => {
                      this.isPlaying &&
                      !isNaN(this.interval) &&
                      De > 0 &&
                      this.slides.length
                        ? this.nextSlideFromInterval()
                        : this.pause();
                    });
                  }, J)
                ));
            }
            get multilist() {
              return this.itemsPerSlide > 1;
            }
            resetTimer() {
              this.currentInterval &&
                (clearInterval(this.currentInterval),
                (this.currentInterval = void 0));
            }
            checkDisabledClass(J) {
              return "prev" === J
                ? (0 === this.activeSlide && this.noWrap && !this.multilist) ||
                    (this.isFirstSlideVisible && this.noWrap && this.multilist)
                : (this.isLast(this.activeSlide) &&
                    this.noWrap &&
                    !this.multilist) ||
                    (this.isLastSlideVisible && this.noWrap && this.multilist);
            }
            static #e = (this.ɵfac = function (De) {
              return new (De || K)(l.Y36(Be), l.Y36(l.R0b), l.Y36(l.Lbi));
            });
            static #t = (this.ɵcmp = l.Xpm({
              type: K,
              selectors: [["carousel"]],
              inputs: {
                noWrap: "noWrap",
                noPause: "noPause",
                showIndicators: "showIndicators",
                pauseOnFocus: "pauseOnFocus",
                indicatorsByChunk: "indicatorsByChunk",
                itemsPerSlide: "itemsPerSlide",
                singleSlideOffset: "singleSlideOffset",
                isAnimated: "isAnimated",
                activeSlide: "activeSlide",
                startFromIndex: "startFromIndex",
                interval: "interval",
              },
              outputs: {
                activeSlideChange: "activeSlideChange",
                slideRangeChange: "slideRangeChange",
              },
              ngContentSelectors: ge,
              decls: 7,
              vars: 8,
              consts: [
                [
                  "tabindex",
                  "0",
                  1,
                  "carousel",
                  "slide",
                  3,
                  "id",
                  "mouseenter",
                  "mouseleave",
                  "mouseup",
                  "keydown",
                  "focusin",
                  "focusout",
                ],
                [4, "ngIf"],
                [1, "carousel-inner", 3, "ngStyle"],
                [
                  "class",
                  "left carousel-control carousel-control-prev",
                  "href",
                  "javascript:void(0);",
                  "tabindex",
                  "0",
                  "role",
                  "button",
                  3,
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [
                  "class",
                  "right carousel-control carousel-control-next",
                  "href",
                  "javascript:void(0);",
                  "tabindex",
                  "0",
                  "role",
                  "button",
                  3,
                  "disabled",
                  "click",
                  4,
                  "ngIf",
                ],
                [1, "carousel-indicators"],
                [3, "active", "click", 4, "ngFor", "ngForOf"],
                [3, "click"],
                [
                  "type",
                  "button",
                  "aria-current",
                  "true",
                  3,
                  "active",
                  "click",
                  4,
                  "ngFor",
                  "ngForOf",
                ],
                ["type", "button", "aria-current", "true", 3, "click"],
                [
                  "href",
                  "javascript:void(0);",
                  "tabindex",
                  "0",
                  "role",
                  "button",
                  1,
                  "left",
                  "carousel-control",
                  "carousel-control-prev",
                  3,
                  "click",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "icon-prev",
                  "carousel-control-prev-icon",
                ],
                [1, "sr-only", "visually-hidden"],
                [
                  "href",
                  "javascript:void(0);",
                  "tabindex",
                  "0",
                  "role",
                  "button",
                  1,
                  "right",
                  "carousel-control",
                  "carousel-control-next",
                  3,
                  "click",
                ],
                [
                  "aria-hidden",
                  "true",
                  1,
                  "icon-next",
                  "carousel-control-next-icon",
                ],
              ],
              template: function (De, ye) {
                1 & De &&
                  (l.F$t(),
                  l.TgZ(0, "div", 0),
                  l.NdJ("mouseenter", function () {
                    return ye.pause();
                  })("mouseleave", function () {
                    return ye.onMouseLeave();
                  })("mouseup", function () {
                    return ye.onMouseUp();
                  })("keydown", function (dt) {
                    return ye.keydownPress(dt);
                  })("focusin", function () {
                    return ye.pauseFocusIn();
                  })("focusout", function () {
                    return ye.pauseFocusOut();
                  }),
                  l.YNc(1, _e, 3, 1, "ng-container", 1),
                  l.YNc(2, Ie, 3, 1, "ng-container", 1),
                  l.TgZ(3, "div", 2),
                  l.Hsn(4),
                  l.qZA(),
                  l.YNc(5, Re, 4, 3, "a", 3),
                  l.YNc(6, xe, 4, 3, "a", 4),
                  l.qZA()),
                  2 & De &&
                    (l.Q6J("id", "carousel" + ye.currentId),
                    l.xp6(1),
                    l.Q6J(
                      "ngIf",
                      !ye._bsVer.isBs5 &&
                        ye.showIndicators &&
                        ye.slides.length > 1
                    ),
                    l.xp6(1),
                    l.Q6J(
                      "ngIf",
                      ye._bsVer.isBs5 &&
                        ye.showIndicators &&
                        ye.slides.length > 1
                    ),
                    l.xp6(1),
                    l.Q6J(
                      "ngStyle",
                      l.VKq(6, oe, ye.multilist ? "flex" : "block")
                    ),
                    l.xp6(2),
                    l.Q6J("ngIf", ye.slides.length > 1),
                    l.xp6(1),
                    l.Q6J("ngIf", ye.slides.length > 1));
              },
              dependencies: [L.sg, L.O5, L.PC],
              encapsulation: 2,
            }));
          }
          return K;
        })(),
        It = (() => {
          class K {
            constructor(J) {
              (this.active = !1),
                (this.itemWidth = "100%"),
                (this.order = 0),
                (this.isAnimated = !1),
                (this.addClass = !0),
                (this.multilist = !1),
                (this.carousel = J);
            }
            ngOnInit() {
              this.carousel.addSlide(this),
                (this.itemWidth = 100 / this.carousel.itemsPerSlide + "%"),
                (this.multilist = this.carousel?.itemsPerSlide > 1);
            }
            ngOnDestroy() {
              this.carousel.removeSlide(this);
            }
            static #e = (this.ɵfac = function (De) {
              return new (De || K)(l.Y36(st));
            });
            static #t = (this.ɵcmp = l.Xpm({
              type: K,
              selectors: [["slide"]],
              hostVars: 15,
              hostBindings: function (De, ye) {
                2 & De &&
                  (l.uIk("aria-hidden", !ye.active),
                  l.Udp("width", ye.itemWidth)("order", ye.order),
                  l.ekj("multilist-margin", ye.multilist)("active", ye.active)(
                    "carousel-animation",
                    ye.isAnimated
                  )("item", ye.addClass)("carousel-item", ye.addClass));
              },
              inputs: { active: "active" },
              ngContentSelectors: ge,
              decls: 2,
              vars: 2,
              consts: [[1, "item"]],
              template: function (De, ye) {
                1 & De && (l.F$t(), l.TgZ(0, "div", 0), l.Hsn(1), l.qZA()),
                  2 & De && l.ekj("active", ye.active);
              },
              styles: [
                ".carousel-animation[_nghost-%COMP%]{transition:opacity .6s ease,visibility .6s ease;float:left}.carousel-animation.active[_nghost-%COMP%]{opacity:1;visibility:visible}.carousel-animation[_nghost-%COMP%]:not(.active){display:block;position:absolute;opacity:0;visibility:hidden}.multilist-margin[_nghost-%COMP%]{margin-right:auto}.carousel-item[_nghost-%COMP%]{perspective:1000px}",
              ],
            }));
          }
          return K;
        })(),
        $e = (() => {
          class K {
            static forRoot() {
              return { ngModule: K, providers: [] };
            }
            static #e = (this.ɵfac = function (De) {
              return new (De || K)();
            });
            static #t = (this.ɵmod = l.oAB({ type: K }));
            static #n = (this.ɵinj = l.cJS({ imports: [L.ez] }));
          }
          return K;
        })();
    },
    1835: (Lt, Fe, N) => {
      N.d(Fe, { oj: () => Re });
      var l = N(4769),
        L = N(3161),
        B = N(1382),
        Me = N(6814);
      class we {
        constructor(oe, ge, Be) {
          (this.nodes = oe), (this.viewRef = ge), (this.componentRef = Be);
        }
      }
      class Ie {
        constructor(oe, ge, Be, et, Ye, ot, pt, Ue, st) {
          (this._viewContainerRef = oe),
            (this._renderer = ge),
            (this._elementRef = Be),
            (this._injector = et),
            (this._componentFactoryResolver = Ye),
            (this._ngZone = ot),
            (this._applicationRef = pt),
            (this._posService = Ue),
            (this._document = st),
            (this.onBeforeShow = new l.vpe()),
            (this.onShown = new l.vpe()),
            (this.onBeforeHide = new l.vpe()),
            (this.onHidden = new l.vpe()),
            (this._providers = []),
            (this._isHiding = !1),
            (this.containerDefaultSelector = "body"),
            (this._listenOpts = {}),
            (this._globalListener = Function.prototype);
        }
        get isShown() {
          return !this._isHiding && !!this._componentRef;
        }
        attach(oe) {
          return (
            (this._componentFactory =
              this._componentFactoryResolver.resolveComponentFactory(oe)),
            this
          );
        }
        to(oe) {
          return (this.container = oe || this.container), this;
        }
        position(oe) {
          return oe
            ? ((this.attachment = oe.attachment || this.attachment),
              (this._elementRef = oe.target || this._elementRef),
              this)
            : this;
        }
        provide(oe) {
          return this._providers.push(oe), this;
        }
        show(oe = {}) {
          if (
            (this._subscribePositioning(),
            (this._innerComponent = void 0),
            !this._componentRef)
          ) {
            this.onBeforeShow.emit(),
              (this._contentRef = this._getContentRef(
                oe.content,
                oe.context,
                oe.initialState
              ));
            const ge = l.zs3.create({
              providers: this._providers,
              parent: this._injector,
            });
            if (!this._componentFactory) return;
            if (
              ((this._componentRef = this._componentFactory.create(
                ge,
                this._contentRef.nodes
              )),
              this._applicationRef.attachView(this._componentRef.hostView),
              (this.instance = this._componentRef.instance),
              Object.assign(this._componentRef.instance, oe),
              this.container instanceof l.SBq &&
                this.container.nativeElement.appendChild(
                  this._componentRef.location.nativeElement
                ),
              "string" == typeof this.container && typeof this._document < "u")
            ) {
              const Be =
                this._document.querySelector(this.container) ||
                this._document.querySelector(this.containerDefaultSelector);
              if (!Be) return;
              Be.appendChild(this._componentRef.location.nativeElement);
            }
            !this.container &&
              this._elementRef &&
              this._elementRef.nativeElement.parentElement &&
              this._elementRef.nativeElement.parentElement.appendChild(
                this._componentRef.location.nativeElement
              ),
              this._contentRef.componentRef &&
                ((this._innerComponent =
                  this._contentRef.componentRef.instance),
                this._contentRef.componentRef.changeDetectorRef.markForCheck(),
                this._contentRef.componentRef.changeDetectorRef.detectChanges()),
              this._componentRef.changeDetectorRef.markForCheck(),
              this._componentRef.changeDetectorRef.detectChanges(),
              this.onShown.emit(
                oe.id ? { id: oe.id } : this._componentRef.instance
              );
          }
          return this._registerOutsideClick(), this._componentRef;
        }
        hide(oe) {
          if (!this._componentRef) return this;
          this._posService.deletePositionElement(this._componentRef.location),
            this.onBeforeHide.emit(this._componentRef.instance);
          const ge = this._componentRef.location.nativeElement;
          return (
            ge.parentNode?.removeChild(ge),
            this._contentRef?.componentRef?.destroy(),
            this._viewContainerRef &&
              this._contentRef?.viewRef &&
              this._viewContainerRef.remove(
                this._viewContainerRef.indexOf(this._contentRef.viewRef)
              ),
            this._contentRef?.viewRef?.destroy(),
            (this._contentRef = void 0),
            (this._componentRef = void 0),
            this._removeGlobalListener(),
            this.onHidden.emit(oe ? { id: oe } : null),
            this
          );
        }
        toggle() {
          this.isShown ? this.hide() : this.show();
        }
        dispose() {
          this.isShown && this.hide(),
            this._unsubscribePositioning(),
            this._unregisterListenersFn && this._unregisterListenersFn();
        }
        listen(oe) {
          (this.triggers = oe.triggers || this.triggers),
            (this._listenOpts.outsideClick = oe.outsideClick),
            (this._listenOpts.outsideEsc = oe.outsideEsc),
            (oe.target = oe.target || this._elementRef?.nativeElement);
          const ge = (this._listenOpts.hide = () =>
              oe.hide ? oe.hide() : void this.hide()),
            Be = (this._listenOpts.show = (Ye) => {
              oe.show ? oe.show(Ye) : this.show(Ye), Ye();
            });
          return (
            this._renderer &&
              (this._unregisterListenersFn = (0, L.wo)(this._renderer, {
                target: oe.target,
                triggers: oe.triggers,
                show: Be,
                hide: ge,
                toggle: (Ye) => {
                  this.isShown ? ge() : Be(Ye);
                },
              })),
            this
          );
        }
        _removeGlobalListener() {
          this._globalListener &&
            (this._globalListener(),
            (this._globalListener = Function.prototype));
        }
        attachInline(oe, ge) {
          return (
            oe && ge && (this._inlineViewRef = oe.createEmbeddedView(ge)), this
          );
        }
        _registerOutsideClick() {
          if (this._componentRef && this._componentRef.location) {
            if (this._listenOpts.outsideClick) {
              const oe = this._componentRef.location.nativeElement;
              setTimeout(() => {
                this._renderer &&
                  this._elementRef &&
                  (this._globalListener = (0, L.Rg)(this._renderer, {
                    targets: [oe, this._elementRef.nativeElement],
                    outsideClick: this._listenOpts.outsideClick,
                    hide: () =>
                      this._listenOpts.hide && this._listenOpts.hide(),
                  }));
              });
            }
            this._listenOpts.outsideEsc &&
              this._renderer &&
              this._elementRef &&
              (this._globalListener = (0, L.C)(this._renderer, {
                targets: [
                  this._componentRef.location.nativeElement,
                  this._elementRef.nativeElement,
                ],
                outsideEsc: this._listenOpts.outsideEsc,
                hide: () => this._listenOpts.hide && this._listenOpts.hide(),
              }));
          }
        }
        getInnerComponent() {
          return this._innerComponent;
        }
        _subscribePositioning() {
          this._zoneSubscription ||
            !this.attachment ||
            (this.onShown.subscribe(() => {
              this._posService.position({
                element: this._componentRef?.location,
                target: this._elementRef,
                attachment: this.attachment,
                appendToBody: "body" === this.container,
              });
            }),
            (this._zoneSubscription = this._ngZone.onStable.subscribe(() => {
              this._componentRef && this._posService.calcPosition();
            })));
        }
        _unsubscribePositioning() {
          this._zoneSubscription &&
            (this._zoneSubscription.unsubscribe(),
            (this._zoneSubscription = void 0));
        }
        _getContentRef(oe, ge, Be) {
          if (!oe) return new we([]);
          if (oe instanceof l.Rgc) {
            if (this._viewContainerRef) {
              const ot = this._viewContainerRef.createEmbeddedView(oe, ge);
              return ot.markForCheck(), new we([ot.rootNodes], ot);
            }
            const Ye = oe.createEmbeddedView({});
            return (
              this._applicationRef.attachView(Ye), new we([Ye.rootNodes], Ye)
            );
          }
          if ("function" == typeof oe) {
            const Ye =
                this._componentFactoryResolver.resolveComponentFactory(oe),
              ot = l.zs3.create({
                providers: this._providers,
                parent: this._injector,
              }),
              pt = Ye.create(ot);
            return (
              Object.assign(pt.instance, Be),
              this._applicationRef.attachView(pt.hostView),
              new we([[pt.location.nativeElement]], pt.hostView, pt)
            );
          }
          const et = this._renderer ? [this._renderer.createText(`${oe}`)] : [];
          return new we([et]);
        }
      }
      let Re = (() => {
        class xe {
          constructor(ge, Be, et, Ye, ot, pt) {
            (this._componentFactoryResolver = ge),
              (this._ngZone = Be),
              (this._injector = et),
              (this._posService = Ye),
              (this._applicationRef = ot),
              (this._document = pt);
          }
          createLoader(ge, Be, et) {
            return new Ie(
              Be,
              et,
              ge,
              this._injector,
              this._componentFactoryResolver,
              this._ngZone,
              this._applicationRef,
              this._posService,
              this._document
            );
          }
          static #e = (this.ɵfac = function (Be) {
            return new (Be || xe)(
              l.LFG(l._Vd),
              l.LFG(l.R0b),
              l.LFG(l.zs3),
              l.LFG(B.sA),
              l.LFG(l.z2F),
              l.LFG(Me.K0)
            );
          });
          static #t = (this.ɵprov = l.Yz7({
            token: xe,
            factory: xe.ɵfac,
            providedIn: "root",
          }));
        }
        return xe;
      })();
    },
    2500: (Lt, Fe, N) => {
      N.d(Fe, {
        Hz: () => ot,
        Mq: () => pt,
        TO: () => Ye,
        fc: () => xe,
        mr: () => Ue,
      });
      var l = N(4769),
        L = N(2181),
        B = N(1835),
        Me = N(6825),
        _e = N(6814),
        we = N(1382);
      const Ie = function (st) {
          return { dropdown: st };
        },
        Re = ["*"];
      let xe = (() => {
          class st {
            constructor() {
              (this.autoClose = !0),
                (this.insideClick = !1),
                (this.isAnimated = !1),
                (this.stopOnClickPropagation = !1);
            }
            static #e = (this.ɵfac = function (K) {
              return new (K || st)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: st,
              factory: st.ɵfac,
              providedIn: "root",
            }));
          }
          return st;
        })(),
        oe = (() => {
          class st {
            constructor() {
              (this.direction = "down"),
                (this.autoClose = !0),
                (this.insideClick = !1),
                (this.isAnimated = !1),
                (this.stopOnClickPropagation = !1),
                (this.isOpenChange = new l.vpe()),
                (this.isDisabledChange = new l.vpe()),
                (this.toggleClick = new l.vpe()),
                (this.counts = 0),
                (this.dropdownMenu = new Promise(($e) => {
                  this.resolveDropdownMenu = $e;
                }));
            }
            static #e = (this.ɵfac = function (K) {
              return new (K || st)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: st,
              factory: st.ɵfac,
              providedIn: "platform",
            }));
          }
          return st;
        })();
      const Be = [
        (0, Me.oB)({ height: 0, overflow: "hidden" }),
        (0, Me.jt)(
          "220ms cubic-bezier(0, 0, 0.2, 1)",
          (0, Me.oB)({ height: "*", overflow: "hidden" })
        ),
      ];
      let et = (() => {
          class st {
            get direction() {
              return this._state.direction;
            }
            constructor($e, K, Se, J, De) {
              (this._state = $e),
                (this.cd = K),
                (this._renderer = Se),
                (this._element = J),
                (this.isOpen = !1),
                (this._factoryDropDownAnimation = De.build(Be)),
                (this._subscription = $e.isOpenChange.subscribe((ye) => {
                  this.isOpen = ye;
                  const me =
                    this._element.nativeElement.querySelector(".dropdown-menu");
                  this._renderer.addClass(
                    this._element.nativeElement.querySelector("div"),
                    "open"
                  ),
                    me &&
                      (this._renderer.addClass(me, "show"),
                      (me.classList.contains("dropdown-menu-right") ||
                        me.classList.contains("dropdown-menu-end")) &&
                        (this._renderer.setStyle(me, "left", "auto"),
                        this._renderer.setStyle(me, "right", "0")),
                      "up" === this.direction &&
                        (this._renderer.setStyle(me, "top", "auto"),
                        this._renderer.setStyle(
                          me,
                          "transform",
                          "translateY(-101%)"
                        ))),
                    me &&
                      this._state.isAnimated &&
                      this._factoryDropDownAnimation.create(me).play(),
                    this.cd.markForCheck(),
                    this.cd.detectChanges();
                }));
            }
            _contains($e) {
              return this._element.nativeElement.contains($e);
            }
            ngOnDestroy() {
              this._subscription.unsubscribe();
            }
            static #e = (this.ɵfac = function (K) {
              return new (K || st)(
                l.Y36(oe),
                l.Y36(l.sBO),
                l.Y36(l.Qsj),
                l.Y36(l.SBq),
                l.Y36(Me._j)
              );
            });
            static #t = (this.ɵcmp = l.Xpm({
              type: st,
              selectors: [["bs-dropdown-container"]],
              hostAttrs: [
                2,
                "display",
                "block",
                "position",
                "absolute",
                "z-index",
                "1040",
              ],
              ngContentSelectors: Re,
              decls: 2,
              vars: 9,
              consts: [[3, "ngClass"]],
              template: function (K, Se) {
                1 & K && (l.F$t(), l.TgZ(0, "div", 0), l.Hsn(1), l.qZA()),
                  2 & K &&
                    (l.ekj("dropup", "up" === Se.direction)("show", Se.isOpen)(
                      "open",
                      Se.isOpen
                    ),
                    l.Q6J("ngClass", l.VKq(7, Ie, "down" === Se.direction)));
              },
              dependencies: [_e.mk],
              encapsulation: 2,
              changeDetection: 0,
            }));
          }
          return st;
        })(),
        Ye = (() => {
          class st {
            set autoClose($e) {
              this._state.autoClose = $e;
            }
            get autoClose() {
              return this._state.autoClose;
            }
            set isAnimated($e) {
              this._state.isAnimated = $e;
            }
            get isAnimated() {
              return this._state.isAnimated;
            }
            set insideClick($e) {
              this._state.insideClick = $e;
            }
            get insideClick() {
              return this._state.insideClick;
            }
            set isDisabled($e) {
              (this._isDisabled = $e),
                this._state.isDisabledChange.emit($e),
                $e && this.hide();
            }
            get isDisabled() {
              return this._isDisabled;
            }
            get isOpen() {
              return this._showInline
                ? this._isInlineOpen
                : this._dropdown.isShown;
            }
            set isOpen($e) {
              $e ? this.show() : this.hide();
            }
            get _showInline() {
              return !this.container;
            }
            constructor($e, K, Se, J, De, ye, me) {
              (this._elementRef = $e),
                (this._renderer = K),
                (this._viewContainerRef = Se),
                (this._cis = J),
                (this._state = De),
                (this._config = ye),
                (this.dropup = !1),
                (this._isInlineOpen = !1),
                (this._isDisabled = !1),
                (this._subscriptions = []),
                (this._isInited = !1),
                (this._state.autoClose = this._config.autoClose),
                (this._state.insideClick = this._config.insideClick),
                (this._state.isAnimated = this._config.isAnimated),
                (this._state.stopOnClickPropagation =
                  this._config.stopOnClickPropagation),
                (this._factoryDropDownAnimation = me.build(Be)),
                (this._dropdown = this._cis
                  .createLoader(
                    this._elementRef,
                    this._viewContainerRef,
                    this._renderer
                  )
                  .provide({ provide: oe, useValue: this._state })),
                (this.onShown = this._dropdown.onShown),
                (this.onHidden = this._dropdown.onHidden),
                (this.isOpenChange = this._state.isOpenChange);
            }
            ngOnInit() {
              this._isInited ||
                ((this._isInited = !0),
                this._dropdown.listen({
                  outsideClick: !1,
                  triggers: this.triggers,
                  show: () => this.show(),
                }),
                this._subscriptions.push(
                  this._state.toggleClick.subscribe(($e) => this.toggle($e))
                ),
                this._subscriptions.push(
                  this._state.isDisabledChange
                    .pipe((0, L.h)(($e) => $e))
                    .subscribe(() => this.hide())
                ));
            }
            show() {
              if (!this.isOpen && !this.isDisabled) {
                if (this._showInline)
                  return (
                    this._inlinedMenu ||
                      this._state.dropdownMenu
                        .then(($e) => {
                          this._dropdown.attachInline(
                            $e.viewContainer,
                            $e.templateRef
                          ),
                            (this._inlinedMenu = this._dropdown._inlineViewRef),
                            this.addBs4Polyfills(),
                            this._inlinedMenu &&
                              this._renderer.addClass(
                                this._inlinedMenu.rootNodes[0].parentNode,
                                "open"
                              ),
                            this.playAnimation();
                        })
                        .catch(),
                    this.addBs4Polyfills(),
                    (this._isInlineOpen = !0),
                    this.onShown.emit(!0),
                    this._state.isOpenChange.emit(!0),
                    void this.playAnimation()
                  );
                this._state.dropdownMenu
                  .then(($e) => {
                    const K =
                      this.dropup || (typeof this.dropup < "u" && this.dropup);
                    this._state.direction = K ? "up" : "down";
                    const Se =
                      this.placement || (K ? "top start" : "bottom start");
                    this._dropdown
                      .attach(et)
                      .to(this.container)
                      .position({ attachment: Se })
                      .show({ content: $e.templateRef, placement: Se }),
                      this._state.isOpenChange.emit(!0);
                  })
                  .catch();
              }
            }
            hide() {
              this.isOpen &&
                (this._showInline
                  ? (this.removeShowClass(),
                    this.removeDropupStyles(),
                    (this._isInlineOpen = !1),
                    this.onHidden.emit(!0))
                  : this._dropdown.hide(),
                this._state.isOpenChange.emit(!1));
            }
            toggle($e) {
              return this.isOpen || !$e ? this.hide() : this.show();
            }
            _contains($e) {
              return (
                this._elementRef.nativeElement.contains($e.target) ||
                (this._dropdown.instance &&
                  this._dropdown.instance._contains($e.target))
              );
            }
            navigationClick($e) {
              const K =
                this._elementRef.nativeElement.querySelector(".dropdown-menu");
              if (!K) return;
              const Se =
                  this._elementRef.nativeElement.ownerDocument.activeElement,
                J = K.querySelectorAll(".dropdown-item");
              switch ($e.keyCode) {
                case 38:
                  this._state.counts > 0 && J[--this._state.counts].focus();
                  break;
                case 40:
                  this._state.counts + 1 < J.length &&
                    (Se.classList !== J[this._state.counts].classList
                      ? J[this._state.counts].focus()
                      : J[++this._state.counts].focus());
              }
              $e.preventDefault();
            }
            ngOnDestroy() {
              for (const $e of this._subscriptions) $e.unsubscribe();
              this._dropdown.dispose();
            }
            addBs4Polyfills() {
              this.addShowClass(),
                this.checkRightAlignment(),
                this.addDropupStyles();
            }
            playAnimation() {
              this._state.isAnimated &&
                this._inlinedMenu &&
                setTimeout(() => {
                  this._inlinedMenu &&
                    this._factoryDropDownAnimation
                      .create(this._inlinedMenu.rootNodes[0])
                      .play();
                });
            }
            addShowClass() {
              this._inlinedMenu &&
                this._inlinedMenu.rootNodes[0] &&
                this._renderer.addClass(this._inlinedMenu.rootNodes[0], "show");
            }
            removeShowClass() {
              this._inlinedMenu &&
                this._inlinedMenu.rootNodes[0] &&
                this._renderer.removeClass(
                  this._inlinedMenu.rootNodes[0],
                  "show"
                );
            }
            checkRightAlignment() {
              if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {
                const $e =
                  this._inlinedMenu.rootNodes[0].classList.contains(
                    "dropdown-menu-right"
                  ) ||
                  this._inlinedMenu.rootNodes[0].classList.contains(
                    "dropdown-menu-end"
                  );
                this._renderer.setStyle(
                  this._inlinedMenu.rootNodes[0],
                  "left",
                  $e ? "auto" : "0"
                ),
                  this._renderer.setStyle(
                    this._inlinedMenu.rootNodes[0],
                    "right",
                    $e ? "0" : "auto"
                  );
              }
            }
            addDropupStyles() {
              this._inlinedMenu &&
                this._inlinedMenu.rootNodes[0] &&
                (this._renderer.setStyle(
                  this._inlinedMenu.rootNodes[0],
                  "top",
                  this.dropup ? "auto" : "100%"
                ),
                this._renderer.setStyle(
                  this._inlinedMenu.rootNodes[0],
                  "transform",
                  this.dropup ? "translateY(-101%)" : "translateY(0)"
                ),
                this._renderer.setStyle(
                  this._inlinedMenu.rootNodes[0],
                  "bottom",
                  "auto"
                ));
            }
            removeDropupStyles() {
              this._inlinedMenu &&
                this._inlinedMenu.rootNodes[0] &&
                (this._renderer.removeStyle(
                  this._inlinedMenu.rootNodes[0],
                  "top"
                ),
                this._renderer.removeStyle(
                  this._inlinedMenu.rootNodes[0],
                  "transform"
                ),
                this._renderer.removeStyle(
                  this._inlinedMenu.rootNodes[0],
                  "bottom"
                ));
            }
            static #e = (this.ɵfac = function (K) {
              return new (K || st)(
                l.Y36(l.SBq),
                l.Y36(l.Qsj),
                l.Y36(l.s_b),
                l.Y36(B.oj),
                l.Y36(oe),
                l.Y36(xe),
                l.Y36(Me._j)
              );
            });
            static #t = (this.ɵdir = l.lG2({
              type: st,
              selectors: [
                ["", "bsDropdown", ""],
                ["", "dropdown", ""],
              ],
              hostVars: 6,
              hostBindings: function (K, Se) {
                1 & K &&
                  l.NdJ("keydown.arrowDown", function (De) {
                    return Se.navigationClick(De);
                  })("keydown.arrowUp", function (De) {
                    return Se.navigationClick(De);
                  }),
                  2 & K &&
                    l.ekj("dropup", Se.dropup)("open", Se.isOpen)(
                      "show",
                      Se.isOpen
                    );
              },
              inputs: {
                placement: "placement",
                triggers: "triggers",
                container: "container",
                dropup: "dropup",
                autoClose: "autoClose",
                isAnimated: "isAnimated",
                insideClick: "insideClick",
                isDisabled: "isDisabled",
                isOpen: "isOpen",
              },
              outputs: {
                isOpenChange: "isOpenChange",
                onShown: "onShown",
                onHidden: "onHidden",
              },
              exportAs: ["bs-dropdown"],
              features: [l._Bn([oe])],
            }));
          }
          return st;
        })(),
        ot = (() => {
          class st {
            constructor($e, K, Se) {
              $e.resolveDropdownMenu({ templateRef: Se, viewContainer: K });
            }
            static #e = (this.ɵfac = function (K) {
              return new (K || st)(l.Y36(oe), l.Y36(l.s_b), l.Y36(l.Rgc));
            });
            static #t = (this.ɵdir = l.lG2({
              type: st,
              selectors: [
                ["", "bsDropdownMenu", ""],
                ["", "dropdownMenu", ""],
              ],
              exportAs: ["bs-dropdown-menu"],
            }));
          }
          return st;
        })(),
        pt = (() => {
          class st {
            constructor($e, K, Se, J, De) {
              (this._changeDetectorRef = $e),
                (this._dropdown = K),
                (this._element = Se),
                (this._renderer = J),
                (this._state = De),
                (this.isOpen = !1),
                (this._subscriptions = []),
                this._subscriptions.push(
                  this._state.isOpenChange.subscribe((ye) => {
                    (this.isOpen = ye),
                      ye
                        ? ((this._documentClickListener = this._renderer.listen(
                            "document",
                            "click",
                            (me) => {
                              this._state.autoClose &&
                                2 !== me.button &&
                                !this._element.nativeElement.contains(
                                  me.target
                                ) &&
                                (!this._state.insideClick ||
                                  !this._dropdown._contains(me)) &&
                                (this._state.toggleClick.emit(!1),
                                this._changeDetectorRef.detectChanges());
                            }
                          )),
                          (this._escKeyUpListener = this._renderer.listen(
                            this._element.nativeElement,
                            "keyup.esc",
                            () => {
                              this._state.autoClose &&
                                (this._state.toggleClick.emit(!1),
                                this._changeDetectorRef.detectChanges());
                            }
                          )))
                        : (this._documentClickListener &&
                            this._documentClickListener(),
                          this._escKeyUpListener && this._escKeyUpListener());
                  })
                ),
                this._subscriptions.push(
                  this._state.isDisabledChange.subscribe(
                    (ye) => (this.isDisabled = ye || void 0)
                  )
                );
            }
            onClick($e) {
              this._state.stopOnClickPropagation && $e.stopPropagation(),
                !this.isDisabled && this._state.toggleClick.emit(!0);
            }
            ngOnDestroy() {
              this._documentClickListener && this._documentClickListener(),
                this._escKeyUpListener && this._escKeyUpListener();
              for (const $e of this._subscriptions) $e.unsubscribe();
            }
            static #e = (this.ɵfac = function (K) {
              return new (K || st)(
                l.Y36(l.sBO),
                l.Y36(Ye),
                l.Y36(l.SBq),
                l.Y36(l.Qsj),
                l.Y36(oe)
              );
            });
            static #t = (this.ɵdir = l.lG2({
              type: st,
              selectors: [
                ["", "bsDropdownToggle", ""],
                ["", "dropdownToggle", ""],
              ],
              hostVars: 3,
              hostBindings: function (K, Se) {
                1 & K &&
                  l.NdJ("click", function (De) {
                    return Se.onClick(De);
                  }),
                  2 & K &&
                    l.uIk("aria-haspopup", !0)("disabled", Se.isDisabled)(
                      "aria-expanded",
                      Se.isOpen
                    );
              },
              exportAs: ["bs-dropdown-toggle"],
            }));
          }
          return st;
        })(),
        Ue = (() => {
          class st {
            static forRoot() {
              return { ngModule: st, providers: [B.oj, we.sA, oe] };
            }
            static #e = (this.ɵfac = function (K) {
              return new (K || st)();
            });
            static #t = (this.ɵmod = l.oAB({ type: st }));
            static #n = (this.ɵinj = l.cJS({ imports: [_e.ez] }));
          }
          return st;
        })();
    },
    2051: (Lt, Fe, N) => {
      N.d(Fe, { tT: () => Pt, zk: () => Kt });
      var l = N(4769),
        L = N(3161),
        B = N(6814),
        Me = N(8180);
      let we,
        _e = (() => {
          class Ge {
            constructor() {
              this._focusTrapStack = [];
            }
            register(ce) {
              this._focusTrapStack = this._focusTrapStack.filter(
                (Ct) => Ct !== ce
              );
              let He = this._focusTrapStack;
              He.length && He[He.length - 1]._disable(),
                He.push(ce),
                ce._enable();
            }
            deregister(ce) {
              ce._disable();
              const He = this._focusTrapStack,
                Ct = He.indexOf(ce);
              -1 !== Ct &&
                (He.splice(Ct, 1), He.length && He[He.length - 1]._enable());
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Ge,
              factory: Ge.ɵfac,
              providedIn: "root",
            }));
          }
          return Ge;
        })();
      try {
        we = typeof Intl < "u" && Intl.v8BreakIterator;
      } catch {
        we = !1;
      }
      let Ie = (() => {
          class Ge {
            constructor(ce) {
              (this._platformId = ce),
                (this.isBrowser = this._platformId
                  ? (0, B.NF)(this._platformId)
                  : "object" == typeof document && !!document),
                (this.EDGE =
                  this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT =
                  this.isBrowser &&
                  /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !we) &&
                  typeof CSS < "u" &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS =
                  this.isBrowser &&
                  /iPad|iPhone|iPod/.test(navigator.userAgent) &&
                  !("MSStream" in window)),
                (this.FIREFOX =
                  this.isBrowser &&
                  /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID =
                  this.isBrowser &&
                  /android/i.test(navigator.userAgent) &&
                  !this.TRIDENT),
                (this.SAFARI =
                  this.isBrowser &&
                  /safari/i.test(navigator.userAgent) &&
                  this.WEBKIT);
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)(l.LFG(l.Lbi));
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Ge,
              factory: Ge.ɵfac,
              providedIn: "root",
            }));
          }
          return Ge;
        })(),
        xe = (() => {
          class Ge {
            constructor(ce) {
              this._platform = ce;
            }
            isDisabled(ce) {
              return ce.hasAttribute("disabled");
            }
            isVisible(ce) {
              return (
                (function ge(Ge) {
                  return !!(
                    Ge.offsetWidth ||
                    Ge.offsetHeight ||
                    ("function" == typeof Ge.getClientRects &&
                      Ge.getClientRects().length)
                  );
                })(ce) && "visible" === getComputedStyle(ce).visibility
              );
            }
            isTabbable(ce) {
              if (!this._platform.isBrowser) return !1;
              const He = (function oe(Ge) {
                try {
                  return Ge.frameElement;
                } catch {
                  return null;
                }
              })(
                (function K(Ge) {
                  return (
                    (Ge.ownerDocument && Ge.ownerDocument.defaultView) || window
                  );
                })(ce)
              );
              if (He && (-1 === st(He) || !this.isVisible(He))) return !1;
              let Ct = ce.nodeName.toLowerCase(),
                mn = st(ce);
              return ce.hasAttribute("contenteditable")
                ? -1 !== mn
                : !(
                    "iframe" === Ct ||
                    "object" === Ct ||
                    (this._platform.WEBKIT &&
                      this._platform.IOS &&
                      !(function It(Ge) {
                        let Qe = Ge.nodeName.toLowerCase(),
                          ce = "input" === Qe && Ge.type;
                        return (
                          "text" === ce ||
                          "password" === ce ||
                          "select" === Qe ||
                          "textarea" === Qe
                        );
                      })(ce))
                  ) &&
                    ("audio" === Ct
                      ? !!ce.hasAttribute("controls") && -1 !== mn
                      : "video" === Ct
                      ? -1 !== mn &&
                        (null !== mn ||
                          this._platform.FIREFOX ||
                          ce.hasAttribute("controls"))
                      : ce.tabIndex >= 0);
            }
            isFocusable(ce, He) {
              return (
                (function $e(Ge) {
                  return (
                    !(function et(Ge) {
                      return (
                        (function ot(Ge) {
                          return "input" == Ge.nodeName.toLowerCase();
                        })(Ge) && "hidden" == Ge.type
                      );
                    })(Ge) &&
                    ((function Be(Ge) {
                      let Qe = Ge.nodeName.toLowerCase();
                      return (
                        "input" === Qe ||
                        "select" === Qe ||
                        "button" === Qe ||
                        "textarea" === Qe
                      );
                    })(Ge) ||
                      (function Ye(Ge) {
                        return (
                          (function pt(Ge) {
                            return "a" == Ge.nodeName.toLowerCase();
                          })(Ge) && Ge.hasAttribute("href")
                        );
                      })(Ge) ||
                      Ge.hasAttribute("contenteditable") ||
                      Ue(Ge))
                  );
                })(ce) &&
                !this.isDisabled(ce) &&
                (He?.ignoreVisibility || this.isVisible(ce))
              );
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)(l.LFG(Ie));
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Ge,
              factory: Ge.ɵfac,
              providedIn: "root",
            }));
          }
          return Ge;
        })();
      function Ue(Ge) {
        if (!Ge.hasAttribute("tabindex") || void 0 === Ge.tabIndex) return !1;
        let Qe = Ge.getAttribute("tabindex");
        return "-32768" != Qe && !(!Qe || isNaN(parseInt(Qe, 10)));
      }
      function st(Ge) {
        if (!Ue(Ge)) return null;
        const Qe = parseInt(Ge.getAttribute("tabindex") || "", 10);
        return isNaN(Qe) ? -1 : Qe;
      }
      function Se(Ge) {
        return null != Ge && "false" != `${Ge}`;
      }
      class J {
        get enabled() {
          return this._enabled;
        }
        set enabled(Qe) {
          (this._enabled = Qe),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(Qe, this._startAnchor),
              this._toggleAnchorTabIndex(Qe, this._endAnchor));
        }
        constructor(Qe, ce, He, Ct, mn = !1) {
          (this._element = Qe),
            (this._checker = ce),
            (this._ngZone = He),
            (this._document = Ct),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            mn || this.attachAnchors();
        }
        destroy() {
          const Qe = this._startAnchor,
            ce = this._endAnchor;
          Qe &&
            (Qe.removeEventListener("focus", this.startAnchorListener),
            Qe.parentNode && Qe.parentNode.removeChild(Qe)),
            ce &&
              (ce.removeEventListener("focus", this.endAnchorListener),
              ce.parentNode && ce.parentNode.removeChild(ce)),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener(
                  "focus",
                  this.startAnchorListener
                )),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener(
                    "focus",
                    this.endAnchorListener
                  ));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(
                this._startAnchor,
                this._element
              ),
              this._element.parentNode.insertBefore(
                this._endAnchor,
                this._element.nextSibling
              ),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady() {
          return new Promise((Qe) => {
            this._executeOnStable(() => Qe(this.focusInitialElement()));
          });
        }
        focusFirstTabbableElementWhenReady() {
          return new Promise((Qe) => {
            this._executeOnStable(() => Qe(this.focusFirstTabbableElement()));
          });
        }
        focusLastTabbableElementWhenReady() {
          return new Promise((Qe) => {
            this._executeOnStable(() => Qe(this.focusLastTabbableElement()));
          });
        }
        _getRegionBoundary(Qe) {
          let ce = this._element.querySelectorAll(
            `[cdk-focus-region-${Qe}], [cdkFocusRegion${Qe}], [cdk-focus-${Qe}]`
          );
          for (let He = 0; He < ce.length; He++)
            ce[He].hasAttribute(`cdk-focus-${Qe}`)
              ? console.warn(
                  `Found use of deprecated attribute 'cdk-focus-${Qe}', use 'cdkFocusRegion${Qe}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  ce[He]
                )
              : ce[He].hasAttribute(`cdk-focus-region-${Qe}`) &&
                console.warn(
                  `Found use of deprecated attribute 'cdk-focus-region-${Qe}', use 'cdkFocusRegion${Qe}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  ce[He]
                );
          return "start" == Qe
            ? ce.length
              ? ce[0]
              : this._getFirstTabbableElement(this._element)
            : ce.length
            ? ce[ce.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement() {
          const Qe = this._element.querySelector(
            "[cdk-focus-initial], [cdkFocusInitial]"
          );
          if (Qe) {
            if (
              (Qe.hasAttribute("cdk-focus-initial") &&
                console.warn(
                  "Found use of deprecated attribute 'cdk-focus-initial', use 'cdkFocusInitial' instead. The deprecated attribute will be removed in 8.0.0",
                  Qe
                ),
              !this._checker.isFocusable(Qe))
            ) {
              const ce = this._getFirstTabbableElement(Qe);
              return ce?.focus(), !!ce;
            }
            return Qe.focus(), !0;
          }
          return this.focusFirstTabbableElement();
        }
        focusFirstTabbableElement() {
          const Qe = this._getRegionBoundary("start");
          return Qe && Qe.focus(), !!Qe;
        }
        focusLastTabbableElement() {
          const Qe = this._getRegionBoundary("end");
          return Qe && Qe.focus(), !!Qe;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(Qe) {
          if (this._checker.isFocusable(Qe) && this._checker.isTabbable(Qe))
            return Qe;
          let ce = Qe.children || Qe.childNodes;
          for (let He = 0; He < ce.length; He++) {
            let Ct =
              ce[He].nodeType === this._document.ELEMENT_NODE
                ? this._getFirstTabbableElement(ce[He])
                : null;
            if (Ct) return Ct;
          }
          return null;
        }
        _getLastTabbableElement(Qe) {
          if (this._checker.isFocusable(Qe) && this._checker.isTabbable(Qe))
            return Qe;
          let ce = Qe.children || Qe.childNodes;
          for (let He = ce.length - 1; He >= 0; He--) {
            let Ct =
              ce[He].nodeType === this._document.ELEMENT_NODE
                ? this._getLastTabbableElement(ce[He])
                : null;
            if (Ct) return Ct;
          }
          return null;
        }
        _createAnchor() {
          const Qe = this._document.createElement("div");
          return (
            this._toggleAnchorTabIndex(this._enabled, Qe),
            Qe.classList.add("cdk-visually-hidden"),
            Qe.classList.add("cdk-focus-trap-anchor"),
            Qe.setAttribute("aria-hidden", "true"),
            Qe
          );
        }
        _toggleAnchorTabIndex(Qe, ce) {
          Qe
            ? ce.setAttribute("tabindex", "0")
            : ce.removeAttribute("tabindex");
        }
        toggleAnchors(Qe) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(Qe, this._startAnchor),
            this._toggleAnchorTabIndex(Qe, this._endAnchor));
        }
        _executeOnStable(Qe) {
          this._ngZone.isStable
            ? Qe()
            : this._ngZone.onStable.pipe((0, Me.q)(1)).subscribe(Qe);
        }
      }
      let De = (() => {
          class Ge {
            constructor(ce, He, Ct) {
              (this._checker = ce), (this._ngZone = He), (this._document = Ct);
            }
            create(ce, He = !1) {
              return new J(ce, this._checker, this._ngZone, this._document, He);
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)(l.LFG(xe), l.LFG(l.R0b), l.LFG(B.K0));
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Ge,
              factory: Ge.ɵfac,
              providedIn: "root",
            }));
          }
          return Ge;
        })(),
        ye = (() => {
          class Ge {
            get enabled() {
              return this.focusTrap.enabled;
            }
            set enabled(ce) {
              this.focusTrap.enabled = Se(ce);
            }
            get autoCapture() {
              return this._autoCapture;
            }
            set autoCapture(ce) {
              this._autoCapture = Se(ce);
            }
            constructor(ce, He, Ct) {
              (this._elementRef = ce),
                (this._focusTrapFactory = He),
                (this._previouslyFocusedElement = null),
                (this._autoCapture = !1),
                (this._document = Ct),
                (this.focusTrap = this._focusTrapFactory.create(
                  this._elementRef.nativeElement,
                  !0
                ));
            }
            ngOnDestroy() {
              this.focusTrap.destroy(),
                this._previouslyFocusedElement &&
                  (this._previouslyFocusedElement.focus(),
                  (this._previouslyFocusedElement = null));
            }
            ngAfterContentInit() {
              this.focusTrap.attachAnchors(),
                this.autoCapture && this._captureFocus();
            }
            ngDoCheck() {
              this.focusTrap.hasAttached() || this.focusTrap.attachAnchors();
            }
            ngOnChanges(ce) {
              const He = ce.autoCapture;
              He &&
                !He.firstChange &&
                this.autoCapture &&
                this.focusTrap.hasAttached() &&
                this._captureFocus();
            }
            _captureFocus() {
              (this._previouslyFocusedElement = this._document.activeElement),
                this.focusTrap.focusInitialElementWhenReady();
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)(l.Y36(l.SBq), l.Y36(De), l.Y36(B.K0));
            });
            static #t = (this.ɵdir = l.lG2({
              type: Ge,
              selectors: [["", "focusTrap", ""]],
              inputs: {
                enabled: ["cdkTrapFocus", "enabled"],
                autoCapture: ["cdkTrapFocusAutoCapture", "autoCapture"],
              },
              exportAs: ["focusTrap"],
              features: [l.TTD],
            }));
          }
          return Ge;
        })(),
        me = (() => {
          class Ge {
            static forRoot() {
              return { ngModule: Ge, providers: [_e, Ie, xe] };
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)();
            });
            static #t = (this.ɵmod = l.oAB({ type: Ge }));
            static #n = (this.ɵinj = l.cJS({ imports: [B.ez] }));
          }
          return Ge;
        })();
      var dt = N(1835),
        Ne = N(1382);
      const Mt = ["*"];
      let At = (() => {
          class Ge {
            constructor() {
              (this.hide = () => {}), (this.setClass = () => {});
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Ge,
              factory: Ge.ɵfac,
              providedIn: "platform",
            }));
          }
          return Ge;
        })(),
        In = (() => {
          class Ge {
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)();
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Ge,
              factory: Ge.ɵfac,
              providedIn: "platform",
            }));
          }
          return Ge;
        })();
      const qt = {
          backdrop: !0,
          keyboard: !0,
          focus: !0,
          show: !1,
          ignoreBackdropClick: !1,
          class: "",
          animated: !0,
          initialState: {},
          closeInterceptor: void 0,
        },
        Ot = new l.OlP("override-default-config");
      let Pe = (() => {
          class Ge {
            constructor(ce, He, Ct) {
              (this._element = He),
                (this._renderer = Ct),
                (this.isShown = !1),
                (this.isAnimated = !1),
                (this._focusEl = null),
                (this.isModalHiding = !1),
                (this.clickStartedInContent = !1),
                (this.config = Object.assign({}, ce));
            }
            ngOnInit() {
              (this._focusEl = L.tj.activeElement),
                this.isAnimated &&
                  this._renderer.addClass(this._element.nativeElement, "fade"),
                this._renderer.setStyle(
                  this._element.nativeElement,
                  "display",
                  "block"
                ),
                setTimeout(
                  () => {
                    (this.isShown = !0),
                      this._renderer.addClass(
                        this._element.nativeElement,
                        "show"
                      );
                  },
                  this.isAnimated ? 150 : 0
                ),
                L.tj &&
                  L.tj.body &&
                  (this.bsModalService &&
                    1 === this.bsModalService.getModalsCount() &&
                    (this.bsModalService.checkScrollbar(),
                    this.bsModalService.setScrollbar()),
                  this._renderer.addClass(L.tj.body, "modal-open"),
                  this._renderer.setStyle(L.tj.body, "overflow-y", "hidden")),
                this._element.nativeElement &&
                  this._element.nativeElement.focus();
            }
            onClickStarted(ce) {
              this.clickStartedInContent =
                ce.target !== this._element.nativeElement;
            }
            onClickStop(ce) {
              this.config.ignoreBackdropClick ||
              "static" === this.config.backdrop ||
              ce.target !== this._element.nativeElement ||
              this.clickStartedInContent
                ? (this.clickStartedInContent = !1)
                : (this.bsModalService?.setDismissReason("backdrop-click"),
                  this.hide());
            }
            onPopState() {
              this.bsModalService?.setDismissReason(
                "browser-back-navigation-clicked"
              ),
                this.hide();
            }
            onEsc(ce) {
              this.isShown &&
                ((27 === ce.keyCode || "Escape" === ce.key) &&
                  ce.preventDefault(),
                this.config.keyboard &&
                  this.level === this.bsModalService?.getModalsCount() &&
                  (this.bsModalService?.setDismissReason("esc"), this.hide()));
            }
            ngOnDestroy() {
              this.isShown && this._hide();
            }
            hide() {
              if (!this.isModalHiding) {
                if (this.config.closeInterceptor)
                  return void this.config.closeInterceptor().then(
                    () => this._hide(),
                    () => {}
                  );
                this._hide();
              }
            }
            _hide() {
              (this.isModalHiding = !0),
                this._renderer.removeClass(this._element.nativeElement, "show"),
                setTimeout(
                  () => {
                    (this.isShown = !1),
                      L.tj &&
                        L.tj.body &&
                        1 === this.bsModalService?.getModalsCount() &&
                        (this._renderer.removeClass(L.tj.body, "modal-open"),
                        this._renderer.setStyle(L.tj.body, "overflow-y", "")),
                      this.bsModalService?.hide(this.config.id),
                      (this.isModalHiding = !1),
                      this._focusEl && this._focusEl.focus();
                  },
                  this.isAnimated ? 300 : 0
                );
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)(l.Y36(In), l.Y36(l.SBq), l.Y36(l.Qsj));
            });
            static #t = (this.ɵcmp = l.Xpm({
              type: Ge,
              selectors: [["modal-container"]],
              hostAttrs: ["role", "dialog", "tabindex", "-1", 1, "modal"],
              hostVars: 3,
              hostBindings: function (He, Ct) {
                1 & He &&
                  l.NdJ("mousedown", function (cn) {
                    return Ct.onClickStarted(cn);
                  })("click", function (cn) {
                    return Ct.onClickStop(cn);
                  })(
                    "popstate",
                    function () {
                      return Ct.onPopState();
                    },
                    !1,
                    l.Jf7
                  )(
                    "keydown.esc",
                    function (cn) {
                      return Ct.onEsc(cn);
                    },
                    !1,
                    l.Jf7
                  ),
                  2 & He &&
                    l.uIk("aria-modal", !0)(
                      "aria-labelledby",
                      Ct.config.ariaLabelledBy
                    )("aria-describedby", Ct.config.ariaDescribedby);
              },
              ngContentSelectors: Mt,
              decls: 3,
              vars: 2,
              consts: [
                ["role", "document", "focusTrap", ""],
                [1, "modal-content"],
              ],
              template: function (He, Ct) {
                1 & He &&
                  (l.F$t(),
                  l.TgZ(0, "div", 0)(1, "div", 1),
                  l.Hsn(2),
                  l.qZA()()),
                  2 & He &&
                    l.Tol(
                      "modal-dialog" +
                        (Ct.config.class ? " " + Ct.config.class : "")
                    );
              },
              dependencies: [ye],
              encapsulation: 2,
            }));
          }
          return Ge;
        })(),
        tt = (() => {
          class Ge {
            get isAnimated() {
              return this._isAnimated;
            }
            set isAnimated(ce) {
              this._isAnimated = ce;
            }
            get isShown() {
              return this._isShown;
            }
            set isShown(ce) {
              (this._isShown = ce),
                ce
                  ? this.renderer.addClass(this.element.nativeElement, "show")
                  : this.renderer.removeClass(
                      this.element.nativeElement,
                      "show"
                    );
            }
            constructor(ce, He) {
              (this._isAnimated = !1),
                (this._isShown = !1),
                (this.element = ce),
                (this.renderer = He);
            }
            ngOnInit() {
              this.isAnimated &&
                (this.renderer.addClass(this.element.nativeElement, "fade"),
                L.cQ.reflow(this.element.nativeElement)),
                (this.isShown = !0);
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)(l.Y36(l.SBq), l.Y36(l.Qsj));
            });
            static #t = (this.ɵcmp = l.Xpm({
              type: Ge,
              selectors: [["bs-modal-backdrop"]],
              hostAttrs: [1, "modal-backdrop"],
              decls: 0,
              vars: 0,
              template: function (He, Ct) {},
              encapsulation: 2,
            }));
          }
          return Ge;
        })(),
        Tn = 1,
        Pt = (() => {
          class Ge {
            constructor(ce, He, Ct) {
              (this.clf = He),
                (this.modalDefaultOption = Ct),
                (this.onShow = new l.vpe()),
                (this.onShown = new l.vpe()),
                (this.onHide = new l.vpe()),
                (this.onHidden = new l.vpe()),
                (this.isBodyOverflowing = !1),
                (this.originalBodyPadding = 0),
                (this.scrollbarWidth = 0),
                (this.modalsCount = 0),
                (this.loaders = []),
                (this._focusEl = null),
                (this._backdropLoader = this.clf.createLoader()),
                (this._renderer = ce.createRenderer(null, null)),
                (this.config = Ct ? Object.assign({}, qt, Ct) : qt);
            }
            show(ce, He) {
              (this._focusEl = L.tj.activeElement),
                this.modalsCount++,
                this._createLoaders();
              const Ct = He?.id || Tn++;
              return (
                (this.config = this.modalDefaultOption
                  ? Object.assign({}, qt, this.modalDefaultOption, He)
                  : Object.assign({}, qt, He)),
                (this.config.id = Ct),
                this._showBackdrop(),
                (this.lastDismissReason = void 0),
                this._showModal(ce)
              );
            }
            hide(ce) {
              (1 === this.modalsCount || null == ce) &&
                (this._hideBackdrop(), this.resetScrollbar()),
                (this.modalsCount =
                  this.modalsCount >= 1 && null != ce
                    ? this.modalsCount - 1
                    : 0),
                setTimeout(
                  () => {
                    this._hideModal(ce), this.removeLoaders(ce);
                  },
                  this.config.animated ? 150 : 0
                ),
                this._focusEl && this._focusEl.focus();
            }
            _showBackdrop() {
              const ce =
                  !0 === this.config.backdrop ||
                  "static" === this.config.backdrop,
                He = !this.backdropRef || !this.backdropRef.instance.isShown;
              1 === this.modalsCount &&
                (this.removeBackdrop(),
                ce &&
                  He &&
                  (this._backdropLoader
                    .attach(tt)
                    .to("body")
                    .show({ isAnimated: this.config.animated }),
                  (this.backdropRef = this._backdropLoader._componentRef)));
            }
            _hideBackdrop() {
              this.backdropRef &&
                ((this.backdropRef.instance.isShown = !1),
                setTimeout(
                  () => this.removeBackdrop(),
                  this.config.animated ? 150 : 0
                ));
            }
            _showModal(ce) {
              const He = this.loaders[this.loaders.length - 1];
              if (this.config && this.config.providers)
                for (const cn of this.config.providers) He.provide(cn);
              const Ct = new At(),
                mn = He.provide({ provide: In, useValue: this.config })
                  .provide({ provide: At, useValue: Ct })
                  .attach(Pe)
                  .to("body");
              return (
                (Ct.hide = () => this.hide(Ct.id)),
                (Ct.setClass = (cn) => {
                  mn.instance && (mn.instance.config.class = cn);
                }),
                (Ct.onHidden = new l.vpe()),
                (Ct.onHide = new l.vpe()),
                this.copyEvent(He.onBeforeHide, Ct.onHide),
                this.copyEvent(He.onHidden, Ct.onHidden),
                mn.show({
                  content: ce,
                  isAnimated: this.config.animated,
                  initialState: this.config.initialState,
                  bsModalService: this,
                  id: this.config.id,
                }),
                mn.instance &&
                  ((mn.instance.level = this.getModalsCount()),
                  (Ct.content = He.getInnerComponent()),
                  (Ct.id = mn.instance.config?.id)),
                Ct
              );
            }
            _hideModal(ce) {
              if (null != ce) {
                const He = this.loaders.findIndex(
                    (mn) => mn.instance?.config.id === ce
                  ),
                  Ct = this.loaders[He];
                Ct && Ct.hide(ce);
              } else
                this.loaders.forEach((He) => {
                  He.instance && He.hide(He.instance.config.id);
                });
            }
            getModalsCount() {
              return this.modalsCount;
            }
            setDismissReason(ce) {
              this.lastDismissReason = ce;
            }
            removeBackdrop() {
              this._renderer.removeClass(L.tj.body, "modal-open"),
                this._renderer.setStyle(L.tj.body, "overflow-y", ""),
                this._backdropLoader.hide(),
                (this.backdropRef = void 0);
            }
            checkScrollbar() {
              (this.isBodyOverflowing =
                L.tj.body.clientWidth < window.innerWidth),
                (this.scrollbarWidth = this.getScrollbarWidth());
            }
            setScrollbar() {
              L.tj &&
                ((this.originalBodyPadding = parseInt(
                  window
                    .getComputedStyle(L.tj.body)
                    .getPropertyValue("padding-right") || "0",
                  10
                )),
                this.isBodyOverflowing &&
                  (L.tj.body.style.paddingRight = `${
                    this.originalBodyPadding + this.scrollbarWidth
                  }px`));
            }
            resetScrollbar() {
              L.tj.body.style.paddingRight = `${this.originalBodyPadding}px`;
            }
            getScrollbarWidth() {
              const ce = this._renderer.createElement("div");
              this._renderer.addClass(ce, "modal-scrollbar-measure"),
                this._renderer.appendChild(L.tj.body, ce);
              const He = ce.offsetWidth - ce.clientWidth;
              return this._renderer.removeChild(L.tj.body, ce), He;
            }
            _createLoaders() {
              const ce = this.clf.createLoader();
              this.copyEvent(ce.onBeforeShow, this.onShow),
                this.copyEvent(ce.onShown, this.onShown),
                this.copyEvent(ce.onBeforeHide, this.onHide),
                this.copyEvent(ce.onHidden, this.onHidden),
                this.loaders.push(ce);
            }
            removeLoaders(ce) {
              if (null != ce) {
                const He = this.loaders.findIndex(
                  (Ct) => Ct.instance?.config.id === ce
                );
                He >= 0 &&
                  (this.loaders.splice(He, 1),
                  this.loaders.forEach((Ct, mn) => {
                    Ct.instance && (Ct.instance.level = mn + 1);
                  }));
              } else this.loaders.splice(0, this.loaders.length);
            }
            copyEvent(ce, He) {
              ce.subscribe((Ct) => {
                He.emit(this.lastDismissReason || Ct);
              });
            }
            static #e = (this.ɵfac = function (He) {
              return new (He || Ge)(l.LFG(l.FYo), l.LFG(dt.oj), l.LFG(Ot, 8));
            });
            static #t = (this.ɵprov = l.Yz7({
              token: Ge,
              factory: Ge.ɵfac,
              providedIn: "platform",
            }));
          }
          return Ge;
        })();
      me.forRoot();
      let Kt = (() => {
        class Ge {
          static forRoot() {
            return { ngModule: Ge, providers: [Pt, dt.oj, Ne.sA] };
          }
          static forChild() {
            return { ngModule: Ge, providers: [Pt, dt.oj, Ne.sA] };
          }
          static #e = (this.ɵfac = function (He) {
            return new (He || Ge)();
          });
          static #t = (this.ɵmod = l.oAB({ type: Ge }));
          static #n = (this.ɵinj = l.cJS({ imports: [me] }));
        }
        return Ge;
      })();
    },
    1382: (Lt, Fe, N) => {
      N.d(Fe, { sA: () => Tr });
      var l = N(3161),
        L = N(4769),
        B = N(6814),
        Me = N(8645),
        _e = N(3019),
        we = N(4829),
        Ie = N(5592),
        Re = N(1631),
        xe = N(4266),
        oe = N(4674),
        ge = N(7400);
      const Be = ["addListener", "removeListener"],
        et = ["addEventListener", "removeEventListener"],
        Ye = ["on", "off"];
      function ot(z, le, be, Q) {
        if (((0, oe.m)(be) && ((Q = be), (be = void 0)), Q))
          return ot(z, le, be).pipe((0, ge.Z)(Q));
        const [ae, W] = (function It(z) {
          return (
            (0, oe.m)(z.addEventListener) && (0, oe.m)(z.removeEventListener)
          );
        })(z)
          ? et.map((ee) => (Ee) => z[ee](le, Ee, be))
          : (function Ue(z) {
              return (0, oe.m)(z.addListener) && (0, oe.m)(z.removeListener);
            })(z)
          ? Be.map(pt(z, le))
          : (function st(z) {
              return (0, oe.m)(z.on) && (0, oe.m)(z.off);
            })(z)
          ? Ye.map(pt(z, le))
          : [];
        if (!ae && (0, xe.z)(z))
          return (0, Re.z)((ee) => ot(ee, le, be))((0, we.Xf)(z));
        if (!ae) throw new TypeError("Invalid event target");
        return new Ie.y((ee) => {
          const Ee = (...Xe) => ee.next(1 < Xe.length ? Xe : Xe[0]);
          return ae(Ee), () => W(Ee);
        });
      }
      function pt(z, le) {
        return (be) => (Q) => z[be](le, Q);
      }
      var $e = N(2096),
        K = N(7394);
      class Se extends K.w0 {
        constructor(le, be) {
          super();
        }
        schedule(le, be = 0) {
          return this;
        }
      }
      const J = {
        setInterval(z, le, ...be) {
          const { delegate: Q } = J;
          return Q?.setInterval
            ? Q.setInterval(z, le, ...be)
            : setInterval(z, le, ...be);
        },
        clearInterval(z) {
          const { delegate: le } = J;
          return (le?.clearInterval || clearInterval)(z);
        },
        delegate: void 0,
      };
      var De = N(9039);
      class ye extends Se {
        constructor(le, be) {
          super(le, be),
            (this.scheduler = le),
            (this.work = be),
            (this.pending = !1);
        }
        schedule(le, be = 0) {
          var Q;
          if (this.closed) return this;
          this.state = le;
          const ae = this.id,
            W = this.scheduler;
          return (
            null != ae && (this.id = this.recycleAsyncId(W, ae, be)),
            (this.pending = !0),
            (this.delay = be),
            (this.id =
              null !== (Q = this.id) && void 0 !== Q
                ? Q
                : this.requestAsyncId(W, this.id, be)),
            this
          );
        }
        requestAsyncId(le, be, Q = 0) {
          return J.setInterval(le.flush.bind(le, this), Q);
        }
        recycleAsyncId(le, be, Q = 0) {
          if (null != Q && this.delay === Q && !1 === this.pending) return be;
          null != be && J.clearInterval(be);
        }
        execute(le, be) {
          if (this.closed) return new Error("executing a cancelled action");
          this.pending = !1;
          const Q = this._execute(le, be);
          if (Q) return Q;
          !1 === this.pending &&
            null != this.id &&
            (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(le, be) {
          let ae,
            Q = !1;
          try {
            this.work(le);
          } catch (W) {
            (Q = !0),
              (ae = W || new Error("Scheduled action threw falsy error"));
          }
          if (Q) return this.unsubscribe(), ae;
        }
        unsubscribe() {
          if (!this.closed) {
            const { id: le, scheduler: be } = this,
              { actions: Q } = be;
            (this.work = this.state = this.scheduler = null),
              (this.pending = !1),
              (0, De.P)(Q, this),
              null != le && (this.id = this.recycleAsyncId(be, le, null)),
              (this.delay = null),
              super.unsubscribe();
          }
        }
      }
      const me = {
          schedule(z) {
            let le = requestAnimationFrame,
              be = cancelAnimationFrame;
            const { delegate: Q } = me;
            Q &&
              ((le = Q.requestAnimationFrame), (be = Q.cancelAnimationFrame));
            const ae = le((W) => {
              (be = void 0), z(W);
            });
            return new K.w0(() => be?.(ae));
          },
          requestAnimationFrame(...z) {
            const { delegate: le } = me;
            return (le?.requestAnimationFrame || requestAnimationFrame)(...z);
          },
          cancelAnimationFrame(...z) {
            const { delegate: le } = me;
            return (le?.cancelAnimationFrame || cancelAnimationFrame)(...z);
          },
          delegate: void 0,
        },
        Ne = { now: () => (Ne.delegate || Date).now(), delegate: void 0 };
      class Mt {
        constructor(le, be = Mt.now) {
          (this.schedulerActionCtor = le), (this.now = be);
        }
        schedule(le, be = 0, Q) {
          return new this.schedulerActionCtor(this, le).schedule(Q, be);
        }
      }
      Mt.now = Ne.now;
      class At extends Mt {
        constructor(le, be = Mt.now) {
          super(le, be), (this.actions = []), (this._active = !1);
        }
        flush(le) {
          const { actions: be } = this;
          if (this._active) return void be.push(le);
          let Q;
          this._active = !0;
          do {
            if ((Q = le.execute(le.state, le.delay))) break;
          } while ((le = be.shift()));
          if (((this._active = !1), Q)) {
            for (; (le = be.shift()); ) le.unsubscribe();
            throw Q;
          }
        }
      }
      const In = new (class Vt extends At {
        flush(le) {
          this._active = !0;
          const be = this._scheduled;
          this._scheduled = void 0;
          const { actions: Q } = this;
          let ae;
          le = le || Q.shift();
          do {
            if ((ae = le.execute(le.state, le.delay))) break;
          } while ((le = Q[0]) && le.id === be && Q.shift());
          if (((this._active = !1), ae)) {
            for (; (le = Q[0]) && le.id === be && Q.shift(); ) le.unsubscribe();
            throw ae;
          }
        }
      })(
        class dt extends ye {
          constructor(le, be) {
            super(le, be), (this.scheduler = le), (this.work = be);
          }
          requestAsyncId(le, be, Q = 0) {
            return null !== Q && Q > 0
              ? super.requestAsyncId(le, be, Q)
              : (le.actions.push(this),
                le._scheduled ||
                  (le._scheduled = me.requestAnimationFrame(() =>
                    le.flush(void 0)
                  )));
          }
          recycleAsyncId(le, be, Q = 0) {
            var ae;
            if (null != Q ? Q > 0 : this.delay > 0)
              return super.recycleAsyncId(le, be, Q);
            const { actions: W } = le;
            null != be &&
              (null === (ae = W[W.length - 1]) || void 0 === ae
                ? void 0
                : ae.id) !== be &&
              (me.cancelAnimationFrame(be), (le._scheduled = void 0));
          }
        }
      );
      var Ot = (function (z) {
          return (
            (z.top = "top"),
            (z.bottom = "bottom"),
            (z.left = "left"),
            (z.right = "right"),
            (z.auto = "auto"),
            (z.end = "right"),
            (z.start = "left"),
            (z["top left"] = "top left"),
            (z["top right"] = "top right"),
            (z["right top"] = "right top"),
            (z["right bottom"] = "right bottom"),
            (z["bottom right"] = "bottom right"),
            (z["bottom left"] = "bottom left"),
            (z["left bottom"] = "left bottom"),
            (z["left top"] = "left top"),
            (z["top start"] = "top left"),
            (z["top end"] = "top right"),
            (z["end top"] = "right top"),
            (z["end bottom"] = "right bottom"),
            (z["bottom end"] = "bottom right"),
            (z["bottom start"] = "bottom left"),
            (z["start bottom"] = "start bottom"),
            (z["start top"] = "left top"),
            z
          );
        })(Ot || {}),
        qe = (function (z) {
          return (
            (z.top = "top"),
            (z.bottom = "bottom"),
            (z.left = "start"),
            (z.right = "end"),
            (z.auto = "auto"),
            (z.end = "end"),
            (z.start = "start"),
            (z["top left"] = "top start"),
            (z["top right"] = "top end"),
            (z["right top"] = "end top"),
            (z["right bottom"] = "end bottom"),
            (z["bottom right"] = "bottom end"),
            (z["bottom left"] = "bottom start"),
            (z["left bottom"] = "start bottom"),
            (z["left top"] = "start top"),
            (z["top start"] = "top start"),
            (z["top end"] = "top end"),
            (z["end top"] = "end top"),
            (z["end bottom"] = "end bottom"),
            (z["bottom end"] = "bottom end"),
            (z["bottom start"] = "bottom start"),
            (z["start bottom"] = "start bottom"),
            (z["start top"] = "start top"),
            z
          );
        })(qe || {});
      function re(z, le) {
        if (1 !== z.nodeType) return [];
        const Q = z.ownerDocument.defaultView?.getComputedStyle(z, null);
        return le ? Q && Q[le] : Q;
      }
      function ue(z) {
        if (!z) return document.documentElement;
        let Q,
          be = z?.offsetParent;
        for (
          ;
          null === be && z.nextElementSibling && Q !== z.nextElementSibling;

        )
          (Q = z.nextElementSibling), (be = Q.offsetParent);
        const ae = be && be.nodeName;
        return ae && "BODY" !== ae && "HTML" !== ae
          ? be &&
            -1 !== ["TH", "TD", "TABLE"].indexOf(be.nodeName) &&
            "static" === re(be, "position")
            ? ue(be)
            : be
          : Q
          ? Q.ownerDocument.documentElement
          : document.documentElement;
      }
      function Pe(z) {
        return null !== z.parentNode ? Pe(z.parentNode) : z;
      }
      function tt(z, le) {
        if (!(z && z.nodeType && le && le.nodeType))
          return document.documentElement;
        const be =
            z.compareDocumentPosition(le) & Node.DOCUMENT_POSITION_FOLLOWING,
          Q = be ? z : le,
          ae = be ? le : z,
          W = document.createRange();
        W.setStart(Q, 0), W.setEnd(ae, 0);
        const ee = W.commonAncestorContainer;
        if ((z !== ee && le !== ee) || Q.contains(ae))
          return (function Oe(z) {
            const { nodeName: le } = z;
            return (
              "BODY" !== le && ("HTML" === le || ue(z.firstElementChild) === z)
            );
          })(ee)
            ? ee
            : ue(ee);
        const Ee = Pe(z);
        return Ee.host ? tt(Ee.host, le) : tt(z, Pe(le).host);
      }
      function lt(z) {
        if (!z || !z.parentElement) return document.documentElement;
        let le = z.parentElement;
        for (; le?.parentElement && "none" === re(le, "transform"); )
          le = le.parentElement;
        return le || document.documentElement;
      }
      function Bt(z, le) {
        const be = "x" === le ? "Left" : "Top",
          Q = "Left" === be ? "Right" : "Bottom";
        return (
          parseFloat(z[`border${be}Width`]) + parseFloat(z[`border${Q}Width`])
        );
      }
      function an(z, le, be, Q) {
        return Math.max(
          le[`offset${z}`],
          le[`scroll${z}`],
          be[`client${z}`],
          be[`offset${z}`],
          be[`scroll${z}`],
          0
        );
      }
      function Tn(z) {
        const le = z.body,
          be = z.documentElement;
        return { height: an("Height", le, be), width: an("Width", le, be) };
      }
      function Pt(z) {
        return {
          ...z,
          right: (z.left || 0) + z.width,
          bottom: (z.top || 0) + z.height,
        };
      }
      function Kt(z) {
        return (
          "number" == typeof z ||
          "[object Number]" === Object.prototype.toString.call(z)
        );
      }
      function Ge(z) {
        const le = z.getBoundingClientRect();
        if (!(le && Kt(le.top) && Kt(le.left) && Kt(le.bottom) && Kt(le.right)))
          return le;
        const be = {
            left: le.left,
            top: le.top,
            width: le.right - le.left,
            height: le.bottom - le.top,
          },
          Q = "HTML" === z.nodeName ? Tn(z.ownerDocument) : void 0,
          ae =
            Q?.width ||
            z.clientWidth ||
            (Kt(le.right) && Kt(be.left) && le.right - be.left) ||
            0,
          W =
            Q?.height ||
            z.clientHeight ||
            (Kt(le.bottom) && Kt(be.top) && le.bottom - be.top) ||
            0;
        let ee = z.offsetWidth - ae,
          Ee = z.offsetHeight - W;
        if (ee || Ee) {
          const Xe = re(z);
          (ee -= Bt(Xe, "x")),
            (Ee -= Bt(Xe, "y")),
            (be.width -= ee),
            (be.height -= Ee);
        }
        return Pt(be);
      }
      function Qe(z) {
        return "HTML" === z.nodeName ? z : z.parentNode || z.host;
      }
      function ce(z) {
        if (!z) return document.body;
        switch (z.nodeName) {
          case "HTML":
          case "BODY":
            return z.ownerDocument.body;
          case "#document":
            return z.body;
        }
        const { overflow: le, overflowX: be, overflowY: Q } = re(z);
        return /(auto|scroll|overlay)/.test(String(le) + String(Q) + String(be))
          ? z
          : ce(Qe(z));
      }
      function He(z, le, be = !1) {
        const Q = "HTML" === le.nodeName,
          ae = Ge(z),
          W = Ge(le),
          Ee = (ce(z), re(le)),
          Xe = parseFloat(Ee.borderTopWidth),
          vt = parseFloat(Ee.borderLeftWidth);
        be &&
          Q &&
          ((W.top = Math.max(W.top ?? 0, 0)),
          (W.left = Math.max(W.left ?? 0, 0)));
        const Nt = Pt({
          top: (ae.top ?? 0) - (W.top ?? 0) - Xe,
          left: (ae.left ?? 0) - (W.left ?? 0) - vt,
          width: ae.width,
          height: ae.height,
        });
        if (((Nt.marginTop = 0), (Nt.marginLeft = 0), Q)) {
          const nn = parseFloat(Ee.marginTop),
            fn = parseFloat(Ee.marginLeft);
          Kt(Nt.top) && (Nt.top -= Xe - nn),
            Kt(Nt.bottom) && (Nt.bottom -= Xe - nn),
            Kt(Nt.left) && (Nt.left -= vt - fn),
            Kt(Nt.right) && (Nt.right -= vt - fn),
            (Nt.marginTop = nn),
            (Nt.marginLeft = fn);
        }
        return Nt;
      }
      function Ct(z, le = "top") {
        const be = "top" === le ? "scrollTop" : "scrollLeft",
          Q = z.nodeName;
        return "BODY" === Q || "HTML" === Q
          ? (z.ownerDocument.scrollingElement ||
              z.ownerDocument.documentElement)[be]
          : z[be];
      }
      function cn(z) {
        const le = z.nodeName;
        return (
          "BODY" !== le &&
          "HTML" !== le &&
          ("fixed" === re(z, "position") || cn(Qe(z)))
        );
      }
      function $t(z, le, be = 0, Q, ae = !1) {
        let W = { top: 0, left: 0 };
        const ee = ae ? lt(z) : tt(z, le);
        if ("viewport" === Q)
          W = (function mn(z, le = !1) {
            const be = z.ownerDocument.documentElement,
              Q = He(z, be),
              ae = Math.max(be.clientWidth, window.innerWidth || 0),
              W = Math.max(be.clientHeight, window.innerHeight || 0),
              ee = le ? 0 : Ct(be),
              Ee = le ? 0 : Ct(be, "left");
            return Pt({
              top: ee - Number(Q?.top) + Number(Q?.marginTop),
              left: Ee - Number(Q?.left) + Number(Q?.marginLeft),
              width: ae,
              height: W,
            });
          })(ee, ae);
        else {
          let Ee;
          "scrollParent" === Q
            ? ((Ee = ce(Qe(le))),
              "BODY" === Ee.nodeName && (Ee = z.ownerDocument.documentElement))
            : (Ee = "window" === Q ? z.ownerDocument.documentElement : Q);
          const Xe = He(Ee, ee, ae);
          if (Xe && "HTML" === Ee.nodeName && !cn(ee)) {
            const { height: vt, width: Nt } = Tn(z.ownerDocument);
            Kt(W.top) &&
              Kt(Xe.top) &&
              Kt(Xe.marginTop) &&
              (W.top += Xe.top - Xe.marginTop),
              Kt(W.top) && (W.bottom = Number(vt) + Number(Xe.top)),
              Kt(W.left) &&
                Kt(Xe.left) &&
                Kt(Xe.marginLeft) &&
                (W.left += Xe.left - Xe.marginLeft),
              Kt(W.top) && (W.right = Number(Nt) + Number(Xe.left));
          } else Xe && (W = Xe);
        }
        return (
          Kt(W.left) && (W.left += be),
          Kt(W.top) && (W.top += be),
          Kt(W.right) && (W.right -= be),
          Kt(W.bottom) && (W.bottom -= be),
          W
        );
      }
      function Kn({ width: z, height: le }) {
        return z * le;
      }
      function Er(
        z,
        le,
        be,
        Q,
        ae = ["top", "bottom", "right", "left"],
        W = "viewport",
        ee = 0
      ) {
        if (-1 === z.indexOf("auto")) return z;
        const Ee = $t(be, Q, ee, W),
          Xe = {
            top: {
              width: Ee?.width ?? 0,
              height: (le?.top ?? 0) - (Ee?.top ?? 0),
            },
            right: {
              width: (Ee?.right ?? 0) - (le?.right ?? 0),
              height: Ee?.height ?? 0,
            },
            bottom: {
              width: Ee?.width ?? 0,
              height: (Ee?.bottom ?? 0) - (le?.bottom ?? 0),
            },
            left: {
              width: (le.left ?? 0) - (Ee?.left ?? 0),
              height: Ee?.height ?? 0,
            },
          },
          vt = Object.keys(Xe)
            .map((En) => ({ position: En, ...Xe[En], area: Kn(Xe[En]) }))
            .sort((En, Dn) => Dn.area - En.area);
        let Nt = vt.filter(
          ({ width: En, height: Dn }) =>
            En >= be.clientWidth && Dn >= be.clientHeight
        );
        Nt = Nt.filter(({ position: En }) => ae.some((Dn) => Dn === En));
        const nn = Nt.length > 0 ? Nt[0].position : vt[0].position,
          fn = z.split(" ")[1];
        return (
          (be.className = be.className.replace(
            /bs-tooltip-auto/g,
            `bs-tooltip-${(0, l.Wl)().isBs5 ? qe[nn] : nn}`
          )),
          nn + (fn ? `-${fn}` : "")
        );
      }
      const zt = (z, le = 0) => (z ? parseFloat(z) : le);
      function Rr(z) {
        const be = z.ownerDocument.defaultView?.getComputedStyle(z),
          Q = zt(be?.marginTop) + zt(be?.marginBottom),
          ae = zt(be?.marginLeft) + zt(be?.marginRight);
        return {
          width: Number(z.offsetWidth) + ae,
          height: Number(z.offsetHeight) + Q,
        };
      }
      function Dr(z, le, be) {
        return He(le, be ? lt(z) : tt(z, le), be);
      }
      function Bn(z, le, be) {
        const Q = be.split(" ")[0],
          ae = Rr(z),
          W = { width: ae.width, height: ae.height },
          ee = -1 !== ["right", "left"].indexOf(Q),
          Ee = ee ? "top" : "left",
          Xe = ee ? "left" : "top",
          vt = ee ? "height" : "width",
          Nt = ee ? "width" : "height";
        return (
          (W[Ee] = (le[Ee] ?? 0) + le[vt] / 2 - ae[vt] / 2),
          (W[Xe] =
            Q === Xe
              ? (le[Xe] ?? 0) - ae[Nt]
              : le[
                  (function ar(z) {
                    const le = {
                      left: "right",
                      right: "left",
                      bottom: "top",
                      top: "bottom",
                    };
                    return z.replace(/left|right|bottom|top/g, (be) => le[be]);
                  })(Xe)
                ] ?? 0),
          W
        );
      }
      function kr(z, le) {
        return !!z.modifiers[le]?.enabled;
      }
      const Wt = {
        top: ["top", "top start", "top end"],
        bottom: ["bottom", "bottom start", "bottom end"],
        start: ["start", "start top", "start bottom"],
        end: ["end", "end top", "end bottom"],
      };
      function Wr(z, le) {
        return !!(0, l.Wl)().isBs5 && Wt[le].includes(z);
      }
      function _n(z, le, be) {
        !z ||
          !le ||
          Object.keys(le).forEach((Q) => {
            let ae = "";
            -1 !==
              ["width", "height", "top", "right", "bottom", "left"].indexOf(
                Q
              ) &&
              (function ln(z) {
                return "" !== z && !isNaN(parseFloat(z)) && isFinite(Number(z));
              })(le[Q]) &&
              (ae = "px"),
              be
                ? be.setStyle(z, Q, `${String(le[Q])}${ae}`)
                : (z.style[Q] = String(le[Q]) + ae);
          });
      }
      function gi(z) {
        let le = z.offsets.target;
        const be = z.instance.target.querySelector(".arrow");
        if (!be) return z;
        const Q = -1 !== ["left", "right"].indexOf(z.placement.split(" ")[0]),
          ae = Q ? "height" : "width",
          W = Q ? "Top" : "Left",
          ee = W.toLowerCase(),
          Ee = Q ? "left" : "top",
          Xe = Q ? "bottom" : "right",
          vt = Rr(be)[ae],
          Nt = z.placement.split(" ")[1];
        (z.offsets.host[Xe] ?? 0) - vt < (le[ee] ?? 0) &&
          (le[ee] -= (le[ee] ?? 0) - ((z.offsets.host[Xe] ?? 0) - vt)),
          Number(z.offsets.host[ee]) + Number(vt) > (le[Xe] ?? 0) &&
            (le[ee] +=
              Number(z.offsets.host[ee]) + Number(vt) - Number(le[Xe])),
          (le = Pt(le));
        const nn = re(z.instance.target),
          fn = parseFloat(nn[`margin${W}`]) || 0,
          En = parseFloat(nn[`border${W}Width`]) || 0;
        let Dn;
        if (Nt) {
          const se = parseFloat(nn.borderRadius) || 0,
            he = Number(fn + En + se);
          Dn =
            ee === Nt
              ? Number(z.offsets.host[ee]) + he
              : Number(z.offsets.host[ee]) + Number(z.offsets.host[ae] - he);
        } else
          Dn =
            Number(z.offsets.host[ee]) +
            Number(z.offsets.host[ae] / 2 - vt / 2);
        let Ce = Dn - (le[ee] ?? 0) - fn - En;
        return (
          (Ce = Math.max(Math.min(le[ae] - (vt + 5), Ce), 0)),
          (z.offsets.arrow = { [ee]: Math.round(Ce), [Ee]: "" }),
          (z.instance.arrow = be),
          z
        );
      }
      function wn(z) {
        if (((z.offsets.target = Pt(z.offsets.target)), !kr(z.options, "flip")))
          return (
            (z.offsets.target = {
              ...z.offsets.target,
              ...Bn(z.instance.target, z.offsets.host, z.placement),
            }),
            z
          );
        const le = $t(z.instance.target, z.instance.host, 0, "viewport", !1);
        let be = z.placement.split(" ")[0],
          Q = z.placement.split(" ")[1] || "";
        const Ee = Er(
            "auto",
            z.offsets.host,
            z.instance.target,
            z.instance.host,
            z.options.allowedPositions
          ),
          Xe = [be, Ee];
        return (
          Xe.forEach((vt, Nt) => {
            if (be !== vt || Xe.length === Nt + 1) return;
            be = z.placement.split(" ")[0];
            const nn =
                ("left" === be &&
                  Math.floor(z.offsets.target.right ?? 0) >
                    Math.floor(z.offsets.host.left ?? 0)) ||
                ("right" === be &&
                  Math.floor(z.offsets.target.left ?? 0) <
                    Math.floor(z.offsets.host.right ?? 0)) ||
                ("top" === be &&
                  Math.floor(z.offsets.target.bottom ?? 0) >
                    Math.floor(z.offsets.host.top ?? 0)) ||
                ("bottom" === be &&
                  Math.floor(z.offsets.target.top ?? 0) <
                    Math.floor(z.offsets.host.bottom ?? 0)),
              fn =
                Math.floor(z.offsets.target.left ?? 0) <
                Math.floor(le.left ?? 0),
              En =
                Math.floor(z.offsets.target.right ?? 0) >
                Math.floor(le.right ?? 0),
              Dn =
                Math.floor(z.offsets.target.top ?? 0) < Math.floor(le.top ?? 0),
              Ce =
                Math.floor(z.offsets.target.bottom ?? 0) >
                Math.floor(le.bottom ?? 0),
              se =
                ("left" === be && fn) ||
                ("right" === be && En) ||
                ("top" === be && Dn) ||
                ("bottom" === be && Ce),
              he = -1 !== ["top", "bottom"].indexOf(be),
              je =
                (he && "left" === Q && fn) ||
                (he && "right" === Q && En) ||
                (!he && "left" === Q && Dn) ||
                (!he && "right" === Q && Ce);
            (nn || se || je) &&
              ((nn || se) && (be = Xe[Nt + 1]),
              je &&
                (Q = (function dn(z) {
                  return "right" === z ? "left" : "left" === z ? "right" : z;
                })(Q)),
              (z.placement = be + (Q ? ` ${Q}` : "")),
              (z.offsets.target = {
                ...z.offsets.target,
                ...Bn(z.instance.target, z.offsets.host, z.placement),
              }));
          }),
          z
        );
      }
      function wr(z) {
        if (!kr(z.options, "preventOverflow")) return z;
        const le = "transform",
          be = z.instance.target.style,
          { top: Q, left: ae, [le]: W } = be;
        (be.top = ""), (be.left = ""), (be[le] = "");
        const ee = $t(
          z.instance.target,
          z.instance.host,
          0,
          z.options.modifiers.preventOverflow?.boundariesElement ||
            "scrollParent",
          !1
        );
        (be.top = Q), (be.left = ae), (be[le] = W);
        const Xe = {
          primary(vt) {
            let Nt = z.offsets.target[vt];
            return (
              (z.offsets.target[vt] ?? 0) < (ee[vt] ?? 0) &&
                (Nt = Math.max(z.offsets.target[vt] ?? 0, ee[vt] ?? 0)),
              { [vt]: Nt }
            );
          },
          secondary(vt) {
            const Nt = "right" === vt,
              nn = Nt ? "left" : "top";
            let En = z.offsets.target[nn];
            return (
              (z.offsets.target[vt] ?? 0) > (ee[vt] ?? 0) &&
                (En = Math.min(
                  z.offsets.target[nn] ?? 0,
                  (ee[vt] ?? 0) - z.offsets.target[Nt ? "width" : "height"]
                )),
              { [nn]: En }
            );
          },
        };
        return (
          ["left", "right", "top", "bottom"].forEach((vt) => {
            const Nt =
              -1 !== ["left", "top", "start"].indexOf(vt)
                ? Xe.primary
                : Xe.secondary;
            z.offsets.target = { ...z.offsets.target, ...Nt(vt) };
          }),
          z
        );
      }
      function rn(z) {
        const le = z.placement,
          be = le.split(" ")[0],
          Q = le.split(" ")[1];
        if (Q) {
          const { host: ae, target: W } = z.offsets,
            ee = -1 !== ["bottom", "top"].indexOf(be),
            Ee = ee ? "left" : "top",
            Xe = ee ? "width" : "height",
            vt = {
              start: { [Ee]: ae[Ee] },
              end: { [Ee]: (ae[Ee] ?? 0) + ae[Xe] - W[Xe] },
            };
          z.offsets.target = {
            ...W,
            [Ee]: Ee === Q ? vt.start[Ee] : vt.end[Ee],
          };
        }
        return z;
      }
      const cr = new (class Yn {
        position(le, be) {
          return this.offset(le, be);
        }
        offset(le, be) {
          return Dr(be, le);
        }
        positionElements(le, be, Q, ae, W) {
          const ee = [wn, rn, wr, gi],
            Xe = (function Yr(z, le, be, Q) {
              if (!z || !le) return;
              const ae = Dr(z, le);
              !be.match(/^(auto)*\s*(left|right|top|bottom|start|end)*$/) &&
                !be.match(
                  /^(left|right|top|bottom|start|end)*(?: (left|right|top|bottom|start|end))*$/
                ) &&
                (be = "auto");
              const W = !!be.match(/auto/g);
              let ee = be.match(/auto\s(left|right|top|bottom|start|end)/)
                ? be.split(" ")[1] || "auto"
                : be;
              const Ee = ee.match(
                /^(left|right|top|bottom|start|end)* ?(?!\1)(left|right|top|bottom|start|end)?/
              );
              return (
                Ee && (ee = Ee[1] + (Ee[2] ? ` ${Ee[2]}` : "")),
                -1 !==
                  [
                    "left right",
                    "right left",
                    "top bottom",
                    "bottom top",
                  ].indexOf(ee) && (ee = "auto"),
                (ee = Er(ee, ae, z, le, Q ? Q.allowedPositions : void 0)),
                {
                  options: Q || { modifiers: {} },
                  instance: { target: z, host: le, arrow: void 0 },
                  offsets: { target: Bn(z, ae, ee), host: ae, arrow: void 0 },
                  positionFixed: !1,
                  placement: ee,
                  placementAuto: W,
                }
              );
            })(be, le, Ot[Q], W);
          if (Xe) return ee.reduce((vt, Nt) => Nt(vt), Xe);
        }
      })();
      function Cr(z, le, be, Q, ae, W) {
        const ee = cr.positionElements(z, le, be, Q, ae);
        if (!ee) return;
        const Ee = (function pr(z) {
          return {
            width: z.offsets.target.width,
            height: z.offsets.target.height,
            left: Math.floor(z.offsets.target.left ?? 0),
            top: Math.round(z.offsets.target.top ?? 0),
            bottom: Math.round(z.offsets.target.bottom ?? 0),
            right: Math.floor(z.offsets.target.right ?? 0),
          };
        })(ee);
        _n(
          le,
          {
            "will-change": "transform",
            top: "0px",
            left: "0px",
            transform: `translate3d(${Ee.left}px, ${Ee.top}px, 0px)`,
          },
          W
        ),
          ee.instance.arrow && _n(ee.instance.arrow, ee.offsets.arrow, W),
          (function lr(z, le) {
            const be = z.instance.target;
            let Q = be.className;
            const ae = (0, l.Wl)().isBs5 ? qe[z.placement] : z.placement;
            z.placementAuto &&
              ((Q = Q.replace(/bs-popover-auto/g, `bs-popover-${ae}`)),
              (Q = Q.replace(/ms-2|me-2|mb-2|mt-2/g, "")),
              (Q = Q.replace(/bs-tooltip-auto/g, `bs-tooltip-${ae}`)),
              (Q = Q.replace(/\sauto/g, ` ${ae}`)),
              -1 !== Q.indexOf("popover") &&
                (Q =
                  Q +
                  " " +
                  (function Vn(z) {
                    return (0, l.Wl)().isBs5
                      ? Wr(z, "end")
                        ? "ms-2"
                        : Wr(z, "start")
                        ? "me-2"
                        : Wr(z, "top")
                        ? "mb-2"
                        : Wr(z, "bottom")
                        ? "mt-2"
                        : ""
                      : "";
                  })(ae)),
              -1 !== Q.indexOf("popover") &&
                -1 === Q.indexOf("popover-auto") &&
                (Q += " popover-auto"),
              -1 !== Q.indexOf("tooltip") &&
                -1 === Q.indexOf("tooltip-auto") &&
                (Q += " tooltip-auto")),
              (Q = Q.replace(
                /left|right|top|bottom|end|start/g,
                `${ae.split(" ")[0]}`
              )),
              le ? le.setAttribute(be, "class", Q) : (be.className = Q);
          })(ee, W);
      }
      let Tr = (() => {
        class z {
          constructor(be, Q, ae) {
            (this.update$$ = new Me.x()),
              (this.positionElements = new Map()),
              (this.isDisabled = !1),
              (0, B.NF)(ae) &&
                be.runOutsideAngular(() => {
                  (this.triggerEvent$ = (0, _e.T)(
                    ot(window, "scroll", { passive: !0 }),
                    ot(window, "resize", { passive: !0 }),
                    (0, $e.of)(0, In),
                    this.update$$
                  )),
                    this.triggerEvent$.subscribe(() => {
                      this.isDisabled ||
                        this.positionElements.forEach((W) => {
                          Cr(
                            ur(W.target),
                            ur(W.element),
                            W.attachment,
                            W.appendToBody,
                            this.options,
                            Q.createRenderer(null, null)
                          );
                        });
                    });
                });
          }
          position(be) {
            this.addPositionElement(be);
          }
          get event$() {
            return this.triggerEvent$;
          }
          disable() {
            this.isDisabled = !0;
          }
          enable() {
            this.isDisabled = !1;
          }
          addPositionElement(be) {
            this.positionElements.set(ur(be.element), be);
          }
          calcPosition() {
            this.update$$.next(null);
          }
          deletePositionElement(be) {
            this.positionElements.delete(ur(be));
          }
          setOptions(be) {
            this.options = be;
          }
          static #e = (this.ɵfac = function (Q) {
            return new (Q || z)(L.LFG(L.R0b), L.LFG(L.FYo), L.LFG(L.Lbi));
          });
          static #t = (this.ɵprov = L.Yz7({
            token: z,
            factory: z.ɵfac,
            providedIn: "root",
          }));
        }
        return z;
      })();
      function ur(z) {
        return "string" == typeof z
          ? document.querySelector(z)
          : z instanceof L.SBq
          ? z.nativeElement
          : z ?? null;
      }
    },
    3161: (Lt, Fe, N) => {
      N.d(Fe, {
        C: () => Ie,
        Rg: () => we,
        Su: () => Ne,
        Wl: () => me,
        cQ: () => At,
        tj: () => xe,
        wo: () => _e,
      });
      class l {
        constructor(qe, re) {
          (this.open = qe), (this.close = re || qe);
        }
        isManual() {
          return "manual" === this.open || "manual" === this.close;
        }
      }
      const L = {
        hover: ["mouseover", "mouseout"],
        focus: ["focusin", "focusout"],
      };
      function _e(Ot, qe) {
        const re = (function B(Ot, qe = L) {
            const re = (Ot || "").trim();
            if (0 === re.length) return [];
            const ue = re
                .split(/\s+/)
                .map((Pe) => Pe.split(":"))
                .map((Pe) => {
                  const tt = qe[Pe[0]] || Pe;
                  return new l(tt[0], tt[1]);
                }),
              Oe = ue.filter((Pe) => Pe.isManual());
            if (Oe.length > 1)
              throw new Error(
                "Triggers parse error: only one manual trigger is allowed"
              );
            if (1 === Oe.length && ue.length > 1)
              throw new Error(
                "Triggers parse error: manual trigger can't be mixed with other triggers"
              );
            return ue;
          })(qe.triggers),
          ue = qe.target;
        if (1 === re.length && re[0].isManual()) return Function.prototype;
        const Oe = [],
          Pe = [],
          tt = () => {
            Pe.forEach((lt) => Oe.push(lt())), (Pe.length = 0);
          };
        return (
          re.forEach((lt) => {
            const Bt = lt.open === lt.close,
              an = Bt ? qe.toggle : qe.show;
            if (!Bt && lt.close && qe.hide) {
              const Tn = lt.close,
                Pt = qe.hide;
              Pe.push(() => Ot.listen(ue, Tn, Pt));
            }
            an && Oe.push(Ot.listen(ue, lt.open, () => an(tt)));
          }),
          () => {
            Oe.forEach((lt) => lt());
          }
        );
      }
      function we(Ot, qe) {
        return qe.outsideClick
          ? Ot.listen("document", "click", (re) => {
              (qe.target && qe.target.contains(re.target)) ||
                (qe.targets &&
                  qe.targets.some((ue) => ue.contains(re.target))) ||
                (qe.hide && qe.hide());
            })
          : Function.prototype;
      }
      function Ie(Ot, qe) {
        return qe.outsideEsc
          ? Ot.listen("document", "keyup.esc", (re) => {
              (qe.target && qe.target.contains(re.target)) ||
                (qe.targets &&
                  qe.targets.some((ue) => ue.contains(re.target))) ||
                (qe.hide && qe.hide());
            })
          : Function.prototype;
      }
      const Re = (typeof window < "u" && window) || {},
        xe = Re.document;
      var $e = (function (Ot) {
        return (Ot.isBs4 = "bs4"), (Ot.isBs5 = "bs5"), Ot;
      })($e || {});
      let K;
      function Se() {
        const Ot = Re.document.createElement("span");
        (Ot.innerText = "testing bs version"),
          Ot.classList.add("d-none"),
          Ot.classList.add("pl-1"),
          Re.document.head.appendChild(Ot);
        const qe = Re.getComputedStyle(Ot).paddingLeft;
        return qe && parseFloat(qe)
          ? (Re.document.head.removeChild(Ot), "bs4")
          : (Re.document.head.removeChild(Ot), "bs5");
      }
      function me() {
        return {
          isBs4: (K || (K = Se()), "bs4" === K),
          isBs5: (K || (K = Se()), "bs5" === K),
        };
      }
      class Ne {
        constructor() {
          (this.length = 0), (this.asArray = []);
        }
        get(qe) {
          if (0 === this.length || qe < 0 || qe >= this.length) return;
          let re = this.head;
          for (let ue = 0; ue < qe; ue++) re = re?.next;
          return re?.value;
        }
        add(qe, re = this.length) {
          if (re < 0 || re > this.length)
            throw new Error("Position is out of the list");
          const ue = { value: qe, next: void 0, previous: void 0 };
          if (0 === this.length)
            (this.head = ue), (this.tail = ue), (this.current = ue);
          else if (0 === re && this.head)
            (ue.next = this.head), (this.head.previous = ue), (this.head = ue);
          else if (re === this.length && this.tail)
            (this.tail.next = ue), (ue.previous = this.tail), (this.tail = ue);
          else {
            const Oe = this.getNode(re - 1),
              Pe = Oe?.next;
            Oe &&
              Pe &&
              ((Oe.next = ue),
              (Pe.previous = ue),
              (ue.previous = Oe),
              (ue.next = Pe));
          }
          this.length++, this.createInternalArrayRepresentation();
        }
        remove(qe = 0) {
          if (0 === this.length || qe < 0 || qe >= this.length)
            throw new Error("Position is out of the list");
          if (0 === qe && this.head)
            (this.head = this.head.next),
              this.head ? (this.head.previous = void 0) : (this.tail = void 0);
          else if (qe === this.length - 1 && this.tail?.previous)
            (this.tail = this.tail.previous), (this.tail.next = void 0);
          else {
            const re = this.getNode(qe);
            re?.next &&
              re.previous &&
              ((re.next.previous = re.previous), (re.previous.next = re.next));
          }
          this.length--, this.createInternalArrayRepresentation();
        }
        set(qe, re) {
          if (0 === this.length || qe < 0 || qe >= this.length)
            throw new Error("Position is out of the list");
          const ue = this.getNode(qe);
          ue && ((ue.value = re), this.createInternalArrayRepresentation());
        }
        toArray() {
          return this.asArray;
        }
        findAll(qe) {
          let re = this.head;
          const ue = [];
          if (!re) return ue;
          for (let Oe = 0; Oe < this.length; Oe++) {
            if (!re) return ue;
            qe(re.value, Oe) && ue.push({ index: Oe, value: re.value }),
              (re = re.next);
          }
          return ue;
        }
        push(...qe) {
          return (
            qe.forEach((re) => {
              this.add(re);
            }),
            this.length
          );
        }
        pop() {
          if (0 === this.length) return;
          const qe = this.tail;
          return this.remove(this.length - 1), qe?.value;
        }
        unshift(...qe) {
          return (
            qe.reverse(),
            qe.forEach((re) => {
              this.add(re, 0);
            }),
            this.length
          );
        }
        shift() {
          if (0 === this.length) return;
          const qe = this.head?.value;
          return this.remove(), qe;
        }
        forEach(qe) {
          let re = this.head;
          for (let ue = 0; ue < this.length; ue++) {
            if (!re) return;
            qe(re.value, ue), (re = re.next);
          }
        }
        indexOf(qe) {
          let re = this.head,
            ue = -1;
          for (let Oe = 0; Oe < this.length; Oe++) {
            if (!re) return ue;
            if (re.value === qe) {
              ue = Oe;
              break;
            }
            re = re.next;
          }
          return ue;
        }
        some(qe) {
          let re = this.head,
            ue = !1;
          for (; re && !ue; ) {
            if (qe(re.value)) {
              ue = !0;
              break;
            }
            re = re.next;
          }
          return ue;
        }
        every(qe) {
          let re = this.head,
            ue = !0;
          for (; re && ue; ) qe(re.value) || (ue = !1), (re = re.next);
          return ue;
        }
        toString() {
          return "[Linked List]";
        }
        find(qe) {
          let re = this.head;
          for (let ue = 0; ue < this.length; ue++) {
            if (!re) return;
            if (qe(re.value, ue)) return re.value;
            re = re.next;
          }
        }
        findIndex(qe) {
          let re = this.head;
          for (let ue = 0; ue < this.length; ue++) {
            if (!re) return -1;
            if (qe(re.value, ue)) return ue;
            re = re.next;
          }
          return -1;
        }
        getNode(qe) {
          if (0 === this.length || qe < 0 || qe >= this.length)
            throw new Error("Position is out of the list");
          let re = this.head;
          for (let ue = 0; ue < qe; ue++) re = re?.next;
          return re;
        }
        createInternalArrayRepresentation() {
          const qe = [];
          let re = this.head;
          for (; re; ) qe.push(re.value), (re = re.next);
          this.asArray = qe;
        }
      }
      class At {
        static reflow(qe) {}
        static getStyles(qe) {
          let re = qe.ownerDocument.defaultView;
          return (!re || !re.opener) && (re = Re), re.getComputedStyle(qe);
        }
        static stackOverflowConfig() {
          const qe = (function dt() {
            const Ot = me(),
              qe = Object.keys(Ot).find((re) => Ot[re]);
            return $e[qe];
          })();
          return {
            crossorigin: "anonymous",
            integrity:
              "bs5" === qe
                ? "sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65"
                : "sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2",
            cdnLink:
              "bs5" === qe
                ? "https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css"
                : "https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css",
          };
        }
      }
      typeof console > "u" || console;
    },
    8672: (Lt, Fe, N) => {
      N.d(Fe, { Ro: () => Se, ef: () => J, t2: () => It });
      var l = N(4769),
        L = N(5619),
        B = N(8645),
        Me = N(2181),
        _e = N(9773),
        we = N(6825),
        Ie = N(6814),
        Re = N(6593);
      const xe = ["overlay"];
      function oe(De, ye) {
        1 & De && l._UZ(0, "div");
      }
      function ge(De, ye) {
        if (
          (1 & De && (l.TgZ(0, "div"), l.YNc(1, oe, 1, 0, "div", 6), l.qZA()),
          2 & De)
        ) {
          const me = l.oxw(2);
          l.Tol(me.spinner.class),
            l.Udp("color", me.spinner.color),
            l.xp6(1),
            l.Q6J("ngForOf", me.spinner.divArray);
        }
      }
      function Be(De, ye) {
        if ((1 & De && (l._UZ(0, "div", 7), l.ALo(1, "safeHtml")), 2 & De)) {
          const me = l.oxw(2);
          l.Q6J("innerHTML", l.lcZ(1, 1, me.template), l.oJD);
        }
      }
      function et(De, ye) {
        if (
          (1 & De &&
            (l.TgZ(0, "div", 1, 2),
            l.YNc(2, ge, 2, 5, "div", 3),
            l.YNc(3, Be, 2, 3, "div", 4),
            l.TgZ(4, "div", 5),
            l.Hsn(5),
            l.qZA()()),
          2 & De)
        ) {
          const me = l.oxw();
          l.Udp("background-color", me.spinner.bdColor)(
            "z-index",
            me.spinner.zIndex
          )("position", me.spinner.fullScreen ? "fixed" : "absolute"),
            l.Q6J("@.disabled", me.disableAnimation)("@fadeIn", "in"),
            l.xp6(2),
            l.Q6J("ngIf", !me.template),
            l.xp6(1),
            l.Q6J("ngIf", me.template),
            l.xp6(1),
            l.Udp("z-index", me.spinner.zIndex);
        }
      }
      const Ye = ["*"],
        ot = {
          "ball-8bits": 16,
          "ball-atom": 4,
          "ball-beat": 3,
          "ball-circus": 5,
          "ball-climbing-dot": 4,
          "ball-clip-rotate": 1,
          "ball-clip-rotate-multiple": 2,
          "ball-clip-rotate-pulse": 2,
          "ball-elastic-dots": 5,
          "ball-fall": 3,
          "ball-fussion": 4,
          "ball-grid-beat": 9,
          "ball-grid-pulse": 9,
          "ball-newton-cradle": 4,
          "ball-pulse": 3,
          "ball-pulse-rise": 5,
          "ball-pulse-sync": 3,
          "ball-rotate": 1,
          "ball-running-dots": 5,
          "ball-scale": 1,
          "ball-scale-multiple": 3,
          "ball-scale-pulse": 2,
          "ball-scale-ripple": 1,
          "ball-scale-ripple-multiple": 3,
          "ball-spin": 8,
          "ball-spin-clockwise": 8,
          "ball-spin-clockwise-fade": 8,
          "ball-spin-clockwise-fade-rotating": 8,
          "ball-spin-fade": 8,
          "ball-spin-fade-rotating": 8,
          "ball-spin-rotate": 2,
          "ball-square-clockwise-spin": 8,
          "ball-square-spin": 8,
          "ball-triangle-path": 3,
          "ball-zig-zag": 2,
          "ball-zig-zag-deflect": 2,
          cog: 1,
          "cube-transition": 2,
          fire: 3,
          "line-scale": 5,
          "line-scale-party": 5,
          "line-scale-pulse-out": 5,
          "line-scale-pulse-out-rapid": 5,
          "line-spin-clockwise-fade": 8,
          "line-spin-clockwise-fade-rotating": 8,
          "line-spin-fade": 8,
          "line-spin-fade-rotating": 8,
          pacman: 6,
          "square-jelly-box": 2,
          "square-loader": 1,
          "square-spin": 1,
          timer: 1,
          "triangle-skew-spin": 1,
        },
        Ue = "primary";
      class st {
        constructor(ye) {
          Object.assign(this, ye);
        }
        static create(ye) {
          return (
            !ye?.template &&
              !ye?.type &&
              console.warn(
                '[ngx-spinner]: Property "type" is missed. Please, provide animation type to <ngx-spinner> component\n        and ensure css is added to angular.json file'
              ),
            new st(ye)
          );
        }
      }
      let It = (() => {
        class De {
          constructor() {
            this.spinnerObservable = new L.X(null);
          }
          getSpinner(me) {
            return this.spinnerObservable
              .asObservable()
              .pipe((0, Me.h)((dt) => dt && dt.name === me));
          }
          show(me = Ue, dt) {
            return new Promise((Ne, Mt) => {
              setTimeout(() => {
                dt && Object.keys(dt).length
                  ? ((dt.name = me),
                    this.spinnerObservable.next(new st({ ...dt, show: !0 })),
                    Ne(!0))
                  : (this.spinnerObservable.next(
                      new st({ name: me, show: !0 })
                    ),
                    Ne(!0));
              }, 10);
            });
          }
          hide(me = Ue, dt = 10) {
            return new Promise((Ne, Mt) => {
              setTimeout(() => {
                this.spinnerObservable.next(new st({ name: me, show: !1 })),
                  Ne(!0);
              }, dt);
            });
          }
          static #e = (this.ɵfac = function (dt) {
            return new (dt || De)();
          });
          static #t = (this.ɵprov = l.Yz7({
            token: De,
            factory: De.ɵfac,
            providedIn: "root",
          }));
        }
        return De;
      })();
      const $e = new l.OlP("NGX_SPINNER_CONFIG");
      let K = (() => {
          class De {
            constructor(me) {
              this._sanitizer = me;
            }
            transform(me) {
              if (me) return this._sanitizer.bypassSecurityTrustHtml(me);
            }
            static #e = (this.ɵfac = function (dt) {
              return new (dt || De)(l.Y36(Re.H7, 16));
            });
            static #t = (this.ɵpipe = l.Yjl({
              name: "safeHtml",
              type: De,
              pure: !0,
            }));
          }
          return De;
        })(),
        Se = (() => {
          class De {
            constructor(me, dt, Ne, Mt) {
              (this.spinnerService = me),
                (this.changeDetector = dt),
                (this.elementRef = Ne),
                (this.globalConfig = Mt),
                (this.disableAnimation = !1),
                (this.spinner = new st()),
                (this.ngUnsubscribe = new B.x()),
                (this.setDefaultOptions = () => {
                  const { type: At } = this.globalConfig ?? {};
                  this.spinner = st.create({
                    name: this.name,
                    bdColor: this.bdColor,
                    size: this.size,
                    color: this.color,
                    type: this.type ?? At,
                    fullScreen: this.fullScreen,
                    divArray: this.divArray,
                    divCount: this.divCount,
                    show: this.show,
                    zIndex: this.zIndex,
                    template: this.template,
                    showSpinner: this.showSpinner,
                  });
                }),
                (this.bdColor = "rgba(51,51,51,0.8)"),
                (this.zIndex = 99999),
                (this.color = "#fff"),
                (this.size = "large"),
                (this.fullScreen = !0),
                (this.name = Ue),
                (this.template = null),
                (this.showSpinner = !1),
                (this.divArray = []),
                (this.divCount = 0),
                (this.show = !1);
            }
            initObservable() {
              this.spinnerService
                .getSpinner(this.name)
                .pipe((0, _e.R)(this.ngUnsubscribe))
                .subscribe((me) => {
                  this.setDefaultOptions(),
                    Object.assign(this.spinner, me),
                    me.show && this.onInputChange(),
                    this.changeDetector.detectChanges();
                });
            }
            ngOnInit() {
              this.setDefaultOptions(), this.initObservable();
            }
            isSpinnerZone(me) {
              return (
                me === this.elementRef.nativeElement.parentElement ||
                (me.parentNode && this.isSpinnerZone(me.parentNode))
              );
            }
            ngOnChanges(me) {
              for (const dt in me)
                if (dt) {
                  const Ne = me[dt];
                  if (Ne.isFirstChange()) return;
                  typeof Ne.currentValue < "u" &&
                    Ne.currentValue !== Ne.previousValue &&
                    "" !== Ne.currentValue &&
                    ((this.spinner[dt] = Ne.currentValue),
                    "showSpinner" === dt &&
                      (Ne.currentValue
                        ? this.spinnerService.show(
                            this.spinner.name,
                            this.spinner
                          )
                        : this.spinnerService.hide(this.spinner.name)),
                    "name" === dt && this.initObservable());
                }
            }
            getClass(me, dt) {
              (this.spinner.divCount = ot[me]),
                (this.spinner.divArray = Array(this.spinner.divCount)
                  .fill(0)
                  .map((Mt, At) => At));
              let Ne = "";
              switch (dt.toLowerCase()) {
                case "small":
                  Ne = "la-sm";
                  break;
                case "medium":
                  Ne = "la-2x";
                  break;
                case "large":
                  Ne = "la-3x";
              }
              return "la-" + me + " " + Ne;
            }
            onInputChange() {
              this.spinner.class = this.getClass(
                this.spinner.type,
                this.spinner.size
              );
            }
            ngOnDestroy() {
              this.ngUnsubscribe.next(), this.ngUnsubscribe.complete();
            }
            static #e = (this.ɵfac = function (dt) {
              return new (dt || De)(
                l.Y36(It),
                l.Y36(l.sBO),
                l.Y36(l.SBq),
                l.Y36($e, 8)
              );
            });
            static #t = (this.ɵcmp = l.Xpm({
              type: De,
              selectors: [["ngx-spinner"]],
              viewQuery: function (dt, Ne) {
                if ((1 & dt && l.Gf(xe, 5), 2 & dt)) {
                  let Mt;
                  l.iGM((Mt = l.CRH())) && (Ne.spinnerDOM = Mt.first);
                }
              },
              inputs: {
                bdColor: "bdColor",
                size: "size",
                color: "color",
                type: "type",
                fullScreen: "fullScreen",
                name: "name",
                zIndex: "zIndex",
                template: "template",
                showSpinner: "showSpinner",
                disableAnimation: "disableAnimation",
              },
              features: [l.TTD],
              ngContentSelectors: Ye,
              decls: 1,
              vars: 1,
              consts: [
                [
                  "class",
                  "ngx-spinner-overlay",
                  3,
                  "background-color",
                  "z-index",
                  "position",
                  4,
                  "ngIf",
                ],
                [1, "ngx-spinner-overlay"],
                ["overlay", ""],
                [3, "class", "color", 4, "ngIf"],
                [3, "innerHTML", 4, "ngIf"],
                [1, "loading-text"],
                [4, "ngFor", "ngForOf"],
                [3, "innerHTML"],
              ],
              template: function (dt, Ne) {
                1 & dt && (l.F$t(), l.YNc(0, et, 6, 12, "div", 0)),
                  2 & dt && l.Q6J("ngIf", Ne.spinner.show);
              },
              dependencies: [Ie.sg, Ie.O5, K],
              styles: [
                ".ngx-spinner-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%}.ngx-spinner-overlay[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:not(.loading-text){top:50%;left:50%;margin:0;position:absolute;transform:translate(-50%,-50%)}.loading-text[_ngcontent-%COMP%]{position:absolute;top:60%;left:50%;transform:translate(-50%,-60%)}",
              ],
              data: {
                animation: [
                  (0, we.X$)("fadeIn", [
                    (0, we.SB)("in", (0, we.oB)({ opacity: 1 })),
                    (0, we.eR)(":enter", [
                      (0, we.oB)({ opacity: 0 }),
                      (0, we.jt)(300),
                    ]),
                    (0, we.eR)(
                      ":leave",
                      (0, we.jt)(200, (0, we.oB)({ opacity: 0 }))
                    ),
                  ]),
                ],
              },
              changeDetection: 0,
            }));
          }
          return De;
        })(),
        J = (() => {
          class De {
            static forRoot(me) {
              return {
                ngModule: De,
                providers: [{ provide: $e, useValue: me }],
              };
            }
            static #e = (this.ɵfac = function (dt) {
              return new (dt || De)();
            });
            static #t = (this.ɵmod = l.oAB({ type: De }));
            static #n = (this.ɵinj = l.cJS({ imports: [Ie.ez] }));
          }
          return De;
        })();
    },
    7582: (Lt, Fe, N) => {
      function Be(re, ue, Oe, Pe) {
        return new (Oe || (Oe = Promise))(function (lt, Bt) {
          function an(ln) {
            try {
              Pt(Pe.next(ln));
            } catch (Kt) {
              Bt(Kt);
            }
          }
          function Tn(ln) {
            try {
              Pt(Pe.throw(ln));
            } catch (Kt) {
              Bt(Kt);
            }
          }
          function Pt(ln) {
            ln.done
              ? lt(ln.value)
              : (function tt(lt) {
                  return lt instanceof Oe
                    ? lt
                    : new Oe(function (Bt) {
                        Bt(lt);
                      });
                })(ln.value).then(an, Tn);
          }
          Pt((Pe = Pe.apply(re, ue || [])).next());
        });
      }
      function K(re) {
        return this instanceof K ? ((this.v = re), this) : new K(re);
      }
      function Se(re, ue, Oe) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var tt,
          Pe = Oe.apply(re, ue || []),
          lt = [];
        return (
          (tt = {}),
          Bt("next"),
          Bt("throw"),
          Bt("return"),
          (tt[Symbol.asyncIterator] = function () {
            return this;
          }),
          tt
        );
        function Bt(Ge) {
          Pe[Ge] &&
            (tt[Ge] = function (Qe) {
              return new Promise(function (ce, He) {
                lt.push([Ge, Qe, ce, He]) > 1 || an(Ge, Qe);
              });
            });
        }
        function an(Ge, Qe) {
          try {
            !(function Tn(Ge) {
              Ge.value instanceof K
                ? Promise.resolve(Ge.value.v).then(Pt, ln)
                : Kt(lt[0][2], Ge);
            })(Pe[Ge](Qe));
          } catch (ce) {
            Kt(lt[0][3], ce);
          }
        }
        function Pt(Ge) {
          an("next", Ge);
        }
        function ln(Ge) {
          an("throw", Ge);
        }
        function Kt(Ge, Qe) {
          Ge(Qe), lt.shift(), lt.length && an(lt[0][0], lt[0][1]);
        }
      }
      function De(re) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var Oe,
          ue = re[Symbol.asyncIterator];
        return ue
          ? ue.call(re)
          : ((re = (function pt(re) {
              var ue = "function" == typeof Symbol && Symbol.iterator,
                Oe = ue && re[ue],
                Pe = 0;
              if (Oe) return Oe.call(re);
              if (re && "number" == typeof re.length)
                return {
                  next: function () {
                    return (
                      re && Pe >= re.length && (re = void 0),
                      { value: re && re[Pe++], done: !re }
                    );
                  },
                };
              throw new TypeError(
                ue
                  ? "Object is not iterable."
                  : "Symbol.iterator is not defined."
              );
            })(re)),
            (Oe = {}),
            Pe("next"),
            Pe("throw"),
            Pe("return"),
            (Oe[Symbol.asyncIterator] = function () {
              return this;
            }),
            Oe);
        function Pe(lt) {
          Oe[lt] =
            re[lt] &&
            function (Bt) {
              return new Promise(function (an, Tn) {
                !(function tt(lt, Bt, an, Tn) {
                  Promise.resolve(Tn).then(function (Pt) {
                    lt({ value: Pt, done: an });
                  }, Bt);
                })(an, Tn, (Bt = re[lt](Bt)).done, Bt.value);
              });
            };
        }
      }
      N.d(Fe, { FC: () => Se, KL: () => De, mG: () => Be, qq: () => K }),
        "function" == typeof SuppressedError && SuppressedError;
    },
  },
  (Lt) => {
    Lt((Lt.s = 4491));
  },
]);
